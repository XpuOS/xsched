/// This file is auto-generated by command "python3 tools/autogen/gen.py --source platforms/ascend/hal/include/xsched/ascend/hal/acl.h --lib /usr/local/Ascend/ascend-toolkit/latest/aarch64-linux/lib64/libascendcl.so --platform ascend --prefix acl"
#include "xsched/utils/function.h"
#include "xsched/ascend/shim/shim.h"
#include "xsched/ascend/hal/driver.h"

using namespace xsched::ascend;

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Float16ToFloat, float, aclFloat16ToFloat, aclFloat16, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FloatToFloat16, aclFloat16, aclFloatToFloat16, float, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateDataBuffer, aclDataBuffer *, aclCreateDataBuffer, void *, data, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(XDestroyDataBuffer, aclError, aclDestroyDataBuffer, const aclDataBuffer *, dataBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UpdateDataBuffer, aclError, aclUpdateDataBuffer, aclDataBuffer *, dataBuffer, void *, data, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDataBufferAddr, void *, aclGetDataBufferAddr, const aclDataBuffer *, dataBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDataBufferSize, uint32_t, aclGetDataBufferSize, const aclDataBuffer *, dataBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDataBufferSizeV2, size_t, aclGetDataBufferSizeV2, const aclDataBuffer *, dataBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DataTypeSize, size_t, aclDataTypeSize, aclDataType, dataType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateTensorDesc, aclTensorDesc *, aclCreateTensorDesc, aclDataType, dataType, int, numDims, const int64_t *, dims, aclFormat, format);
DEFINE_EXPORT_C_REDIRECT_CALL(XDestroyTensorDesc, void, aclDestroyTensorDesc, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorShapeRange, aclError, aclSetTensorShapeRange, aclTensorDesc *, desc, size_t, dimsCount, aclSetTensorShapeRange_arg2_t, dimsRange);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorValueRange, aclError, aclSetTensorValueRange, aclTensorDesc *, desc, size_t, valueCount, aclSetTensorValueRange_arg2_t, valueRange);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescType, aclDataType, aclGetTensorDescType, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescFormat, aclFormat, aclGetTensorDescFormat, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescSize, size_t, aclGetTensorDescSize, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescElementCount, size_t, aclGetTensorDescElementCount, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescNumDims, size_t, aclGetTensorDescNumDims, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescDim, int64_t, aclGetTensorDescDim, const aclTensorDesc *, desc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescDimV2, aclError, aclGetTensorDescDimV2, const aclTensorDesc *, desc, size_t, index, int64_t *, dimSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescDimRange, aclError, aclGetTensorDescDimRange, const aclTensorDesc *, desc, size_t, index, size_t, dimRangeNum, int64_t *, dimRange);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorDescName, void, aclSetTensorDescName, aclTensorDesc *, desc, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescName, const char *, aclGetTensorDescName, aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TransTensorDescFormat, aclError, aclTransTensorDescFormat, const aclTensorDesc *, srcDesc, aclFormat, dstFormat, aclTensorDesc **, dstDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorStorageFormat, aclError, aclSetTensorStorageFormat, aclTensorDesc *, desc, aclFormat, format);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorStorageShape, aclError, aclSetTensorStorageShape, aclTensorDesc *, desc, int, numDims, const int64_t *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorFormat, aclError, aclSetTensorFormat, aclTensorDesc *, desc, aclFormat, format);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorShape, aclError, aclSetTensorShape, aclTensorDesc *, desc, int, numDims, const int64_t *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorOriginFormat, aclError, aclSetTensorOriginFormat, aclTensorDesc *, desc, aclFormat, format);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorOriginShape, aclError, aclSetTensorOriginShape, aclTensorDesc *, desc, int, numDims, const int64_t *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescByIndex, aclTensorDesc *, aclGetTensorDescByIndex, aclTensorDesc *, desc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTensorDescAddress, void *, aclGetTensorDescAddress, const aclTensorDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorDynamicInput, aclError, aclSetTensorDynamicInput, aclTensorDesc *, desc, const char *, dynamicInputName);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorConst, aclError, aclSetTensorConst, aclTensorDesc *, desc, void *, dataBuffer, size_t, length);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetTensorPlaceMent, aclError, aclSetTensorPlaceMent, aclTensorDesc *, desc, aclMemType, memType);
// DEFINE_EXPORT_C_REDIRECT_CALL(Driver::AppLog, void, aclAppLog, aclLogLevel, logLevel, const char *, func, const char *, file, uint32_t, line, const char *, fmt); // va not supported
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetSocName, const char *, aclrtGetSocName);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetCannAttributeList, aclError, aclGetCannAttributeList, const aclCannAttr **, cannAttrList, size_t *, num);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetCannAttribute, aclError, aclGetCannAttribute, aclCannAttr, cannAttr, int32_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceCapability, aclError, aclGetDeviceCapability, uint32_t, deviceId, aclDeviceInfo, deviceInfo, int64_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtPeekAtLastError, aclError, aclrtPeekAtLastError, aclrtLastErrLevel, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetLastError, aclError, aclrtGetLastError, aclrtLastErrLevel, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetExceptionInfoCallback, aclError, aclrtSetExceptionInfoCallback, aclrtExceptionInfoCallback, callback);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetTaskIdFromExceptionInfo, uint32_t, aclrtGetTaskIdFromExceptionInfo, const aclrtExceptionInfo *, info);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetStreamIdFromExceptionInfo, uint32_t, aclrtGetStreamIdFromExceptionInfo, const aclrtExceptionInfo *, info);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetThreadIdFromExceptionInfo, uint32_t, aclrtGetThreadIdFromExceptionInfo, const aclrtExceptionInfo *, info);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetDeviceIdFromExceptionInfo, uint32_t, aclrtGetDeviceIdFromExceptionInfo, const aclrtExceptionInfo *, info);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetErrorCodeFromExceptionInfo, uint32_t, aclrtGetErrorCodeFromExceptionInfo, const aclrtExceptionInfo *, info);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSubscribeReport, aclError, aclrtSubscribeReport, uint64_t, threadId, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtLaunchCallback, aclError, aclrtLaunchCallback, aclrtCallback, fn, void *, userData, aclrtCallbackBlockType, blockType, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtProcessReport, aclError, aclrtProcessReport, int32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtUnSubscribeReport, aclError, aclrtUnSubscribeReport, uint64_t, threadId, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateContext, aclError, aclrtCreateContext, aclrtContext *, context, int32_t, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyContext, aclError, aclrtDestroyContext, aclrtContext, context);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetCurrentContext, aclError, aclrtSetCurrentContext, aclrtContext, context);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetCurrentContext, aclError, aclrtGetCurrentContext, aclrtContext *, context);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCtxGetSysParamOpt, aclError, aclrtCtxGetSysParamOpt, aclSysParamOpt, opt, int64_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCtxSetSysParamOpt, aclError, aclrtCtxSetSysParamOpt, aclSysParamOpt, opt, int64_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetSysParamOpt, aclError, aclrtGetSysParamOpt, aclSysParamOpt, opt, int64_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetSysParamOpt, aclError, aclrtSetSysParamOpt, aclSysParamOpt, opt, int64_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetDevice, aclError, aclrtSetDevice, int32_t, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtResetDevice, aclError, aclrtResetDevice, int32_t, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtResetDeviceForce, aclError, aclrtResetDeviceForce, int32_t, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetDevice, aclError, aclrtGetDevice, int32_t *, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetStreamFailureMode, aclError, aclrtSetStreamFailureMode, aclrtStream, stream, uint64_t, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetRunMode, aclError, aclrtGetRunMode, aclrtRunMode *, runMode);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtSynchronizeDevice, aclError, aclrtSynchronizeDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtSynchronizeDeviceWithTimeout, aclError, aclrtSynchronizeDeviceWithTimeout, int32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetTsDevice, aclError, aclrtSetTsDevice, aclrtTsId, tsId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetDeviceUtilizationRate, aclError, aclrtGetDeviceUtilizationRate, int32_t, deviceId, aclrtUtilizationInfo *, utilizationInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetDeviceCount, aclError, aclrtGetDeviceCount, uint32_t *, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateEvent, aclError, aclrtCreateEvent, aclrtEvent *, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateEventWithFlag, aclError, aclrtCreateEventWithFlag, aclrtEvent *, event, uint32_t, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateEventExWithFlag, aclError, aclrtCreateEventExWithFlag, aclrtEvent *, event, uint32_t, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyEvent, aclError, aclrtDestroyEvent, aclrtEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtRecordEvent, aclError, aclrtRecordEvent, aclrtEvent, event, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtResetEvent, aclError, aclrtResetEvent, aclrtEvent, event, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtQueryEvent, aclError, aclrtQueryEvent, aclrtEvent, event, aclrtEventStatus *, status);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtQueryEventStatus, aclError, aclrtQueryEventStatus, aclrtEvent, event, aclrtEventRecordedStatus *, status);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtQueryEventWaitStatus, aclError, aclrtQueryEventWaitStatus, aclrtEvent, event, aclrtEventWaitStatus *, status);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtSynchronizeEvent, aclError, aclrtSynchronizeEvent, aclrtEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSynchronizeEventWithTimeout, aclError, aclrtSynchronizeEventWithTimeout, aclrtEvent, event, int32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtEventElapsedTime, aclError, aclrtEventElapsedTime, float *, ms, aclrtEvent, startEvent, aclrtEvent, endEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMalloc, aclError, aclrtMalloc, void **, devPtr, size_t, size, aclrtMemMallocPolicy, policy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMallocAlign32, aclError, aclrtMallocAlign32, void **, devPtr, size_t, size, aclrtMemMallocPolicy, policy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMallocCached, aclError, aclrtMallocCached, void **, devPtr, size_t, size, aclrtMemMallocPolicy, policy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemFlush, aclError, aclrtMemFlush, void *, devPtr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemInvalidate, aclError, aclrtMemInvalidate, void *, devPtr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtFree, aclError, aclrtFree, void *, devPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMallocHost, aclError, aclrtMallocHost, void **, hostPtr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtFreeHost, aclError, aclrtFreeHost, void *, hostPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemcpy, aclError, aclrtMemcpy, void *, dst, size_t, destMax, const void *, src, size_t, count, aclrtMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemset, aclError, aclrtMemset, void *, devPtr, size_t, maxCount, int32_t, value, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtMemcpyAsync, aclError, aclrtMemcpyAsync, void *, dst, size_t, destMax, const void *, src, size_t, count, aclrtMemcpyKind, kind, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemcpyAsyncWithCondition, aclError, aclrtMemcpyAsyncWithCondition, void *, dst, size_t, destMax, const void *, src, size_t, count, aclrtMemcpyKind, kind, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemcpy2d, aclError, aclrtMemcpy2d, void *, dst, size_t, dpitch, const void *, src, size_t, spitch, size_t, width, size_t, height, aclrtMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemcpy2dAsync, aclError, aclrtMemcpy2dAsync, void *, dst, size_t, dpitch, const void *, src, size_t, spitch, size_t, width, size_t, height, aclrtMemcpyKind, kind, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtMemsetAsync, aclError, aclrtMemsetAsync, void *, devPtr, size_t, maxCount, int32_t, value, size_t, count, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtReserveMemAddress, aclError, aclrtReserveMemAddress, void **, virPtr, size_t, size, size_t, alignment, void *, expectPtr, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtReleaseMemAddress, aclError, aclrtReleaseMemAddress, void *, virPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMallocPhysical, aclError, aclrtMallocPhysical, aclrtDrvMemHandle *, handle, size_t, size, const aclrtPhysicalMemProp *, prop, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtFreePhysical, aclError, aclrtFreePhysical, aclrtDrvMemHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMapMem, aclError, aclrtMapMem, void *, virPtr, size_t, size, size_t, offset, aclrtDrvMemHandle, handle, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtUnmapMem, aclError, aclrtUnmapMem, void *, virPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtCreateStream, aclError, aclrtCreateStream, aclrtStream *, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtCreateStreamWithConfig, aclError, aclrtCreateStreamWithConfig, aclrtStream *, stream, uint32_t, priority, uint32_t, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyStream, aclError, aclrtDestroyStream, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyStreamForce, aclError, aclrtDestroyStreamForce, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtSynchronizeStream, aclError, aclrtSynchronizeStream, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XrtSynchronizeStreamWithTimeout, aclError, aclrtSynchronizeStreamWithTimeout, aclrtStream, stream, int32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtStreamQuery, aclError, aclrtStreamQuery, aclrtStream, stream, aclrtStreamStatus *, status);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtStreamWaitEvent, aclError, aclrtStreamWaitEvent, aclrtStream, stream, aclrtEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetGroup, aclError, aclrtSetGroup, int32_t, groupId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetGroupCount, aclError, aclrtGetGroupCount, uint32_t *, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateGroupInfo, aclrtGroupInfo *, aclrtCreateGroupInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyGroupInfo, aclError, aclrtDestroyGroupInfo, aclrtGroupInfo *, groupInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetAllGroupInfo, aclError, aclrtGetAllGroupInfo, aclrtGroupInfo *, groupInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetGroupInfoDetail, aclError, aclrtGetGroupInfoDetail, const aclrtGroupInfo *, groupInfo, int32_t, groupIndex, aclrtGroupAttr, attr, void *, attrValue, size_t, valueLen, size_t *, paramRetSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDeviceCanAccessPeer, aclError, aclrtDeviceCanAccessPeer, int32_t *, canAccessPeer, int32_t, deviceId, int32_t, peerDeviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDeviceEnablePeerAccess, aclError, aclrtDeviceEnablePeerAccess, int32_t, peerDeviceId, uint32_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDeviceDisablePeerAccess, aclError, aclrtDeviceDisablePeerAccess, int32_t, peerDeviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetMemInfo, aclError, aclrtGetMemInfo, aclrtMemAttr, attr, size_t *, free, size_t *, total);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetOpWaitTimeout, aclError, aclrtSetOpWaitTimeout, uint32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetOpExecuteTimeOut, aclError, aclrtSetOpExecuteTimeOut, uint32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetStreamOverflowSwitch, aclError, aclrtSetStreamOverflowSwitch, aclrtStream, stream, uint32_t, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetStreamOverflowSwitch, aclError, aclrtGetStreamOverflowSwitch, aclrtStream, stream, uint32_t *, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtSetDeviceSatMode, aclError, aclrtSetDeviceSatMode, aclrtFloatOverflowMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetDeviceSatMode, aclError, aclrtGetDeviceSatMode, aclrtFloatOverflowMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetOverflowStatus, aclError, aclrtGetOverflowStatus, void *, outputAddr, size_t, outputSize, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtResetOverflowStatus, aclError, aclrtResetOverflowStatus, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtQueryDeviceStatus, aclError, aclrtQueryDeviceStatus, int32_t, deviceId, aclrtDeviceStatus *, deviceStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCreateBinary, aclrtBinary, aclrtCreateBinary, const void *, data, size_t, dataLen);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDestroyBinary, aclError, aclrtDestroyBinary, aclrtBinary, binary);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtBinaryLoad, aclError, aclrtBinaryLoad, const aclrtBinary, binary, aclrtBinHandle *, binHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtBinaryUnLoad, aclError, aclrtBinaryUnLoad, aclrtBinHandle, binHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtBinaryGetFunction, aclError, aclrtBinaryGetFunction, const aclrtBinHandle, binHandle, const char *, kernelName, aclrtFuncHandle *, funcHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtLaunchKernel, aclError, aclrtLaunchKernel, aclrtFuncHandle, funcHandle, uint32_t, blockDim, const void *, argsData, size_t, argsSize, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemExportToShareableHandle, aclError, aclrtMemExportToShareableHandle, aclrtDrvMemHandle, handle, aclrtMemHandleType, handleType, uint64_t, flags, uint64_t *, shareableHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemImportFromShareableHandle, aclError, aclrtMemImportFromShareableHandle, uint64_t, shareableHandle, int32_t, deviceId, aclrtDrvMemHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemSetPidToShareableHandle, aclError, aclrtMemSetPidToShareableHandle, uint64_t, shareableHandle, int32_t *, pid, size_t, pidNum);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemGetAllocationGranularity, aclError, aclrtMemGetAllocationGranularity, aclrtPhysicalMemProp *, prop, aclrtMemGranularityOptions, option, size_t *, granularity);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDeviceGetBareTgid, aclError, aclrtDeviceGetBareTgid, int32_t *, pid);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtCmoAsync, aclError, aclrtCmoAsync, void *, src, size_t, size, aclrtCmoType, cmoType, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtGetMemUceInfo, aclError, aclrtGetMemUceInfo, int32_t, deviceId, aclrtMemUceInfo *, memUceInfoArray, size_t, arraySize, size_t *, retSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtDeviceTaskAbort, aclError, aclrtDeviceTaskAbort, int32_t, deviceId, uint32_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtMemUceRepair, aclError, aclrtMemUceRepair, int32_t, deviceId, aclrtMemUceInfo *, memUceInfoArray, size_t, arraySize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::rtStreamAbort, aclError, aclrtStreamAbort, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetModelDir, aclError, aclopSetModelDir, const char *, modelDir);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opLoad, aclError, aclopLoad, const void *, model, size_t, modelSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opCreateAttr, aclopAttr *, aclopCreateAttr);
DEFINE_EXPORT_C_REDIRECT_CALL(XopDestroyAttr, void, aclopDestroyAttr, const aclopAttr *, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrBool, aclError, aclopSetAttrBool, aclopAttr *, attr, const char *, attrName, uint8_t, attrValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrInt, aclError, aclopSetAttrInt, aclopAttr *, attr, const char *, attrName, int64_t, attrValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrFloat, aclError, aclopSetAttrFloat, aclopAttr *, attr, const char *, attrName, float, attrValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrString, aclError, aclopSetAttrString, aclopAttr *, attr, const char *, attrName, const char *, attrValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrDataType, aclError, aclopSetAttrDataType, aclopAttr *, attr, const char *, attrName, aclDataType, attrValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListDataType, aclError, aclopSetAttrListDataType, aclopAttr *, attr, const char *, attrName, int, numValues, aclopSetAttrListDataType_arg3_t, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListBool, aclError, aclopSetAttrListBool, aclopAttr *, attr, const char *, attrName, int, numValues, const uint8_t *, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListInt, aclError, aclopSetAttrListInt, aclopAttr *, attr, const char *, attrName, int, numValues, const int64_t *, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListFloat, aclError, aclopSetAttrListFloat, aclopAttr *, attr, const char *, attrName, int, numValues, const float *, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListString, aclError, aclopSetAttrListString, aclopAttr *, attr, const char *, attrName, int, numValues, const char **, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetAttrListListInt, aclError, aclopSetAttrListListInt, aclopAttr *, attr, const char *, attrName, int, numLists, const int *, numValues, aclopSetAttrListListInt_arg4_t, values);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opExecute, aclError, aclopExecute, const char *, opType, int, numInputs, aclopExecute_arg2_t, inputDesc, aclopExecute_arg3_t, inputs, int, numOutputs, aclopExecute_arg5_t, outputDesc, aclopExecute_arg6_t, outputs, const aclopAttr *, attr, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opExecuteV2, aclError, aclopExecuteV2, const char *, opType, int, numInputs, aclopExecuteV2_arg2_t, inputDesc, aclopExecuteV2_arg3_t, inputs, int, numOutputs, aclopExecuteV2_arg5_t, outputDesc, aclopExecuteV2_arg6_t, outputs, aclopAttr *, attr, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opCreateHandle, aclError, aclopCreateHandle, const char *, opType, int, numInputs, aclopCreateHandle_arg2_t, inputDesc, int, numOutputs, aclopCreateHandle_arg4_t, outputDesc, const aclopAttr *, opAttr, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opDestroyHandle, void, aclopDestroyHandle, aclopHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opExecWithHandle, aclError, aclopExecWithHandle, aclopHandle *, handle, int, numInputs, aclopExecWithHandle_arg2_t, inputs, int, numOutputs, aclopExecWithHandle_arg4_t, outputs, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opCast, aclError, aclopCast, const aclTensorDesc *, srcDesc, const aclDataBuffer *, srcBuffer, const aclTensorDesc *, dstDesc, aclDataBuffer *, dstBuffer, uint8_t, truncate, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opCreateHandleForCast, aclError, aclopCreateHandleForCast, aclTensorDesc *, srcDesc, aclTensorDesc *, dstDesc, uint8_t, truncate, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opCreateKernel, aclError, aclopCreateKernel, const char *, opType, const char *, kernelId, const char *, kernelName, void *, binData, int, binSize, aclopEngineType, enginetype, aclDataDeallocator, deallocator);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opRegisterCompileFunc, aclError, aclopRegisterCompileFunc, const char *, opType, aclopCompileFunc, func);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opUnregisterCompileFunc, aclError, aclopUnregisterCompileFunc, const char *, opType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetKernelArgs, aclError, aclopSetKernelArgs, aclopKernelDesc *, kernelDesc, const char *, kernelId, uint32_t, blockDim, const void *, args, uint32_t, argSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetKernelWorkspaceSizes, aclError, aclopSetKernelWorkspaceSizes, aclopKernelDesc *, kernelDesc, int, numWorkspaces, size_t *, workspaceSizes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opUpdateParams, aclError, aclopUpdateParams, const char *, opType, int, numInputs, aclopUpdateParams_arg2_t, inputDesc, int, numOutputs, aclopUpdateParams_arg4_t, outputDesc, const aclopAttr *, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opSetMaxOpQueueNum, aclError, aclopSetMaxOpQueueNum, uint64_t, maxOpNum);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::opInferShape, aclError, aclopInferShape, const char *, opType, int, numInputs, aclopInferShape_arg2_t, inputDesc, aclopInferShape_arg3_t, inputs, int, numOutputs, aclopInferShape_arg5_t, outputDesc, aclopAttr *, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateDesc, aclmdlDesc *, aclmdlCreateDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlDestroyDesc, aclError, aclmdlDestroyDesc, aclmdlDesc *, modelDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDesc, aclError, aclmdlGetDesc, aclmdlDesc *, modelDesc, uint32_t, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDescFromFile, aclError, aclmdlGetDescFromFile, aclmdlDesc *, modelDesc, const char *, modelPath);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDescFromMem, aclError, aclmdlGetDescFromMem, aclmdlDesc *, modelDesc, const void *, model, size_t, modelSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetNumInputs, size_t, aclmdlGetNumInputs, aclmdlDesc *, modelDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetNumOutputs, size_t, aclmdlGetNumOutputs, aclmdlDesc *, modelDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputSizeByIndex, size_t, aclmdlGetInputSizeByIndex, aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputSizeByIndex, size_t, aclmdlGetOutputSizeByIndex, aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateExecConfigHandle, aclmdlExecConfigHandle *, aclmdlCreateExecConfigHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlDestroyExecConfigHandle, aclError, aclmdlDestroyExecConfigHandle, const aclmdlExecConfigHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateDataset, aclmdlDataset *, aclmdlCreateDataset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlDestroyDataset, aclError, aclmdlDestroyDataset, const aclmdlDataset *, dataset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlAddDatasetBuffer, aclError, aclmdlAddDatasetBuffer, aclmdlDataset *, dataset, aclDataBuffer *, dataBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetDatasetTensorDesc, aclError, aclmdlSetDatasetTensorDesc, aclmdlDataset *, dataset, aclTensorDesc *, tensorDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDatasetTensorDesc, aclTensorDesc *, aclmdlGetDatasetTensorDesc, const aclmdlDataset *, dataset, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDatasetNumBuffers, size_t, aclmdlGetDatasetNumBuffers, const aclmdlDataset *, dataset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDatasetBuffer, aclDataBuffer *, aclmdlGetDatasetBuffer, const aclmdlDataset *, dataset, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromFile, aclError, aclmdlLoadFromFile, const char *, modelPath, uint32_t *, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlBundleLoadFromFile, aclError, aclmdlBundleLoadFromFile, const char *, modelPath, uint32_t *, bundleId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlBundleLoadFromMem, aclError, aclmdlBundleLoadFromMem, const void *, model, size_t, modelSize, uint32_t *, bundleId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlBundleUnload, aclError, aclmdlBundleUnload, uint32_t, bundleId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlBundleGetModelNum, aclError, aclmdlBundleGetModelNum, uint32_t, bundleId, size_t *, modelNum);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlBundleGetModelId, aclError, aclmdlBundleGetModelId, uint32_t, bundleId, size_t, index, uint32_t *, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromMem, aclError, aclmdlLoadFromMem, const void *, model, size_t, modelSize, uint32_t *, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromFileWithMem, aclError, aclmdlLoadFromFileWithMem, const char *, modelPath, uint32_t *, modelId, void *, workPtr, size_t, workSize, void *, weightPtr, size_t, weightSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromMemWithMem, aclError, aclmdlLoadFromMemWithMem, const void *, model, size_t, modelSize, uint32_t *, modelId, void *, workPtr, size_t, workSize, void *, weightPtr, size_t, weightSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromFileWithQ, aclError, aclmdlLoadFromFileWithQ, const char *, modelPath, uint32_t *, modelId, const uint32_t *, inputQ, size_t, inputQNum, const uint32_t *, outputQ, size_t, outputQNum);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadFromMemWithQ, aclError, aclmdlLoadFromMemWithQ, const void *, model, size_t, modelSize, uint32_t *, modelId, const uint32_t *, inputQ, size_t, inputQNum, const uint32_t *, outputQ, size_t, outputQNum);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlExecute, aclError, aclmdlExecute, uint32_t, modelId, const aclmdlDataset *, input, aclmdlDataset *, output);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlExecuteV2, aclError, aclmdlExecuteV2, uint32_t, modelId, const aclmdlDataset *, input, aclmdlDataset *, output, aclrtStream, stream, const aclmdlExecConfigHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(XmdlExecuteAsync, aclError, aclmdlExecuteAsync, uint32_t, modelId, const aclmdlDataset *, input, aclmdlDataset *, output, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlUnload, aclError, aclmdlUnload, uint32_t, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlQuerySize, aclError, aclmdlQuerySize, const char *, fileName, size_t *, workSize, size_t *, weightSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlQuerySizeFromMem, aclError, aclmdlQuerySizeFromMem, const void *, model, size_t, modelSize, size_t *, workSize, size_t *, weightSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetDynamicBatchSize, aclError, aclmdlSetDynamicBatchSize, uint32_t, modelId, aclmdlDataset *, dataset, size_t, index, uint64_t, batchSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetDynamicHWSize, aclError, aclmdlSetDynamicHWSize, uint32_t, modelId, aclmdlDataset *, dataset, size_t, index, uint64_t, height, uint64_t, width);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetInputDynamicDims, aclError, aclmdlSetInputDynamicDims, uint32_t, modelId, aclmdlDataset *, dataset, size_t, index, const aclmdlIODims *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDims, aclError, aclmdlGetInputDims, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODims *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDimsV2, aclError, aclmdlGetInputDimsV2, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODims *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDimsRange, aclError, aclmdlGetInputDimsRange, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODimsRange *, dimsRange);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputDims, aclError, aclmdlGetOutputDims, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODims *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetCurOutputDims, aclError, aclmdlGetCurOutputDims, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODims *, dims);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOpAttr, const char *, aclmdlGetOpAttr, aclmdlDesc *, modelDesc, const char *, opName, const char *, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputNameByIndex, const char *, aclmdlGetInputNameByIndex, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputNameByIndex, const char *, aclmdlGetOutputNameByIndex, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputFormat, aclFormat, aclmdlGetInputFormat, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputFormat, aclFormat, aclmdlGetOutputFormat, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDataType, aclDataType, aclmdlGetInputDataType, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputDataType, aclDataType, aclmdlGetOutputDataType, const aclmdlDesc *, modelDesc, size_t, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputIndexByName, aclError, aclmdlGetInputIndexByName, const aclmdlDesc *, modelDesc, const char *, name, size_t *, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetOutputIndexByName, aclError, aclmdlGetOutputIndexByName, const aclmdlDesc *, modelDesc, const char *, name, size_t *, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDynamicBatch, aclError, aclmdlGetDynamicBatch, const aclmdlDesc *, modelDesc, aclmdlBatch *, batch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetDynamicHW, aclError, aclmdlGetDynamicHW, const aclmdlDesc *, modelDesc, size_t, index, aclmdlHW *, hw);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDynamicGearCount, aclError, aclmdlGetInputDynamicGearCount, const aclmdlDesc *, modelDesc, size_t, index, size_t *, gearCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetInputDynamicDims, aclError, aclmdlGetInputDynamicDims, const aclmdlDesc *, modelDesc, size_t, index, aclmdlIODims *, dims, size_t, gearCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateAIPP, aclmdlAIPP *, aclmdlCreateAIPP, uint64_t, batchSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlDestroyAIPP, aclError, aclmdlDestroyAIPP, const aclmdlAIPP *, aippParmsSet);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetAippDataSize, aclError, aclmdlGetAippDataSize, uint64_t, batchSize, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPInputFormat, aclError, aclmdlSetAIPPInputFormat, aclmdlAIPP *, aippParmsSet, aclAippInputFormat, inputFormat);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPCscParams, aclError, aclmdlSetAIPPCscParams, aclmdlAIPP *, aippParmsSet, int8_t, cscSwitch, int16_t, cscMatrixR0C0, int16_t, cscMatrixR0C1, int16_t, cscMatrixR0C2, int16_t, cscMatrixR1C0, int16_t, cscMatrixR1C1, int16_t, cscMatrixR1C2, int16_t, cscMatrixR2C0, int16_t, cscMatrixR2C1, int16_t, cscMatrixR2C2, uint8_t, cscOutputBiasR0, uint8_t, cscOutputBiasR1, uint8_t, cscOutputBiasR2, uint8_t, cscInputBiasR0, uint8_t, cscInputBiasR1, uint8_t, cscInputBiasR2);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPRbuvSwapSwitch, aclError, aclmdlSetAIPPRbuvSwapSwitch, aclmdlAIPP *, aippParmsSet, int8_t, rbuvSwapSwitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPAxSwapSwitch, aclError, aclmdlSetAIPPAxSwapSwitch, aclmdlAIPP *, aippParmsSet, int8_t, axSwapSwitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPSrcImageSize, aclError, aclmdlSetAIPPSrcImageSize, aclmdlAIPP *, aippParmsSet, int32_t, srcImageSizeW, int32_t, srcImageSizeH);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPScfParams, aclError, aclmdlSetAIPPScfParams, aclmdlAIPP *, aippParmsSet, int8_t, scfSwitch, int32_t, scfInputSizeW, int32_t, scfInputSizeH, int32_t, scfOutputSizeW, int32_t, scfOutputSizeH, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPCropParams, aclError, aclmdlSetAIPPCropParams, aclmdlAIPP *, aippParmsSet, int8_t, cropSwitch, int32_t, cropStartPosW, int32_t, cropStartPosH, int32_t, cropSizeW, int32_t, cropSizeH, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPPaddingParams, aclError, aclmdlSetAIPPPaddingParams, aclmdlAIPP *, aippParmsSet, int8_t, paddingSwitch, int32_t, paddingSizeTop, int32_t, paddingSizeBottom, int32_t, paddingSizeLeft, int32_t, paddingSizeRight, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPDtcPixelMean, aclError, aclmdlSetAIPPDtcPixelMean, aclmdlAIPP *, aippParmsSet, int16_t, dtcPixelMeanChn0, int16_t, dtcPixelMeanChn1, int16_t, dtcPixelMeanChn2, int16_t, dtcPixelMeanChn3, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPDtcPixelMin, aclError, aclmdlSetAIPPDtcPixelMin, aclmdlAIPP *, aippParmsSet, float, dtcPixelMinChn0, float, dtcPixelMinChn1, float, dtcPixelMinChn2, float, dtcPixelMinChn3, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPPixelVarReci, aclError, aclmdlSetAIPPPixelVarReci, aclmdlAIPP *, aippParmsSet, float, dtcPixelVarReciChn0, float, dtcPixelVarReciChn1, float, dtcPixelVarReciChn2, float, dtcPixelVarReciChn3, uint64_t, batchIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetInputAIPP, aclError, aclmdlSetInputAIPP, uint32_t, modelId, aclmdlDataset *, dataset, size_t, index, const aclmdlAIPP *, aippParmsSet);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetAIPPByInputIndex, aclError, aclmdlSetAIPPByInputIndex, uint32_t, modelId, aclmdlDataset *, dataset, size_t, index, const aclmdlAIPP *, aippParmsSet);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetAippType, aclError, aclmdlGetAippType, uint32_t, modelId, size_t, index, aclmdlInputAippType *, type, size_t *, dynamicAttachedDataIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetFirstAippInfo, aclError, aclmdlGetFirstAippInfo, uint32_t, modelId, size_t, index, aclAippInfo *, aippInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateAndGetOpDesc, aclError, aclmdlCreateAndGetOpDesc, uint32_t, deviceId, uint32_t, streamId, uint32_t, taskId, char *, opName, size_t, opNameLen, aclTensorDesc **, inputDesc, size_t *, numInputs, aclTensorDesc **, outputDesc, size_t *, numOutputs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlInitDump, aclError, aclmdlInitDump);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetDump, aclError, aclmdlSetDump, const char *, dumpCfgPath);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlFinalizeDump, aclError, aclmdlFinalizeDump);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlLoadWithConfig, aclError, aclmdlLoadWithConfig, const aclmdlConfigHandle *, handle, uint32_t *, modelId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlCreateConfigHandle, aclmdlConfigHandle *, aclmdlCreateConfigHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlDestroyConfigHandle, aclError, aclmdlDestroyConfigHandle, aclmdlConfigHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetConfigOpt, aclError, aclmdlSetConfigOpt, aclmdlConfigHandle *, handle, aclmdlConfigAttr, attr, const void *, attrValue, size_t, valueSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlSetExecConfigOpt, aclError, aclmdlSetExecConfigOpt, aclmdlExecConfigHandle *, handle, aclmdlExecConfigAttr, attr, const void *, attrValue, size_t, valueSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::mdlGetTensorRealName, const char *, aclmdlGetTensorRealName, const aclmdlDesc *, modelDesc, const char *, name);

/// This is auto-generated by command "python3 tools/autogen/gen.py --source platforms/ascend/hal/include/xsched/ascend/hal/acl.h --lib /usr/local/Ascend/ascend-toolkit/latest/aarch64-linux/lib64/libacl_op_compiler.so --platform ascend --prefix acl"
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::opCompile, aclError, aclopCompile, const char *, opType, int, numInputs, aclopCompile_arg2_t, inputDesc, int, numOutputs, aclopCompile_arg4_t, outputDesc, const aclopAttr *, attr, aclopEngineType, engineType, aclopCompileType, compileFlag, const char *, opPath);
DEFINE_EXPORT_C_REDIRECT_CALL(XopCompileAndExecute, aclError, aclopCompileAndExecute, const char *, opType, int, numInputs, aclopCompileAndExecute_arg2_t, inputDesc, aclopCompileAndExecute_arg3_t, inputs, int, numOutputs, aclopCompileAndExecute_arg5_t, outputDesc, aclopCompileAndExecute_arg6_t, outputs, const aclopAttr *, attr, aclopEngineType, engineType, aclopCompileType, compileFlag, const char *, opPath, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::opCompileAndExecuteV2, aclError, aclopCompileAndExecuteV2, const char *, opType, int, numInputs, aclopCompileAndExecuteV2_arg2_t, inputDesc, aclopCompileAndExecuteV2_arg3_t, inputs, int, numOutputs, aclopCompileAndExecuteV2_arg5_t, outputDesc, aclopCompileAndExecuteV2_arg6_t, outputs, aclopAttr *, attr, aclopEngineType, engineType, aclopCompileType, compileFlag, const char *, opPath, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::SetCompileopt, aclError, aclSetCompileopt, aclCompileOpt, opt, const char *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::GetCompileoptSize, size_t, aclGetCompileoptSize, aclCompileOpt, opt);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::GetCompileopt, aclError, aclGetCompileopt, aclCompileOpt, opt, char *, value, size_t, length);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::opSetCompileFlag, aclError, aclopSetCompileFlag, aclOpCompileFlag, flag);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::GenGraphAndDumpForOp, aclError, aclGenGraphAndDumpForOp, const char *, opType, int, numInputs, aclGenGraphAndDumpForOp_arg2_t, inputDesc, aclGenGraphAndDumpForOp_arg3_t, inputs, int, numOutputs, aclGenGraphAndDumpForOp_arg5_t, outputDesc, aclGenGraphAndDumpForOp_arg6_t, outputs, const aclopAttr *, attr, aclopEngineType, engineType, const char *, graphDumpPath, const aclGraphDumpOption *, graphDumpOpt);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::CreateGraphDumpOpt, aclGraphDumpOption *, aclCreateGraphDumpOpt);
DEFINE_EXPORT_C_REDIRECT_CALL(OpCompiler::DestroyGraphDumpOpt, aclError, aclDestroyGraphDumpOpt, const aclGraphDumpOption *, graphDumpOpt);

/// This is auto-generated by command "python3 tools/autogen/gen.py --source platforms/ascend/hal/include/xsched/ascend/hal/acl.h --lib /usr/local/Ascend/ascend-toolkit/latest/aarch64-linux/lib64/libacl_cblas.so --platform ascend --prefix acl"
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasGemvEx, aclError, aclblasGemvEx, aclTransType, transA, int, m, int, n, const void *, alpha, const void *, a, int, lda, aclDataType, dataTypeA, const void *, x, int, incx, aclDataType, dataTypeX, const void *, beta, void *, y, int, incy, aclDataType, dataTypeY, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForGemvEx, aclError, aclblasCreateHandleForGemvEx, aclTransType, transA, int, m, int, n, aclDataType, dataTypeA, aclDataType, dataTypeX, aclDataType, dataTypeY, aclComputeType, type, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasHgemv, aclError, aclblasHgemv, aclTransType, transA, int, m, int, n, const aclFloat16 *, alpha, const aclFloat16 *, a, int, lda, const aclFloat16 *, x, int, incx, const aclFloat16 *, beta, aclFloat16 *, y, int, incy, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForHgemv, aclError, aclblasCreateHandleForHgemv, aclTransType, transA, int, m, int, n, aclComputeType, type, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasS8gemv, aclError, aclblasS8gemv, aclTransType, transA, int, m, int, n, const int32_t *, alpha, const int8_t *, a, int, lda, const int8_t *, x, int, incx, const int32_t *, beta, int32_t *, y, int, incy, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForS8gemv, aclError, aclblasCreateHandleForS8gemv, aclTransType, transA, int, m, int, n, aclComputeType, type, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasGemmEx, aclError, aclblasGemmEx, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, const void *, alpha, const void *, matrixA, int, lda, aclDataType, dataTypeA, const void *, matrixB, int, ldb, aclDataType, dataTypeB, const void *, beta, void *, matrixC, int, ldc, aclDataType, dataTypeC, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForGemmEx, aclError, aclblasCreateHandleForGemmEx, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, aclDataType, dataTypeA, aclDataType, dataTypeB, aclDataType, dataTypeC, aclComputeType, type, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasHgemm, aclError, aclblasHgemm, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, const aclFloat16 *, alpha, const aclFloat16 *, matrixA, int, lda, const aclFloat16 *, matrixB, int, ldb, const aclFloat16 *, beta, aclFloat16 *, matrixC, int, ldc, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForHgemm, aclError, aclblasCreateHandleForHgemm, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, aclComputeType, type, aclopHandle **, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasS8gemm, aclError, aclblasS8gemm, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, const int32_t *, alpha, const int8_t *, matrixA, int, lda, const int8_t *, matrixB, int, ldb, const int32_t *, beta, int32_t *, matrixC, int, ldc, aclComputeType, type, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(CBlas::blasCreateHandleForS8gemm, aclError, aclblasCreateHandleForS8gemm, aclTransType, transA, aclTransType, transB, aclTransType, transC, int, m, int, n, int, k, aclComputeType, type, aclopHandle **, handle);

/// This is auto-generated by command "python3 tools/autogen/gen.py --source platforms/ascend/hal/include/xsched/ascend/hal/acl.h --lib /usr/local/Ascend/ascend-toolkit/latest/aarch64-linux/lib64/libopapi.so --platform ascend --prefix acl"
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDropoutBackward, aclnnStatus, aclnnDropoutBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDropout, aclnnStatus, aclnnDropout, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNormalTensorTensor, aclnnStatus, aclnnNormalTensorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNormalTensorFloat, aclnnStatus, aclnnNormalTensorFloat, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNormalFloatTensor, aclnnStatus, aclnnNormalFloatTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNormalFloatFloat, aclnnStatus, aclnnNormalFloatFloat, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBernoulli, aclnnStatus, aclnnBernoulli, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBernoulliTensor, aclnnStatus, aclnnBernoulliTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBernoulli, aclnnStatus, aclnnInplaceBernoulli, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBernoulliTensor, aclnnStatus, aclnnInplaceBernoulliTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMultinomial, aclnnStatus, aclnnMultinomial, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDropoutDoMask, aclnnStatus, aclnnDropoutDoMask, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRandom, aclnnStatus, aclnnInplaceRandom, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceUniform, aclnnStatus, aclnnInplaceUniform, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDropoutGenMask, aclnnStatus, aclnnDropoutGenMask, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDropoutGenMaskV2, aclnnStatus, aclnnDropoutGenMaskV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRandperm, aclnnStatus, aclnnRandperm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceNormal, aclnnStatus, aclnnInplaceNormal, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIncreFlashAttentionV2, aclnnStatus, aclnnIncreFlashAttentionV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormBackward, aclnnStatus, aclnnBatchNormBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachPowScalarV2, aclnnStatus, aclnnForeachPowScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAminmax, aclnnStatus, aclnnAminmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDynamicQuant, aclnnStatus, aclnnDynamicQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool3dWithArgmax, aclnnStatus, aclnnMaxPool3dWithArgmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSign, aclnnStatus, aclnnSign, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeInitRoutingQuantV2, aclnnStatus, aclnnMoeInitRoutingQuantV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSigmoidBackward, aclnnStatus, aclnnLogSigmoidBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmulReduceScatter, aclnnStatus, aclnnMatmulReduceScatter, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeFinalizeRoutingV2, aclnnStatus, aclnnMoeFinalizeRoutingV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(NnOp::nnCalculateMatmulWeightSizeV2, aclnnStatus, aclnnCalculateMatmulWeightSizeV2, const aclIntArray *, tensorShape, aclDataType, dataType, uint64_t *, weightTensorSize);
DEFINE_EXPORT_C_REDIRECT_CALL(NnOp::nnCalculateMatmulWeightSize, aclnnStatus, aclnnCalculateMatmulWeightSize, const aclIntArray *, tensorShape, uint64_t *, weightTensorSize);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTransMatmulWeight, aclnnStatus, aclnnTransMatmulWeight, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest2d, aclnnStatus, aclnnUpsampleNearest2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnComplex, aclnnStatus, aclnnComplex, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReciprocal, aclnnStatus, aclnnReciprocal, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceReciprocal, aclnnStatus, aclnnInplaceReciprocal, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFusedInferAttentionScore, aclnnStatus, aclnnFusedInferAttentionScore, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnVarMean, aclnnStatus, aclnnVarMean, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAmin, aclnnStatus, aclnnAmin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedMatmul, aclnnStatus, aclnnGroupedMatmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcdivList, aclnnStatus, aclnnForeachAddcdivList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGatherV2, aclnnStatus, aclnnGatherV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSmoothL1Loss, aclnnStatus, aclnnSmoothL1Loss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool2dWithMask, aclnnStatus, aclnnMaxPool2dWithMask, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool2dWithIndices, aclnnStatus, aclnnMaxPool2dWithIndices, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnL1LossBackward, aclnnStatus, aclnnL1LossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsInf, aclnnStatus, aclnnIsInf, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGluBackward, aclnnStatus, aclnnGluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleLinear1dBackward, aclnnStatus, aclnnUpsampleLinear1dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnErfinv, aclnnStatus, aclnnErfinv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceErfinv, aclnnStatus, aclnnInplaceErfinv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearestExact3dBackward, aclnnStatus, aclnnUpsampleNearestExact3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardsigmoid, aclnnStatus, aclnnHardsigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceHardsigmoid, aclnnStatus, aclnnInplaceHardsigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulWeightNz, aclnnStatus, aclnnQuantMatmulWeightNz, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSinh, aclnnStatus, aclnnForeachSinh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxV2, aclnnStatus, aclnnMaxV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcdivScalarList, aclnnStatus, aclnnForeachAddcdivScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTrace, aclnnStatus, aclnnTrace, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMin, aclnnStatus, aclnnMin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardtanhBackward, aclnnStatus, aclnnHardtanhBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAvgPool3dBackward, aclnnStatus, aclnnAvgPool3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormReduceBackward, aclnnStatus, aclnnBatchNormReduceBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchMatmulQuant, aclnnStatus, aclnnBatchMatmulQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeGluBackward, aclnnStatus, aclnnGeGluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeGluV3Backward, aclnnStatus, aclnnGeGluV3Backward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormElemtBackward, aclnnStatus, aclnnBatchNormElemtBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad1d, aclnnStatus, aclnnReplicationPad1d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPromptFlashAttention, aclnnStatus, aclnnPromptFlashAttention, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnXLogYScalarOther, aclnnStatus, aclnnXLogYScalarOther, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceXLogYScalarOther, aclnnStatus, aclnnInplaceXLogYScalarOther, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLayerNormBackward, aclnnStatus, aclnnLayerNormBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceCopy, aclnnStatus, aclnnInplaceCopy, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFmodScalar, aclnnStatus, aclnnFmodScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFmodScalar, aclnnStatus, aclnnInplaceFmodScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLerp, aclnnStatus, aclnnLerp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLerp, aclnnStatus, aclnnInplaceLerp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnL1Loss, aclnnStatus, aclnnL1Loss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogAddExp2, aclnnStatus, aclnnLogAddExp2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeInitRoutingV2, aclnnStatus, aclnnMoeInitRoutingV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnExp2, aclnnStatus, aclnnExp2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceExp2, aclnnStatus, aclnnInplaceExp2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUnique, aclnnStatus, aclnnUnique, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedMatmulV2, aclnnStatus, aclnnGroupedMatmulV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvertWeightToINT4Pack, aclnnStatus, aclnnConvertWeightToINT4Pack, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCummax, aclnnStatus, aclnnCummax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMinimumScalarV2, aclnnStatus, aclnnForeachMinimumScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnArgMax, aclnnStatus, aclnnArgMax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPdistForward, aclnnStatus, aclnnPdistForward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRsubs, aclnnStatus, aclnnRsubs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRsub, aclnnStatus, aclnnRsub, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad1d, aclnnStatus, aclnnReflectionPad1d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwinTransformerLnQkvQuant, aclnnStatus, aclnnSwinTransformerLnQkvQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMaskedScatter, aclnnStatus, aclnnInplaceMaskedScatter, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeScalar, aclnnStatus, aclnnGeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceGeScalar, aclnnStatus, aclnnInplaceGeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceScatterUpdate, aclnnStatus, aclnnInplaceScatterUpdate, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMedian, aclnnStatus, aclnnMedian, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMedianDim, aclnnStatus, aclnnMedianDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNanMedian, aclnnStatus, aclnnNanMedian, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNanMedianDim, aclnnStatus, aclnnNanMedianDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseXorTensor, aclnnStatus, aclnnBitwiseXorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseXorTensor, aclnnStatus, aclnnInplaceBitwiseXorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSiluBackward, aclnnStatus, aclnnSiluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnApplyFusedEmaAdam, aclnnStatus, aclnnApplyFusedEmaAdam, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseOrTensor, aclnnStatus, aclnnBitwiseOrTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseOrTensor, aclnnStatus, aclnnInplaceBitwiseOrTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool2dWithMaskBackward, aclnnStatus, aclnnMaxPool2dWithMaskBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool2dWithIndicesBackward, aclnnStatus, aclnnMaxPool2dWithIndicesBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachZeroInplace, aclnnStatus, aclnnForeachZeroInplace, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMulScalar, aclnnStatus, aclnnForeachMulScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnApplyAdamWV2, aclnnStatus, aclnnApplyAdamWV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSliceV2, aclnnStatus, aclnnSliceV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRoiAlign, aclnnStatus, aclnnRoiAlign, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulAllReduceV3, aclnnStatus, aclnnQuantMatmulAllReduceV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGridSampler2DBackward, aclnnStatus, aclnnGridSampler2DBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAlltoAllAllGatherBatchMatMul, aclnnStatus, aclnnAlltoAllAllGatherBatchMatMul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEqTensor, aclnnStatus, aclnnEqTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceEqTensor, aclnnStatus, aclnnInplaceEqTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTrunc, aclnnStatus, aclnnTrunc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceTrunc, aclnnStatus, aclnnInplaceTrunc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLeScalar, aclnnStatus, aclnnLeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLeScalar, aclnnStatus, aclnnInplaceLeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDeepNormGrad, aclnnStatus, aclnnDeepNormGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnStack, aclnnStatus, aclnnStack, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBincount, aclnnStatus, aclnnBincount, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcmulScalarList, aclnnStatus, aclnnForeachAddcmulScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBicubic2dBackward, aclnnStatus, aclnnUpsampleBicubic2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseAndScalar, aclnnStatus, aclnnBitwiseAndScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseAndScalar, aclnnStatus, aclnnInplaceBitwiseAndScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormElemt, aclnnStatus, aclnnBatchNormElemt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedMatMulAllReduce, aclnnStatus, aclnnGroupedMatMulAllReduce, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLinalgQr, aclnnStatus, aclnnLinalgQr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnChamferDistanceBackward, aclnnStatus, aclnnChamferDistanceBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCumsum, aclnnStatus, aclnnCumsum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCumsumV2, aclnnStatus, aclnnCumsumV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachExp, aclnnStatus, aclnnForeachExp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachCopy, aclnnStatus, aclnnForeachCopy, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachNeg, aclnnStatus, aclnnForeachNeg, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEmbedding, aclnnStatus, aclnnEmbedding, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachCos, aclnnStatus, aclnnForeachCos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest2dBackward, aclnnStatus, aclnnUpsampleNearest2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddLayerNormGrad, aclnnStatus, aclnnAddLayerNormGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNeTensor, aclnnStatus, aclnnNeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceNeTensor, aclnnStatus, aclnnInplaceNeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogicalOr, aclnnStatus, aclnnLogicalOr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLogicalOr, aclnnStatus, aclnnInplaceLogicalOr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSplitTensor, aclnnStatus, aclnnSplitTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLog10, aclnnStatus, aclnnLog10, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLog10, aclnnStatus, aclnnInplaceLog10, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGlobalMaxPool, aclnnStatus, aclnnGlobalMaxPool, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool, aclnnStatus, aclnnMaxPool, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleLinear1d, aclnnStatus, aclnnUpsampleLinear1d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSinh, aclnnStatus, aclnnSinh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSinh, aclnnStatus, aclnnInplaceSinh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSubList, aclnnStatus, aclnnForeachSubList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSin, aclnnStatus, aclnnForeachSin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest3d, aclnnStatus, aclnnUpsampleNearest3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardsigmoidBackward, aclnnStatus, aclnnHardsigmoidBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeGatingTopKSoftmaxV2, aclnnStatus, aclnnMoeGatingTopKSoftmaxV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMseLossOut, aclnnStatus, aclnnMseLossOut, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeGatingTopKSoftmax, aclnnStatus, aclnnMoeGatingTopKSoftmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddcdiv, aclnnStatus, aclnnAddcdiv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAddcdiv, aclnnStatus, aclnnInplaceAddcdiv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSign, aclnnStatus, aclnnForeachSign, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAllGatherMatmul, aclnnStatus, aclnnAllGatherMatmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMinimumScalar, aclnnStatus, aclnnForeachMinimumScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSort, aclnnStatus, aclnnSort, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMulList, aclnnStatus, aclnnForeachMulList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMaximumScalar, aclnnStatus, aclnnForeachMaximumScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdaptiveAvgPool2dBackward, aclnnStatus, aclnnAdaptiveAvgPool2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcmulScalar, aclnnStatus, aclnnForeachAddcmulScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMaskedFillTensor, aclnnStatus, aclnnInplaceMaskedFillTensor, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReduceLogSum, aclnnStatus, aclnnReduceLogSum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceZero, aclnnStatus, aclnnInplaceZero, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnResize, aclnnStatus, aclnnResize, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSinkhorn, aclnnStatus, aclnnSinkhorn, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPromptFlashAttentionV2, aclnnStatus, aclnnPromptFlashAttentionV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxN, aclnnStatus, aclnnMaxN, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMean, aclnnStatus, aclnnMean, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMeanV2, aclnnStatus, aclnnMeanV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeFinalizeRoutingV2Grad, aclnnStatus, aclnnMoeFinalizeRoutingV2Grad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeTokenPermute, aclnnStatus, aclnnMoeTokenPermute, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnInplaceMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMaximumList, aclnnStatus, aclnnForeachMaximumList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnVar, aclnnStatus, aclnnVar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnVarCorrection, aclnnStatus, aclnnVarCorrection, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLtTensor, aclnnStatus, aclnnLtTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLtTensor, aclnnStatus, aclnnInplaceLtTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTril, aclnnStatus, aclnnTril, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceTril, aclnnStatus, aclnnInplaceTril, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFFNV2, aclnnStatus, aclnnFFNV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAtanh, aclnnStatus, aclnnAtanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAtanh, aclnnStatus, aclnnInplaceAtanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddcmul, aclnnStatus, aclnnAddcmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAddcmul, aclnnStatus, aclnnInplaceAddcmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsInScalarTensor, aclnnStatus, aclnnIsInScalarTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdaptiveAvgPool2d, aclnnStatus, aclnnAdaptiveAvgPool2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAcosh, aclnnStatus, aclnnAcosh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAcosh, aclnnStatus, aclnnInplaceAcosh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNorm, aclnnStatus, aclnnBatchNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCast, aclnnStatus, aclnnCast, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad1dBackward, aclnnStatus, aclnnReplicationPad1dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAtan, aclnnStatus, aclnnForeachAtan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSubListV2, aclnnStatus, aclnnForeachSubListV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceQuantMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnInplaceQuantMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnQuantMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFloorDivide, aclnnStatus, aclnnFloorDivide, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFloorDivides, aclnnStatus, aclnnFloorDivides, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFloorDivide, aclnnStatus, aclnnInplaceFloorDivide, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFloorDivides, aclnnStatus, aclnnInplaceFloorDivides, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSigmoid, aclnnStatus, aclnnLogSigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSigmoidForward, aclnnStatus, aclnnLogSigmoidForward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAll, aclnnStatus, aclnnAll, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftshrinkBackward, aclnnStatus, aclnnSoftshrinkBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest1dBackward, aclnnStatus, aclnnUpsampleNearest1dBackward, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSeluBackward, aclnnStatus, aclnnSeluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdaptiveMaxPool2d, aclnnStatus, aclnnAdaptiveMaxPool2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddr, aclnnStatus, aclnnAddr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAddr, aclnnStatus, aclnnInplaceAddr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCelu, aclnnStatus, aclnnCelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceCelu, aclnnStatus, aclnnInplaceCelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnWeightQuantBatchMatmulV2, aclnnStatus, aclnnWeightQuantBatchMatmulV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMulScalarList, aclnnStatus, aclnnForeachMulScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDiag, aclnnStatus, aclnnDiag, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAminmaxDim, aclnnStatus, aclnnAminmaxDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSigmoidBackward, aclnnStatus, aclnnSigmoidBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmulCompressDequant, aclnnStatus, aclnnMatmulCompressDequant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReduceNansum, aclnnStatus, aclnnReduceNansum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdd, aclnnStatus, aclnnAdd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdds, aclnnStatus, aclnnAdds, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAdd, aclnnStatus, aclnnInplaceAdd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAdds, aclnnStatus, aclnnInplaceAdds, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNorm, aclnnStatus, aclnnNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnOneHot, aclnnStatus, aclnnOneHot, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearestExact2d, aclnnStatus, aclnnUpsampleNearestExact2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachErfc, aclnnStatus, aclnnForeachErfc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRingAttentionUpdate, aclnnStatus, aclnnRingAttentionUpdate, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPrecisionCompare, aclnnStatus, aclnnPrecisionCompare, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLerpList, aclnnStatus, aclnnForeachLerpList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeInitRoutingQuant, aclnnStatus, aclnnMoeInitRoutingQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnChannelShuffle, aclnnStatus, aclnnChannelShuffle, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRReluWithNoise, aclnnStatus, aclnnRReluWithNoise, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRReluWithNoise, aclnnStatus, aclnnInplaceRReluWithNoise, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSub, aclnnStatus, aclnnSub, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSubs, aclnnStatus, aclnnSubs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSub, aclnnStatus, aclnnInplaceSub, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSubs, aclnnStatus, aclnnInplaceSubs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBinaryCrossEntropy, aclnnStatus, aclnnBinaryCrossEntropy, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnXLogYTensor, aclnnStatus, aclnnXLogYTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceXLogYTensor, aclnnStatus, aclnnInplaceXLogYTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvolution, aclnnStatus, aclnnConvolution, void *, workspace, const uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvTbc, aclnnStatus, aclnnConvTbc, void *, workspace, const uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvDepthwise2d, aclnnStatus, aclnnConvDepthwise2d, void *, workspace, const uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSplitWithSize, aclnnStatus, aclnnSplitWithSize, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSigmoid, aclnnStatus, aclnnForeachSigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachErf, aclnnStatus, aclnnForeachErf, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLayerNorm, aclnnStatus, aclnnLayerNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLayerNormWithImplMode, aclnnStatus, aclnnLayerNormWithImplMode, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxUnpool2dBackward, aclnnStatus, aclnnMaxUnpool2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseNot, aclnnStatus, aclnnBitwiseNot, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSigmoid, aclnnStatus, aclnnSigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSigmoid, aclnnStatus, aclnnInplaceSigmoid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLgamma, aclnnStatus, aclnnLgamma, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLog10, aclnnStatus, aclnnForeachLog10, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddbmm, aclnnStatus, aclnnAddbmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAddbmm, aclnnStatus, aclnnInplaceAddbmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnArgsort, aclnnStatus, aclnnArgsort, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsPosInf, aclnnStatus, aclnnIsPosInf, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxDim, aclnnStatus, aclnnMaxDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedBiasAddGrad, aclnnStatus, aclnnGroupedBiasAddGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedBiasAddGradV2, aclnnStatus, aclnnGroupedBiasAddGradV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndexCopy, aclnnStatus, aclnnIndexCopy, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceIndexCopy, aclnnStatus, aclnnInplaceIndexCopy, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcmulScalarV2, aclnnStatus, aclnnForeachAddcmulScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeTokenUnpermuteGrad, aclnnStatus, aclnnMoeTokenUnpermuteGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeatInterleave, aclnnStatus, aclnnRepeatInterleave, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeatInterleaveWithDim, aclnnStatus, aclnnRepeatInterleaveWithDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeatInterleaveInt, aclnnStatus, aclnnRepeatInterleaveInt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeatInterleaveIntWithDim, aclnnStatus, aclnnRepeatInterleaveIntWithDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeatInterleaveTensor, aclnnStatus, aclnnRepeatInterleaveTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogicalXor, aclnnStatus, aclnnLogicalXor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAbs, aclnnStatus, aclnnAbs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBilinear2d, aclnnStatus, aclnnUpsampleBilinear2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearestExact3d, aclnnStatus, aclnnUpsampleNearestExact3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachDivScalarV2, aclnnStatus, aclnnForeachDivScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTriangularSolve, aclnnStatus, aclnnTriangularSolve, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftplusBackward, aclnnStatus, aclnnSoftplusBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCircularPad3dBackward, aclnnStatus, aclnnCircularPad3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLeakyRelu, aclnnStatus, aclnnLeakyRelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLeakyRelu, aclnnStatus, aclnnInplaceLeakyRelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachPowScalarAndTensor, aclnnStatus, aclnnForeachPowScalarAndTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScatterNd, aclnnStatus, aclnnScatterNd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReduceSum, aclnnStatus, aclnnReduceSum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeInitRoutingV2Grad, aclnnStatus, aclnnMoeInitRoutingV2Grad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndexSelect, aclnnStatus, aclnnIndexSelect, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSearchSorted, aclnnStatus, aclnnSearchSorted, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSearchSorteds, aclnnStatus, aclnnSearchSorteds, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachNorm, aclnnStatus, aclnnForeachNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLeakyReluBackward, aclnnStatus, aclnnLeakyReluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMish, aclnnStatus, aclnnMish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMish, aclnnStatus, aclnnInplaceMish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMinimum, aclnnStatus, aclnnMinimum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnArange, aclnnStatus, aclnnArange, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeComputeExpertTokens, aclnnStatus, aclnnMoeComputeExpertTokens, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFloor, aclnnStatus, aclnnFloor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFloor, aclnnStatus, aclnnInplaceFloor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTan, aclnnStatus, aclnnTan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceTan, aclnnStatus, aclnnInplaceTan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupQuant, aclnnStatus, aclnnGroupQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardswishBackward, aclnnStatus, aclnnHardswishBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsFinite, aclnnStatus, aclnnIsFinite, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFrac, aclnnStatus, aclnnFrac, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFrac, aclnnStatus, aclnnInplaceFrac, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddScalarV2, aclnnStatus, aclnnForeachAddScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnErfc, aclnnStatus, aclnnErfc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceErfc, aclnnStatus, aclnnInplaceErfc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceQuantScatter, aclnnStatus, aclnnInplaceQuantScatter, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFillTensor, aclnnStatus, aclnnInplaceFillTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAtan, aclnnStatus, aclnnAtan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAtan, aclnnStatus, aclnnInplaceAtan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad1dBackward, aclnnStatus, aclnnReflectionPad1dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPolar, aclnnStatus, aclnnPolar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnKlDivBackward, aclnnStatus, aclnnKlDivBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLog, aclnnStatus, aclnnForeachLog, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachDivScalarList, aclnnStatus, aclnnForeachDivScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNLLLoss2dBackward, aclnnStatus, aclnnNLLLoss2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdaptiveAvgPool3d, aclnnStatus, aclnnAdaptiveAvgPool3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGer, aclnnStatus, aclnnGer, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEmbeddingDenseBackward, aclnnStatus, aclnnEmbeddingDenseBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSmoothL1LossBackward, aclnnStatus, aclnnSmoothL1LossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad2dBackward, aclnnStatus, aclnnReflectionPad2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad2dBackward, aclnnStatus, aclnnReplicationPad2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndexFillTensor, aclnnStatus, aclnnIndexFillTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceIndexFillTensor, aclnnStatus, aclnnInplaceIndexFillTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHistc, aclnnStatus, aclnnHistc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmul, aclnnStatus, aclnnQuantMatmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulV2, aclnnStatus, aclnnQuantMatmulV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAtan2, aclnnStatus, aclnnAtan2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAtan2, aclnnStatus, aclnnInplaceAtan2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScatter, aclnnStatus, aclnnScatter, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScatterValue, aclnnStatus, aclnnScatterValue, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceScatter, aclnnStatus, aclnnInplaceScatter, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceScatterValue, aclnnStatus, aclnnInplaceScatterValue, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMishBackward, aclnnStatus, aclnnMishBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGlobalAveragePool, aclnnStatus, aclnnGlobalAveragePool, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplacePut, aclnnStatus, aclnnInplacePut, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnThresholdBackward, aclnnStatus, aclnnThresholdBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMinimumScalarList, aclnnStatus, aclnnForeachMinimumScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardswish, aclnnStatus, aclnnHardswish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceHardswish, aclnnStatus, aclnnInplaceHardswish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGtTensor, aclnnStatus, aclnnGtTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceGtTensor, aclnnStatus, aclnnInplaceGtTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMaximumScalarV2, aclnnStatus, aclnnForeachMaximumScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBilinear2dBackward, aclnnStatus, aclnnUpsampleBilinear2dBackward, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEmbeddingBag, aclnnStatus, aclnnEmbeddingBag, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseOrScalar, aclnnStatus, aclnnBitwiseOrScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseOrScalar, aclnnStatus, aclnnInplaceBitwiseOrScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseXorScalar, aclnnStatus, aclnnBitwiseXorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseXorScalar, aclnnStatus, aclnnInplaceBitwiseXorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMuls, aclnnStatus, aclnnMuls, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMul, aclnnStatus, aclnnMul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMuls, aclnnStatus, aclnnInplaceMuls, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMul, aclnnStatus, aclnnInplaceMul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNanToNum, aclnnStatus, aclnnNanToNum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceNanToNum, aclnnStatus, aclnnInplaceNanToNum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGcd, aclnnStatus, aclnnGcd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReal, aclnnStatus, aclnnReal, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeTensor, aclnnStatus, aclnnGeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceGeTensor, aclnnStatus, aclnnInplaceGeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFFNV3, aclnnStatus, aclnnFFNV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardshrink, aclnnStatus, aclnnHardshrink, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRenorm, aclnnStatus, aclnnRenorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRenorm, aclnnStatus, aclnnInplaceRenorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInstanceNorm, aclnnStatus, aclnnInstanceNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBinaryCrossEntropyWithLogitsBackward, aclnnStatus, aclnnBinaryCrossEntropyWithLogitsBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEye, aclnnStatus, aclnnEye, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCircularPad2d, aclnnStatus, aclnnCircularPad2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAminmaxAll, aclnnStatus, aclnnAminmaxAll, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLinalgCross, aclnnStatus, aclnnLinalgCross, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftMarginLossBackward, aclnnStatus, aclnnSoftMarginLossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulV3, aclnnStatus, aclnnQuantMatmulV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSum, aclnnStatus, aclnnSum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcmulList, aclnnStatus, aclnnForeachAddcmulList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAdaptiveAvgPool3dBackward, aclnnStatus, aclnnAdaptiveAvgPool3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAbs, aclnnStatus, aclnnForeachAbs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGlu, aclnnStatus, aclnnGlu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCeil, aclnnStatus, aclnnCeil, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceCeil, aclnnStatus, aclnnInplaceCeil, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddmv, aclnnStatus, aclnnAddmv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPromptFlashAttentionV3, aclnnStatus, aclnnPromptFlashAttentionV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnWeightQuantBatchMatmulV3, aclnnStatus, aclnnWeightQuantBatchMatmulV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLerps, aclnnStatus, aclnnLerps, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLerps, aclnnStatus, aclnnInplaceLerps, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFmodTensor, aclnnStatus, aclnnFmodTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFmodTensor, aclnnStatus, aclnnInplaceFmodTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPowTensorTensor, aclnnStatus, aclnnPowTensorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplacePowTensorTensor, aclnnStatus, aclnnInplacePowTensorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDynamicQuantV2, aclnnStatus, aclnnDynamicQuantV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedMatmulV4, aclnnStatus, aclnnGroupedMatmulV4, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogicalAnd, aclnnStatus, aclnnLogicalAnd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLogicalAnd, aclnnStatus, aclnnInplaceLogicalAnd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNLLLoss, aclnnStatus, aclnnNLLLoss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest3dBackward, aclnnStatus, aclnnUpsampleNearest3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNonzero, aclnnStatus, aclnnNonzero, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPreluBackward, aclnnStatus, aclnnPreluBackward, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMseLoss, aclnnStatus, aclnnMseLoss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndex, aclnnStatus, aclnnIndex, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad3dBackward, aclnnStatus, aclnnReplicationPad3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(NnOp::nnCalculateConvolutionWeightSize, aclnnStatus, aclnnCalculateConvolutionWeightSize, const aclIntArray *, tensorShape, bool, transposed, int64_t, groups, aclDataType, dataType, uint64_t *, weightTensorSize);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTransConvolutionWeight, aclnnStatus, aclnnTransConvolutionWeight, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCtcLoss, aclnnStatus, aclnnCtcLoss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachTan, aclnnStatus, aclnnForeachTan, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftmaxBackward, aclnnStatus, aclnnSoftmaxBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeFinalizeRouting, aclnnStatus, aclnnMoeFinalizeRouting, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLog, aclnnStatus, aclnnLog, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLog, aclnnStatus, aclnnInplaceLog, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIm2col, aclnnStatus, aclnnIm2col, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantize, aclnnStatus, aclnnQuantize, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnProd, aclnnStatus, aclnnProd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnProdDim, aclnnStatus, aclnnProdDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIncreFlashAttentionV4, aclnnStatus, aclnnIncreFlashAttentionV4, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardshrinkBackward, aclnnStatus, aclnnHardshrinkBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTanh, aclnnStatus, aclnnTanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceTanh, aclnnStatus, aclnnInplaceTanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScale, aclnnStatus, aclnnScale, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxUnpool2d, aclnnStatus, aclnnMaxUnpool2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConstantPadNd, aclnnStatus, aclnnConstantPadNd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCosh, aclnnStatus, aclnnCosh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceCosh, aclnnStatus, aclnnInplaceCosh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormGatherStatsWithCounts, aclnnStatus, aclnnBatchNormGatherStatsWithCounts, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMm, aclnnStatus, aclnnMm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRange, aclnnStatus, aclnnRange, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnStdMeanCorrection, aclnnStatus, aclnnStdMeanCorrection, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnElu, aclnnStatus, aclnnElu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceElu, aclnnStatus, aclnnInplaceElu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGridSampler3DBackward, aclnnStatus, aclnnGridSampler3DBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBicubic2d, aclnnStatus, aclnnUpsampleBicubic2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnWeightQuantMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnWeightQuantMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGridSampler3D, aclnnStatus, aclnnGridSampler3D, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsInTensorScalar, aclnnStatus, aclnnIsInTensorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBinaryCrossEntropyBackward, aclnnStatus, aclnnBinaryCrossEntropyBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTanhBackward, aclnnStatus, aclnnTanhBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddScalar, aclnnStatus, aclnnForeachAddScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwishBackward, aclnnStatus, aclnnSwishBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnStridedSliceAssignV2, aclnnStatus, aclnnStridedSliceAssignV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTransQuantParamV2, aclnnStatus, aclnnTransQuantParamV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBlendImagesCustom, aclnnStatus, aclnnBlendImagesCustom, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwinAttentionScoreQuant, aclnnStatus, aclnnSwinAttentionScoreQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBaddbmm, aclnnStatus, aclnnBaddbmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBaddbmm, aclnnStatus, aclnnInplaceBaddbmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceMaskedFillScalar, aclnnStatus, aclnnInplaceMaskedFillScalar, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnWeightQuantBatchMatmul, aclnnStatus, aclnnWeightQuantBatchMatmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(NnOp::nnTransQuantParam, aclnnStatus, aclnnTransQuantParam, const float *, scaleArray, uint64_t, scaleSize, const float *, offsetArray, uint64_t, offsetSize, uint64_t **, quantParam, uint64_t *, quantParamSize);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMinDim, aclnnStatus, aclnnMinDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnShrink, aclnnStatus, aclnnShrink, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxUnpool3d, aclnnStatus, aclnnMaxUnpool3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnApplyRotaryPosEmb, aclnnStatus, aclnnApplyRotaryPosEmb, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSubScalarV2, aclnnStatus, aclnnForeachSubScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDeepNorm, aclnnStatus, aclnnDeepNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddListV2, aclnnStatus, aclnnForeachAddListV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnKlDiv, aclnnStatus, aclnnKlDiv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLerpScalar, aclnnStatus, aclnnForeachLerpScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAmax, aclnnStatus, aclnnAmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIm2colBackward, aclnnStatus, aclnnIm2colBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnKthvalue, aclnnStatus, aclnnKthvalue, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAvgPool2dBackward, aclnnStatus, aclnnAvgPool2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFFN, aclnnStatus, aclnnFFN, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGridSampler2D, aclnnStatus, aclnnGridSampler2D, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachPowList, aclnnStatus, aclnnForeachPowList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaximum, aclnnStatus, aclnnMaximum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupNormSwish, aclnnStatus, aclnnGroupNormSwish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachCosh, aclnnStatus, aclnnForeachCosh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLog1p, aclnnStatus, aclnnLog1p, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLog1p, aclnnStatus, aclnnInplaceLog1p, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTriu, aclnnStatus, aclnnTriu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceTriu, aclnnStatus, aclnnInplaceTriu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFakeQuantPerTensorAffineCachemask, aclnnStatus, aclnnFakeQuantPerTensorAffineCachemask, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachTanh, aclnnStatus, aclnnForeachTanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNeScalar, aclnnStatus, aclnnNeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceNeScalar, aclnnStatus, aclnnInplaceNeScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGatherNd, aclnnStatus, aclnnGatherNd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIncreFlashAttention, aclnnStatus, aclnnIncreFlashAttention, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDot, aclnnStatus, aclnnDot, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachDivList, aclnnStatus, aclnnForeachDivList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMax, aclnnStatus, aclnnMax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBilinear2dAABackward, aclnnStatus, aclnnUpsampleBilinear2dAABackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmul, aclnnStatus, aclnnMatmul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRepeat, aclnnStatus, aclnnRepeat, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUniqueConsecutive, aclnnStatus, aclnnUniqueConsecutive, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDiagFlat, aclnnStatus, aclnnDiagFlat, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEqual, aclnnStatus, aclnnEqual, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad3dBackward, aclnnStatus, aclnnReflectionPad3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScatterAdd, aclnnStatus, aclnnScatterAdd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XRfft1D, aclnnStatus, aclRfft1D, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionScoreGrad, aclnnStatus, aclnnFlashAttentionScoreGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionUnpaddingScoreGrad, aclnnStatus, aclnnFlashAttentionUnpaddingScoreGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionScoreGradV2, aclnnStatus, aclnnFlashAttentionScoreGradV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionUnpaddingScoreGradV2, aclnnStatus, aclnnFlashAttentionUnpaddingScoreGradV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBitwiseAndTensor, aclnnStatus, aclnnBitwiseAndTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceBitwiseAndTensor, aclnnStatus, aclnnInplaceBitwiseAndTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftshrink, aclnnStatus, aclnnSoftshrink, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearestExact2dBackward, aclnnStatus, aclnnUpsampleNearestExact2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceOne, aclnnStatus, aclnnInplaceOne, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBackgroundReplace, aclnnStatus, aclnnBackgroundReplace, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClamp, aclnnStatus, aclnnClamp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClampMin, aclnnStatus, aclnnClampMin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClampMinTensor, aclnnStatus, aclnnClampMinTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceClampMinTensor, aclnnStatus, aclnnInplaceClampMinTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClampTensor, aclnnStatus, aclnnClampTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClampMax, aclnnStatus, aclnnClampMax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceClampMax, aclnnStatus, aclnnInplaceClampMax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnClampMaxTensor, aclnnStatus, aclnnClampMaxTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceClampMaxTensor, aclnnStatus, aclnnInplaceClampMaxTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachExpm1, aclnnStatus, aclnnForeachExpm1, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaskedSoftmaxWithRelPosBias, aclnnStatus, aclnnMaskedSoftmaxWithRelPosBias, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachPowScalar, aclnnStatus, aclnnForeachPowScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAffineGrid, aclnnStatus, aclnnAffineGrid, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchMatMul, aclnnStatus, aclnnBatchMatMul, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSubScalarList, aclnnStatus, aclnnForeachSubScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnErf, aclnnStatus, aclnnErf, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceErf, aclnnStatus, aclnnInplaceErf, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLeTensor, aclnnStatus, aclnnLeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLeTensor, aclnnStatus, aclnnInplaceLeTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeluBackward, aclnnStatus, aclnnGeluBackward, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmulAllReduce, aclnnStatus, aclnnMatmulAllReduce, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEqScalar, aclnnStatus, aclnnEqScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceEqScalar, aclnnStatus, aclnnInplaceEqScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAscendAntiQuant, aclnnStatus, aclnnAscendAntiQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNonzeroV2, aclnnStatus, aclnnNonzeroV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCummin, aclnnStatus, aclnnCummin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxPool3dWithArgmaxBackward, aclnnStatus, aclnnMaxPool3dWithArgmaxBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeInitRouting, aclnnStatus, aclnnMoeInitRouting, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnArgMin, aclnnStatus, aclnnArgMin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUnique2, aclnnStatus, aclnnUnique2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInverse, aclnnStatus, aclnnInverse, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUniqueDim, aclnnStatus, aclnnUniqueDim, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupNormSilu, aclnnStatus, aclnnGroupNormSilu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupNormSiluV2, aclnnStatus, aclnnGroupNormSiluV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRmsNorm, aclnnStatus, aclnnRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddRmsNorm, aclnnStatus, aclnnAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeTokenUnpermute, aclnnStatus, aclnnMoeTokenUnpermute, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleTrilinear3dBackward, aclnnStatus, aclnnUpsampleTrilinear3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRemainderTensorTensor, aclnnStatus, aclnnRemainderTensorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRemainderTensorScalar, aclnnStatus, aclnnRemainderTensorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRemainderScalarTensor, aclnnStatus, aclnnRemainderScalarTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRemainderTensorTensor, aclnnStatus, aclnnInplaceRemainderTensorTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRemainderTensorScalar, aclnnStatus, aclnnInplaceRemainderTensorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSqrt, aclnnStatus, aclnnForeachSqrt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLog2, aclnnStatus, aclnnLog2, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLog2, aclnnStatus, aclnnInplaceLog2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnXLogYScalarSelf, aclnnStatus, aclnnXLogYScalarSelf, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStft, aclnnStatus, aclStft, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLog1p, aclnnStatus, aclnnForeachLog1p, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsClose, aclnnStatus, aclnnIsClose, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMinimumList, aclnnStatus, aclnnForeachMinimumList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMoeTokenPermuteGrad, aclnnStatus, aclnnMoeTokenPermuteGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad3d, aclnnStatus, aclnnReplicationPad3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwish, aclnnStatus, aclnnSwish, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndexPutImpl, aclnnStatus, aclnnIndexPutImpl, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachRoundOffNumberV2, aclnnStatus, aclnnForeachRoundOffNumberV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddLayerNorm, aclnnStatus, aclnnAddLayerNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIncreFlashAttentionV3, aclnnStatus, aclnnIncreFlashAttentionV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchMatMulReduceScatterAlltoAll, aclnnStatus, aclnnBatchMatMulReduceScatterAlltoAll, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMulScalarV2, aclnnStatus, aclnnForeachMulScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearestExact1dBackward, aclnnStatus, aclnnUpsampleNearestExact1dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAvgPool3d, aclnnStatus, aclnnAvgPool3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCat, aclnnStatus, aclnnCat, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAsin, aclnnStatus, aclnnAsin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAsin, aclnnStatus, aclnnInplaceAsin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnExp, aclnnStatus, aclnnExp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceExp, aclnnStatus, aclnnInplaceExp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMultiScaleDeformableAttentionGrad, aclnnStatus, aclnnMultiScaleDeformableAttentionGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleTrilinear3d, aclnnStatus, aclnnUpsampleTrilinear3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaskedSelect, aclnnStatus, aclnnMaskedSelect, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceWeightQuantMatmulAllReduceAddRmsNorm, aclnnStatus, aclnnInplaceWeightQuantMatmulAllReduceAddRmsNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddScalarList, aclnnStatus, aclnnForeachAddScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNeg, aclnnStatus, aclnnNeg, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceNeg, aclnnStatus, aclnnInplaceNeg, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSWhere, aclnnStatus, aclnnSWhere, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCos, aclnnStatus, aclnnCos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceCos, aclnnStatus, aclnnInplaceCos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcdivScalarV2, aclnnStatus, aclnnForeachAddcdivScalarV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGemm, aclnnStatus, aclnnGemm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad3d, aclnnStatus, aclnnReflectionPad3d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMatmulAllReduceV2, aclnnStatus, aclnnMatmulAllReduceV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMseLossBackward, aclnnStatus, aclnnMseLossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnExpand, aclnnStatus, aclnnExpand, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBidirectionLSTMV2, aclnnStatus, aclnnBidirectionLSTMV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachRoundOffNumber, aclnnStatus, aclnnForeachRoundOffNumber, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEmbeddingRenorm, aclnnStatus, aclnnEmbeddingRenorm, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSlogdet, aclnnStatus, aclnnSlogdet, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGelu, aclnnStatus, aclnnGelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulV4, aclnnStatus, aclnnQuantMatmulV4, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSin, aclnnStatus, aclnnSin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSin, aclnnStatus, aclnnInplaceSin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAcos, aclnnStatus, aclnnAcos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAcos, aclnnStatus, aclnnInplaceAcos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPrelu, aclnnStatus, aclnnPrelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAscendQuantV3, aclnnStatus, aclnnAscendQuantV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRound, aclnnStatus, aclnnRound, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRound, aclnnStatus, aclnnInplaceRound, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRoundDecimals, aclnnStatus, aclnnRoundDecimals, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRoundDecimals, aclnnStatus, aclnnInplaceRoundDecimals, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMinN, aclnnStatus, aclnnMinN, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMultiScaleDeformableAttnFunction, aclnnStatus, aclnnMultiScaleDeformableAttnFunction, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlip, aclnnStatus, aclnnFlip, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnExpm1, aclnnStatus, aclnnExpm1, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceExpm1, aclnnStatus, aclnnInplaceExpm1, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLinalgVectorNorm, aclnnStatus, aclnnLinalgVectorNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSumExp, aclnnStatus, aclnnLogSumExp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFakeQuantPerChannelAffineCachemask, aclnnStatus, aclnnFakeQuantPerChannelAffineCachemask, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNLLLoss2d, aclnnStatus, aclnnNLLLoss2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachPowScalarList, aclnnStatus, aclnnForeachPowScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSoftmaxBackward, aclnnStatus, aclnnLogSoftmaxBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCtcLossBackward, aclnnStatus, aclnnCtcLossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLtScalar, aclnnStatus, aclnnLtScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLtScalar, aclnnStatus, aclnnInplaceLtScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRmsNormGrad, aclnnStatus, aclnnRmsNormGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRelu, aclnnStatus, aclnnRelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRelu, aclnnStatus, aclnnInplaceRelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupedMatmulV3, aclnnStatus, aclnnGroupedMatmulV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvolutionBackward, aclnnStatus, aclnnConvolutionBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnConvTbcBackward, aclnnStatus, aclnnConvTbcBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupNormBackward, aclnnStatus, aclnnGroupNormBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSlice, aclnnStatus, aclnnSlice, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnCircularPad2dBackward, aclnnStatus, aclnnCircularPad2dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMultilabelMarginLoss, aclnnStatus, aclnnMultilabelMarginLoss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBilinear2dAA, aclnnStatus, aclnnUpsampleBilinear2dAA, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnWeightQuantMatmulAllReduce, aclnnStatus, aclnnWeightQuantMatmulAllReduce, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIsNegInf, aclnnStatus, aclnnIsNegInf, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogAddExp, aclnnStatus, aclnnLogAddExp, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFusedInferAttentionScoreV2, aclnnStatus, aclnnFusedInferAttentionScoreV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGtScalar, aclnnStatus, aclnnGtScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceGtScalar, aclnnStatus, aclnnInplaceGtScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogdet, aclnnStatus, aclnnLogdet, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAny, aclnnStatus, aclnnAny, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAddmm, aclnnStatus, aclnnAddmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAddmm, aclnnStatus, aclnnInplaceAddmm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSelu, aclnnStatus, aclnnSelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSelu, aclnnStatus, aclnnInplaceSelu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftMarginLoss, aclnnStatus, aclnnSoftMarginLoss, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleNearest1d, aclnnStatus, aclnnUpsampleNearest1d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAsinh, aclnnStatus, aclnnAsinh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceAsinh, aclnnStatus, aclnnInplaceAsinh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlatten, aclnnStatus, aclnnFlatten, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBinaryCrossEntropyWithLogits, aclnnStatus, aclnnBinaryCrossEntropyWithLogits, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulAllReduceV2, aclnnStatus, aclnnQuantMatmulAllReduceV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogSoftmax, aclnnStatus, aclnnLogSoftmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMaxUnpool3dBackward, aclnnStatus, aclnnMaxUnpool3dBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGroupNorm, aclnnStatus, aclnnGroupNorm, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTake, aclnnStatus, aclnnTake, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeluV2, aclnnStatus, aclnnGeluV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRoll, aclnnStatus, aclnnRoll, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAcos, aclnnStatus, aclnnForeachAcos, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddcdivScalar, aclnnStatus, aclnnForeachAddcdivScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachMaximumScalarList, aclnnStatus, aclnnForeachMaximumScalarList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachSubScalar, aclnnStatus, aclnnForeachSubScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPowTensorScalar, aclnnStatus, aclnnPowTensorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplacePowTensorScalar, aclnnStatus, aclnnInplacePowTensorScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPowScalarTensor, aclnnStatus, aclnnPowScalarTensor, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLinspace, aclnnStatus, aclnnLinspace, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEluBackward, aclnnStatus, aclnnEluBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSilentCheck, aclnnStatus, aclnnSilentCheck, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBidirectionLSTM, aclnnStatus, aclnnBidirectionLSTM, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQuantMatmulAllReduce, aclnnStatus, aclnnQuantMatmulAllReduce, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAddList, aclnnStatus, aclnnForeachAddList, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceFillScalar, aclnnStatus, aclnnInplaceFillScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMrgbaCustom, aclnnStatus, aclnnMrgbaCustom, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnIndexAdd, aclnnStatus, aclnnIndexAdd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnRsqrt, aclnnStatus, aclnnRsqrt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceRsqrt, aclnnStatus, aclnnInplaceRsqrt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwiGlu, aclnnStatus, aclnnSwiGlu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionScore, aclnnStatus, aclnnFlashAttentionScore, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionVarLenScore, aclnnStatus, aclnnFlashAttentionVarLenScore, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionScoreV2, aclnnStatus, aclnnFlashAttentionScoreV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnFlashAttentionVarLenScoreV2, aclnnStatus, aclnnFlashAttentionVarLenScoreV2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachAsin, aclnnStatus, aclnnForeachAsin, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeluBackwardV2, aclnnStatus, aclnnGeluBackwardV2, void *, workspace, uint64_t, workspace_size, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftmax, aclnnStatus, aclnnSoftmax, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnEinsum, aclnnStatus, aclnnEinsum, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSoftplus, aclnnStatus, aclnnSoftplus, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReplicationPad2d, aclnnStatus, aclnnReplicationPad2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachDivScalar, aclnnStatus, aclnnForeachDivScalar, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSignbit, aclnnStatus, aclnnSignbit, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSinc, aclnnStatus, aclnnSinc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSinc, aclnnStatus, aclnnInplaceSinc, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnBatchNormStats, aclnnStatus, aclnnBatchNormStats, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeGlu, aclnnStatus, aclnnGeGlu, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGeGluV3, aclnnStatus, aclnnGeGluV3, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDigamma, aclnnStatus, aclnnDigamma, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachLog2, aclnnStatus, aclnnForeachLog2, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnGather, aclnnStatus, aclnnGather, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAvgPool2d, aclnnStatus, aclnnAvgPool2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnAscendQuant, aclnnStatus, aclnnAscendQuant, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnStd, aclnnStatus, aclnnStd, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSwiGluGrad, aclnnStatus, aclnnSwiGluGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnHardtanh, aclnnStatus, aclnnHardtanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceHardtanh, aclnnStatus, aclnnInplaceHardtanh, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBicubic2dAAGrad, aclnnStatus, aclnnUpsampleBicubic2dAAGrad, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnSqrt, aclnnStatus, aclnnSqrt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, opExecutor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceSqrt, aclnnStatus, aclnnInplaceSqrt, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnPermute, aclnnStatus, aclnnPermute, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnReflectionPad2d, aclnnStatus, aclnnReflectionPad2d, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnLogicalNot, aclnnStatus, aclnnLogicalNot, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceLogicalNot, aclnnStatus, aclnnInplaceLogicalNot, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNonMaxSuppression, aclnnStatus, aclnnNonMaxSuppression, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnTopk, aclnnStatus, aclnnTopk, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, const aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDiv, aclnnStatus, aclnnDiv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDivs, aclnnStatus, aclnnDivs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDivMod, aclnnStatus, aclnnDivMod, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnDivMods, aclnnStatus, aclnnDivMods, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceDiv, aclnnStatus, aclnnInplaceDiv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceDivs, aclnnStatus, aclnnInplaceDivs, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceDivMod, aclnnStatus, aclnnInplaceDivMod, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceDivMods, aclnnStatus, aclnnInplaceDivMods, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnMv, aclnnStatus, aclnnMv, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnQr, aclnnStatus, aclnnQr, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnScatterNdUpdate, aclnnStatus, aclnnScatterNdUpdate, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnNLLLossBackward, aclnnStatus, aclnnNLLLossBackward, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnUpsampleBicubic2dAA, aclnnStatus, aclnnUpsampleBicubic2dAA, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnThreshold, aclnnStatus, aclnnThreshold, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnInplaceThreshold, aclnnStatus, aclnnInplaceThreshold, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XnnForeachReciprocal, aclnnStatus, aclnnForeachReciprocal, void *, workspace, uint64_t, workspaceSize, aclOpExecutor *, executor, aclrtStream, stream);

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

static const std::unordered_map<std::string, void *> intercept_symbol_map = {
    DLSYM_INTERCEPT_ENTRY(aclFloat16ToFloat),
    DLSYM_INTERCEPT_ENTRY(aclFloatToFloat16),
    DLSYM_INTERCEPT_ENTRY(aclCreateDataBuffer),
    DLSYM_INTERCEPT_ENTRY(aclDestroyDataBuffer),
    DLSYM_INTERCEPT_ENTRY(aclUpdateDataBuffer),
    DLSYM_INTERCEPT_ENTRY(aclGetDataBufferAddr),
    DLSYM_INTERCEPT_ENTRY(aclGetDataBufferSize),
    DLSYM_INTERCEPT_ENTRY(aclGetDataBufferSizeV2),
    DLSYM_INTERCEPT_ENTRY(aclDataTypeSize),
    DLSYM_INTERCEPT_ENTRY(aclCreateTensorDesc),
    DLSYM_INTERCEPT_ENTRY(aclDestroyTensorDesc),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorShapeRange),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorValueRange),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescType),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescFormat),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescSize),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescElementCount),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescNumDims),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescDim),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescDimV2),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescDimRange),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorDescName),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescName),
    DLSYM_INTERCEPT_ENTRY(aclTransTensorDescFormat),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorStorageFormat),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorStorageShape),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorFormat),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorShape),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorOriginFormat),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorOriginShape),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescByIndex),
    DLSYM_INTERCEPT_ENTRY(aclGetTensorDescAddress),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorDynamicInput),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorConst),
    DLSYM_INTERCEPT_ENTRY(aclSetTensorPlaceMent),
    // DLSYM_INTERCEPT_ENTRY(aclAppLog), // va not supported
    DLSYM_INTERCEPT_ENTRY(aclrtGetSocName),
    DLSYM_INTERCEPT_ENTRY(aclGetCannAttributeList),
    DLSYM_INTERCEPT_ENTRY(aclGetCannAttribute),
    DLSYM_INTERCEPT_ENTRY(aclGetDeviceCapability),
    DLSYM_INTERCEPT_ENTRY(aclrtPeekAtLastError),
    DLSYM_INTERCEPT_ENTRY(aclrtGetLastError),
    DLSYM_INTERCEPT_ENTRY(aclrtSetExceptionInfoCallback),
    DLSYM_INTERCEPT_ENTRY(aclrtGetTaskIdFromExceptionInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetStreamIdFromExceptionInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetThreadIdFromExceptionInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetDeviceIdFromExceptionInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetErrorCodeFromExceptionInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtSubscribeReport),
    DLSYM_INTERCEPT_ENTRY(aclrtLaunchCallback),
    DLSYM_INTERCEPT_ENTRY(aclrtProcessReport),
    DLSYM_INTERCEPT_ENTRY(aclrtUnSubscribeReport),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateContext),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyContext),
    DLSYM_INTERCEPT_ENTRY(aclrtSetCurrentContext),
    DLSYM_INTERCEPT_ENTRY(aclrtGetCurrentContext),
    DLSYM_INTERCEPT_ENTRY(aclrtCtxGetSysParamOpt),
    DLSYM_INTERCEPT_ENTRY(aclrtCtxSetSysParamOpt),
    DLSYM_INTERCEPT_ENTRY(aclrtGetSysParamOpt),
    DLSYM_INTERCEPT_ENTRY(aclrtSetSysParamOpt),
    DLSYM_INTERCEPT_ENTRY(aclrtSetDevice),
    DLSYM_INTERCEPT_ENTRY(aclrtResetDevice),
    DLSYM_INTERCEPT_ENTRY(aclrtResetDeviceForce),
    DLSYM_INTERCEPT_ENTRY(aclrtGetDevice),
    DLSYM_INTERCEPT_ENTRY(aclrtSetStreamFailureMode),
    DLSYM_INTERCEPT_ENTRY(aclrtGetRunMode),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeDevice),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeDeviceWithTimeout),
    DLSYM_INTERCEPT_ENTRY(aclrtSetTsDevice),
    DLSYM_INTERCEPT_ENTRY(aclrtGetDeviceUtilizationRate),
    DLSYM_INTERCEPT_ENTRY(aclrtGetDeviceCount),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateEventWithFlag),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateEventExWithFlag),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtRecordEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtResetEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtQueryEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtQueryEventStatus),
    DLSYM_INTERCEPT_ENTRY(aclrtQueryEventWaitStatus),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeEventWithTimeout),
    DLSYM_INTERCEPT_ENTRY(aclrtEventElapsedTime),
    DLSYM_INTERCEPT_ENTRY(aclrtMalloc),
    DLSYM_INTERCEPT_ENTRY(aclrtMallocAlign32),
    DLSYM_INTERCEPT_ENTRY(aclrtMallocCached),
    DLSYM_INTERCEPT_ENTRY(aclrtMemFlush),
    DLSYM_INTERCEPT_ENTRY(aclrtMemInvalidate),
    DLSYM_INTERCEPT_ENTRY(aclrtFree),
    DLSYM_INTERCEPT_ENTRY(aclrtMallocHost),
    DLSYM_INTERCEPT_ENTRY(aclrtFreeHost),
    DLSYM_INTERCEPT_ENTRY(aclrtMemcpy),
    DLSYM_INTERCEPT_ENTRY(aclrtMemset),
    DLSYM_INTERCEPT_ENTRY(aclrtMemcpyAsync),
    DLSYM_INTERCEPT_ENTRY(aclrtMemcpyAsyncWithCondition),
    DLSYM_INTERCEPT_ENTRY(aclrtMemcpy2d),
    DLSYM_INTERCEPT_ENTRY(aclrtMemcpy2dAsync),
    DLSYM_INTERCEPT_ENTRY(aclrtMemsetAsync),
    DLSYM_INTERCEPT_ENTRY(aclrtReserveMemAddress),
    DLSYM_INTERCEPT_ENTRY(aclrtReleaseMemAddress),
    DLSYM_INTERCEPT_ENTRY(aclrtMallocPhysical),
    DLSYM_INTERCEPT_ENTRY(aclrtFreePhysical),
    DLSYM_INTERCEPT_ENTRY(aclrtMapMem),
    DLSYM_INTERCEPT_ENTRY(aclrtUnmapMem),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateStream),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateStreamWithConfig),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyStream),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyStreamForce),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeStream),
    DLSYM_INTERCEPT_ENTRY(aclrtSynchronizeStreamWithTimeout),
    DLSYM_INTERCEPT_ENTRY(aclrtStreamQuery),
    DLSYM_INTERCEPT_ENTRY(aclrtStreamWaitEvent),
    DLSYM_INTERCEPT_ENTRY(aclrtSetGroup),
    DLSYM_INTERCEPT_ENTRY(aclrtGetGroupCount),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateGroupInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyGroupInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetAllGroupInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtGetGroupInfoDetail),
    DLSYM_INTERCEPT_ENTRY(aclrtDeviceCanAccessPeer),
    DLSYM_INTERCEPT_ENTRY(aclrtDeviceEnablePeerAccess),
    DLSYM_INTERCEPT_ENTRY(aclrtDeviceDisablePeerAccess),
    DLSYM_INTERCEPT_ENTRY(aclrtGetMemInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtSetOpWaitTimeout),
    DLSYM_INTERCEPT_ENTRY(aclrtSetOpExecuteTimeOut),
    DLSYM_INTERCEPT_ENTRY(aclrtSetStreamOverflowSwitch),
    DLSYM_INTERCEPT_ENTRY(aclrtGetStreamOverflowSwitch),
    DLSYM_INTERCEPT_ENTRY(aclrtSetDeviceSatMode),
    DLSYM_INTERCEPT_ENTRY(aclrtGetDeviceSatMode),
    DLSYM_INTERCEPT_ENTRY(aclrtGetOverflowStatus),
    DLSYM_INTERCEPT_ENTRY(aclrtResetOverflowStatus),
    DLSYM_INTERCEPT_ENTRY(aclrtQueryDeviceStatus),
    DLSYM_INTERCEPT_ENTRY(aclrtCreateBinary),
    DLSYM_INTERCEPT_ENTRY(aclrtDestroyBinary),
    DLSYM_INTERCEPT_ENTRY(aclrtBinaryLoad),
    DLSYM_INTERCEPT_ENTRY(aclrtBinaryUnLoad),
    DLSYM_INTERCEPT_ENTRY(aclrtBinaryGetFunction),
    DLSYM_INTERCEPT_ENTRY(aclrtLaunchKernel),
    DLSYM_INTERCEPT_ENTRY(aclrtMemExportToShareableHandle),
    DLSYM_INTERCEPT_ENTRY(aclrtMemImportFromShareableHandle),
    DLSYM_INTERCEPT_ENTRY(aclrtMemSetPidToShareableHandle),
    DLSYM_INTERCEPT_ENTRY(aclrtMemGetAllocationGranularity),
    DLSYM_INTERCEPT_ENTRY(aclrtDeviceGetBareTgid),
    DLSYM_INTERCEPT_ENTRY(aclrtCmoAsync),
    DLSYM_INTERCEPT_ENTRY(aclrtGetMemUceInfo),
    DLSYM_INTERCEPT_ENTRY(aclrtDeviceTaskAbort),
    DLSYM_INTERCEPT_ENTRY(aclrtMemUceRepair),
    DLSYM_INTERCEPT_ENTRY(aclrtStreamAbort),
    DLSYM_INTERCEPT_ENTRY(aclopSetModelDir),
    DLSYM_INTERCEPT_ENTRY(aclopLoad),
    DLSYM_INTERCEPT_ENTRY(aclopCreateAttr),
    DLSYM_INTERCEPT_ENTRY(aclopDestroyAttr),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrBool),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrInt),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrFloat),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrString),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrDataType),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListDataType),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListBool),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListInt),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListFloat),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListString),
    DLSYM_INTERCEPT_ENTRY(aclopSetAttrListListInt),
    DLSYM_INTERCEPT_ENTRY(aclopExecute),
    DLSYM_INTERCEPT_ENTRY(aclopExecuteV2),
    DLSYM_INTERCEPT_ENTRY(aclopCreateHandle),
    DLSYM_INTERCEPT_ENTRY(aclopDestroyHandle),
    DLSYM_INTERCEPT_ENTRY(aclopExecWithHandle),
    DLSYM_INTERCEPT_ENTRY(aclopCast),
    DLSYM_INTERCEPT_ENTRY(aclopCreateHandleForCast),
    DLSYM_INTERCEPT_ENTRY(aclopCreateKernel),
    DLSYM_INTERCEPT_ENTRY(aclopRegisterCompileFunc),
    DLSYM_INTERCEPT_ENTRY(aclopUnregisterCompileFunc),
    DLSYM_INTERCEPT_ENTRY(aclopSetKernelArgs),
    DLSYM_INTERCEPT_ENTRY(aclopSetKernelWorkspaceSizes),
    DLSYM_INTERCEPT_ENTRY(aclopUpdateParams),
    DLSYM_INTERCEPT_ENTRY(aclopSetMaxOpQueueNum),
    DLSYM_INTERCEPT_ENTRY(aclopInferShape),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlDestroyDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDescFromFile),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDescFromMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetNumInputs),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetNumOutputs),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputSizeByIndex),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputSizeByIndex),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateExecConfigHandle),
    DLSYM_INTERCEPT_ENTRY(aclmdlDestroyExecConfigHandle),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateDataset),
    DLSYM_INTERCEPT_ENTRY(aclmdlDestroyDataset),
    DLSYM_INTERCEPT_ENTRY(aclmdlAddDatasetBuffer),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetDatasetTensorDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDatasetTensorDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDatasetNumBuffers),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDatasetBuffer),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromFile),
    DLSYM_INTERCEPT_ENTRY(aclmdlBundleLoadFromFile),
    DLSYM_INTERCEPT_ENTRY(aclmdlBundleLoadFromMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlBundleUnload),
    DLSYM_INTERCEPT_ENTRY(aclmdlBundleGetModelNum),
    DLSYM_INTERCEPT_ENTRY(aclmdlBundleGetModelId),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromFileWithMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromMemWithMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromFileWithQ),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadFromMemWithQ),
    DLSYM_INTERCEPT_ENTRY(aclmdlExecute),
    DLSYM_INTERCEPT_ENTRY(aclmdlExecuteV2),
    DLSYM_INTERCEPT_ENTRY(aclmdlExecuteAsync),
    DLSYM_INTERCEPT_ENTRY(aclmdlUnload),
    DLSYM_INTERCEPT_ENTRY(aclmdlQuerySize),
    DLSYM_INTERCEPT_ENTRY(aclmdlQuerySizeFromMem),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetDynamicBatchSize),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetDynamicHWSize),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetInputDynamicDims),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDims),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDimsV2),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDimsRange),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputDims),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetCurOutputDims),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOpAttr),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputNameByIndex),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputNameByIndex),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputFormat),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputFormat),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDataType),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputDataType),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputIndexByName),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetOutputIndexByName),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDynamicBatch),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetDynamicHW),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDynamicGearCount),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetInputDynamicDims),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateAIPP),
    DLSYM_INTERCEPT_ENTRY(aclmdlDestroyAIPP),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetAippDataSize),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPInputFormat),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPCscParams),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPRbuvSwapSwitch),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPAxSwapSwitch),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPSrcImageSize),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPScfParams),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPCropParams),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPPaddingParams),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPDtcPixelMean),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPDtcPixelMin),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPPixelVarReci),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetInputAIPP),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetAIPPByInputIndex),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetAippType),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetFirstAippInfo),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateAndGetOpDesc),
    DLSYM_INTERCEPT_ENTRY(aclmdlInitDump),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetDump),
    DLSYM_INTERCEPT_ENTRY(aclmdlFinalizeDump),
    DLSYM_INTERCEPT_ENTRY(aclmdlLoadWithConfig),
    DLSYM_INTERCEPT_ENTRY(aclmdlCreateConfigHandle),
    DLSYM_INTERCEPT_ENTRY(aclmdlDestroyConfigHandle),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetConfigOpt),
    DLSYM_INTERCEPT_ENTRY(aclmdlSetExecConfigOpt),
    DLSYM_INTERCEPT_ENTRY(aclmdlGetTensorRealName),

    DLSYM_INTERCEPT_ENTRY(aclopCompile),
    DLSYM_INTERCEPT_ENTRY(aclopCompileAndExecute),
    DLSYM_INTERCEPT_ENTRY(aclopCompileAndExecuteV2),
    DLSYM_INTERCEPT_ENTRY(aclSetCompileopt),
    DLSYM_INTERCEPT_ENTRY(aclGetCompileoptSize),
    DLSYM_INTERCEPT_ENTRY(aclGetCompileopt),
    DLSYM_INTERCEPT_ENTRY(aclopSetCompileFlag),
    DLSYM_INTERCEPT_ENTRY(aclGenGraphAndDumpForOp),
    DLSYM_INTERCEPT_ENTRY(aclCreateGraphDumpOpt),
    DLSYM_INTERCEPT_ENTRY(aclDestroyGraphDumpOpt),

    DLSYM_INTERCEPT_ENTRY(aclblasGemvEx),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForGemvEx),
    DLSYM_INTERCEPT_ENTRY(aclblasHgemv),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForHgemv),
    DLSYM_INTERCEPT_ENTRY(aclblasS8gemv),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForS8gemv),
    DLSYM_INTERCEPT_ENTRY(aclblasGemmEx),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForGemmEx),
    DLSYM_INTERCEPT_ENTRY(aclblasHgemm),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForHgemm),
    DLSYM_INTERCEPT_ENTRY(aclblasS8gemm),
    DLSYM_INTERCEPT_ENTRY(aclblasCreateHandleForS8gemm),

    DLSYM_INTERCEPT_ENTRY(aclnnDropoutBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnDropout),
    DLSYM_INTERCEPT_ENTRY(aclnnNormalTensorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnNormalTensorFloat),
    DLSYM_INTERCEPT_ENTRY(aclnnNormalFloatTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnNormalFloatFloat),
    DLSYM_INTERCEPT_ENTRY(aclnnBernoulli),
    DLSYM_INTERCEPT_ENTRY(aclnnBernoulliTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBernoulli),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBernoulliTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnMultinomial),
    DLSYM_INTERCEPT_ENTRY(aclnnDropoutDoMask),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRandom),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceUniform),
    DLSYM_INTERCEPT_ENTRY(aclnnDropoutGenMask),
    DLSYM_INTERCEPT_ENTRY(aclnnDropoutGenMaskV2),
    DLSYM_INTERCEPT_ENTRY(aclnnRandperm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceNormal),
    DLSYM_INTERCEPT_ENTRY(aclnnIncreFlashAttentionV2),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachPowScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnAminmax),
    DLSYM_INTERCEPT_ENTRY(aclnnDynamicQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool3dWithArgmax),
    DLSYM_INTERCEPT_ENTRY(aclnnSign),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeInitRoutingQuantV2),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSigmoidBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmulReduceScatter),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeFinalizeRoutingV2),
    DLSYM_INTERCEPT_ENTRY(aclnnCalculateMatmulWeightSizeV2),
    DLSYM_INTERCEPT_ENTRY(aclnnCalculateMatmulWeightSize),
    DLSYM_INTERCEPT_ENTRY(aclnnTransMatmulWeight),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest2d),
    DLSYM_INTERCEPT_ENTRY(aclnnComplex),
    DLSYM_INTERCEPT_ENTRY(aclnnReciprocal),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceReciprocal),
    DLSYM_INTERCEPT_ENTRY(aclnnFusedInferAttentionScore),
    DLSYM_INTERCEPT_ENTRY(aclnnVarMean),
    DLSYM_INTERCEPT_ENTRY(aclnnAmin),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedMatmul),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcdivList),
    DLSYM_INTERCEPT_ENTRY(aclnnGatherV2),
    DLSYM_INTERCEPT_ENTRY(aclnnSmoothL1Loss),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool2dWithMask),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool2dWithIndices),
    DLSYM_INTERCEPT_ENTRY(aclnnL1LossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnIsInf),
    DLSYM_INTERCEPT_ENTRY(aclnnGluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleLinear1dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnErfinv),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceErfinv),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearestExact3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnHardsigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceHardsigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulWeightNz),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSinh),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxV2),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcdivScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnTrace),
    DLSYM_INTERCEPT_ENTRY(aclnnMin),
    DLSYM_INTERCEPT_ENTRY(aclnnHardtanhBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAvgPool3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormReduceBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchMatmulQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnGeGluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnGeGluV3Backward),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormElemtBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad1d),
    DLSYM_INTERCEPT_ENTRY(aclnnPromptFlashAttention),
    DLSYM_INTERCEPT_ENTRY(aclnnXLogYScalarOther),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceXLogYScalarOther),
    DLSYM_INTERCEPT_ENTRY(aclnnLayerNormBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceCopy),
    DLSYM_INTERCEPT_ENTRY(aclnnFmodScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFmodScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnLerp),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLerp),
    DLSYM_INTERCEPT_ENTRY(aclnnL1Loss),
    DLSYM_INTERCEPT_ENTRY(aclnnLogAddExp2),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeInitRoutingV2),
    DLSYM_INTERCEPT_ENTRY(aclnnExp2),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceExp2),
    DLSYM_INTERCEPT_ENTRY(aclnnUnique),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedMatmulV2),
    DLSYM_INTERCEPT_ENTRY(aclnnConvertWeightToINT4Pack),
    DLSYM_INTERCEPT_ENTRY(aclnnCummax),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMinimumScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnArgMax),
    DLSYM_INTERCEPT_ENTRY(aclnnPdistForward),
    DLSYM_INTERCEPT_ENTRY(aclnnRsubs),
    DLSYM_INTERCEPT_ENTRY(aclnnRsub),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad1d),
    DLSYM_INTERCEPT_ENTRY(aclnnSwinTransformerLnQkvQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMaskedScatter),
    DLSYM_INTERCEPT_ENTRY(aclnnGeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceGeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceScatterUpdate),
    DLSYM_INTERCEPT_ENTRY(aclnnMedian),
    DLSYM_INTERCEPT_ENTRY(aclnnMedianDim),
    DLSYM_INTERCEPT_ENTRY(aclnnNanMedian),
    DLSYM_INTERCEPT_ENTRY(aclnnNanMedianDim),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseXorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseXorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnSiluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnApplyFusedEmaAdam),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseOrTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseOrTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool2dWithMaskBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool2dWithIndicesBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachZeroInplace),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMulScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnApplyAdamWV2),
    DLSYM_INTERCEPT_ENTRY(aclnnSliceV2),
    DLSYM_INTERCEPT_ENTRY(aclnnRoiAlign),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulAllReduceV3),
    DLSYM_INTERCEPT_ENTRY(aclnnGridSampler2DBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAlltoAllAllGatherBatchMatMul),
    DLSYM_INTERCEPT_ENTRY(aclnnEqTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceEqTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnTrunc),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceTrunc),
    DLSYM_INTERCEPT_ENTRY(aclnnLeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnDeepNormGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnStack),
    DLSYM_INTERCEPT_ENTRY(aclnnBincount),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcmulScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBicubic2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseAndScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseAndScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormElemt),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedMatMulAllReduce),
    DLSYM_INTERCEPT_ENTRY(aclnnLinalgQr),
    DLSYM_INTERCEPT_ENTRY(aclnnChamferDistanceBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnCumsum),
    DLSYM_INTERCEPT_ENTRY(aclnnCumsumV2),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachExp),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachCopy),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachNeg),
    DLSYM_INTERCEPT_ENTRY(aclnnEmbedding),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachCos),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAddLayerNormGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnNeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceNeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnLogicalOr),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLogicalOr),
    DLSYM_INTERCEPT_ENTRY(aclnnSplitTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnLog10),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLog10),
    DLSYM_INTERCEPT_ENTRY(aclnnGlobalMaxPool),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleLinear1d),
    DLSYM_INTERCEPT_ENTRY(aclnnSinh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSinh),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSubList),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSin),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest3d),
    DLSYM_INTERCEPT_ENTRY(aclnnHardsigmoidBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeGatingTopKSoftmaxV2),
    DLSYM_INTERCEPT_ENTRY(aclnnMseLossOut),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeGatingTopKSoftmax),
    DLSYM_INTERCEPT_ENTRY(aclnnAddcdiv),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAddcdiv),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSign),
    DLSYM_INTERCEPT_ENTRY(aclnnAllGatherMatmul),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMinimumScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnSort),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMulList),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMaximumScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnAdaptiveAvgPool2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcmulScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMaskedFillTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnReduceLogSum),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceZero),
    DLSYM_INTERCEPT_ENTRY(aclnnResize),
    DLSYM_INTERCEPT_ENTRY(aclnnSinkhorn),
    DLSYM_INTERCEPT_ENTRY(aclnnPromptFlashAttentionV2),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxN),
    DLSYM_INTERCEPT_ENTRY(aclnnMean),
    DLSYM_INTERCEPT_ENTRY(aclnnMeanV2),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeFinalizeRoutingV2Grad),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeTokenPermute),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMaximumList),
    DLSYM_INTERCEPT_ENTRY(aclnnVar),
    DLSYM_INTERCEPT_ENTRY(aclnnVarCorrection),
    DLSYM_INTERCEPT_ENTRY(aclnnLtTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLtTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnTril),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceTril),
    DLSYM_INTERCEPT_ENTRY(aclnnFFNV2),
    DLSYM_INTERCEPT_ENTRY(aclnnAtanh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAtanh),
    DLSYM_INTERCEPT_ENTRY(aclnnAddcmul),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAddcmul),
    DLSYM_INTERCEPT_ENTRY(aclnnIsInScalarTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnAdaptiveAvgPool2d),
    DLSYM_INTERCEPT_ENTRY(aclnnAcosh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAcosh),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnCast),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad1dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAtan),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSubListV2),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceQuantMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnFloorDivide),
    DLSYM_INTERCEPT_ENTRY(aclnnFloorDivides),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFloorDivide),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFloorDivides),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSigmoidForward),
    DLSYM_INTERCEPT_ENTRY(aclnnAll),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftshrinkBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest1dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnSeluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAdaptiveMaxPool2d),
    DLSYM_INTERCEPT_ENTRY(aclnnAddr),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAddr),
    DLSYM_INTERCEPT_ENTRY(aclnnCelu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceCelu),
    DLSYM_INTERCEPT_ENTRY(aclnnWeightQuantBatchMatmulV2),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMulScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnDiag),
    DLSYM_INTERCEPT_ENTRY(aclnnAminmaxDim),
    DLSYM_INTERCEPT_ENTRY(aclnnSigmoidBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmulCompressDequant),
    DLSYM_INTERCEPT_ENTRY(aclnnReduceNansum),
    DLSYM_INTERCEPT_ENTRY(aclnnAdd),
    DLSYM_INTERCEPT_ENTRY(aclnnAdds),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAdd),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAdds),
    DLSYM_INTERCEPT_ENTRY(aclnnNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnOneHot),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearestExact2d),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachErfc),
    DLSYM_INTERCEPT_ENTRY(aclnnRingAttentionUpdate),
    DLSYM_INTERCEPT_ENTRY(aclnnPrecisionCompare),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLerpList),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeInitRoutingQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnChannelShuffle),
    DLSYM_INTERCEPT_ENTRY(aclnnRReluWithNoise),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRReluWithNoise),
    DLSYM_INTERCEPT_ENTRY(aclnnSub),
    DLSYM_INTERCEPT_ENTRY(aclnnSubs),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSub),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSubs),
    DLSYM_INTERCEPT_ENTRY(aclnnBinaryCrossEntropy),
    DLSYM_INTERCEPT_ENTRY(aclnnXLogYTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceXLogYTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnConvolution),
    DLSYM_INTERCEPT_ENTRY(aclnnConvTbc),
    DLSYM_INTERCEPT_ENTRY(aclnnConvDepthwise2d),
    DLSYM_INTERCEPT_ENTRY(aclnnSplitWithSize),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachErf),
    DLSYM_INTERCEPT_ENTRY(aclnnLayerNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnLayerNormWithImplMode),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxUnpool2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseNot),
    DLSYM_INTERCEPT_ENTRY(aclnnSigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSigmoid),
    DLSYM_INTERCEPT_ENTRY(aclnnLgamma),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLog10),
    DLSYM_INTERCEPT_ENTRY(aclnnAddbmm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAddbmm),
    DLSYM_INTERCEPT_ENTRY(aclnnArgsort),
    DLSYM_INTERCEPT_ENTRY(aclnnIsPosInf),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxDim),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedBiasAddGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedBiasAddGradV2),
    DLSYM_INTERCEPT_ENTRY(aclnnIndexCopy),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceIndexCopy),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcmulScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeTokenUnpermuteGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeatInterleave),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeatInterleaveWithDim),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeatInterleaveInt),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeatInterleaveIntWithDim),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeatInterleaveTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnLogicalXor),
    DLSYM_INTERCEPT_ENTRY(aclnnAbs),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBilinear2d),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearestExact3d),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachDivScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnTriangularSolve),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftplusBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnCircularPad3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnLeakyRelu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLeakyRelu),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachPowScalarAndTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnScatterNd),
    DLSYM_INTERCEPT_ENTRY(aclnnReduceSum),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeInitRoutingV2Grad),
    DLSYM_INTERCEPT_ENTRY(aclnnIndexSelect),
    DLSYM_INTERCEPT_ENTRY(aclnnSearchSorted),
    DLSYM_INTERCEPT_ENTRY(aclnnSearchSorteds),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnLeakyReluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMish),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMish),
    DLSYM_INTERCEPT_ENTRY(aclnnMinimum),
    DLSYM_INTERCEPT_ENTRY(aclnnArange),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeComputeExpertTokens),
    DLSYM_INTERCEPT_ENTRY(aclnnFloor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFloor),
    DLSYM_INTERCEPT_ENTRY(aclnnTan),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceTan),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnHardswishBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnIsFinite),
    DLSYM_INTERCEPT_ENTRY(aclnnFrac),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFrac),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnErfc),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceErfc),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceQuantScatter),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFillTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnAtan),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAtan),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad1dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnPolar),
    DLSYM_INTERCEPT_ENTRY(aclnnKlDivBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLog),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachDivScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnNLLLoss2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAdaptiveAvgPool3d),
    DLSYM_INTERCEPT_ENTRY(aclnnGer),
    DLSYM_INTERCEPT_ENTRY(aclnnEmbeddingDenseBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnSmoothL1LossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnIndexFillTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceIndexFillTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnHistc),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmul),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulV2),
    DLSYM_INTERCEPT_ENTRY(aclnnAtan2),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAtan2),
    DLSYM_INTERCEPT_ENTRY(aclnnScatter),
    DLSYM_INTERCEPT_ENTRY(aclnnScatterValue),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceScatter),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceScatterValue),
    DLSYM_INTERCEPT_ENTRY(aclnnMishBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnGlobalAveragePool),
    DLSYM_INTERCEPT_ENTRY(aclnnInplacePut),
    DLSYM_INTERCEPT_ENTRY(aclnnThresholdBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMinimumScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnHardswish),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceHardswish),
    DLSYM_INTERCEPT_ENTRY(aclnnGtTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceGtTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMaximumScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBilinear2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnEmbeddingBag),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseOrScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseOrScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseXorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseXorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnMuls),
    DLSYM_INTERCEPT_ENTRY(aclnnMul),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMuls),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMul),
    DLSYM_INTERCEPT_ENTRY(aclnnNanToNum),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceNanToNum),
    DLSYM_INTERCEPT_ENTRY(aclnnGcd),
    DLSYM_INTERCEPT_ENTRY(aclnnReal),
    DLSYM_INTERCEPT_ENTRY(aclnnGeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceGeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnFFNV3),
    DLSYM_INTERCEPT_ENTRY(aclnnHardshrink),
    DLSYM_INTERCEPT_ENTRY(aclnnRenorm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRenorm),
    DLSYM_INTERCEPT_ENTRY(aclnnInstanceNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnBinaryCrossEntropyWithLogitsBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnEye),
    DLSYM_INTERCEPT_ENTRY(aclnnCircularPad2d),
    DLSYM_INTERCEPT_ENTRY(aclnnAminmaxAll),
    DLSYM_INTERCEPT_ENTRY(aclnnLinalgCross),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftMarginLossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulV3),
    DLSYM_INTERCEPT_ENTRY(aclnnSum),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcmulList),
    DLSYM_INTERCEPT_ENTRY(aclnnAdaptiveAvgPool3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAbs),
    DLSYM_INTERCEPT_ENTRY(aclnnGlu),
    DLSYM_INTERCEPT_ENTRY(aclnnCeil),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceCeil),
    DLSYM_INTERCEPT_ENTRY(aclnnAddmv),
    DLSYM_INTERCEPT_ENTRY(aclnnPromptFlashAttentionV3),
    DLSYM_INTERCEPT_ENTRY(aclnnWeightQuantBatchMatmulV3),
    DLSYM_INTERCEPT_ENTRY(aclnnLerps),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLerps),
    DLSYM_INTERCEPT_ENTRY(aclnnFmodTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFmodTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnPowTensorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplacePowTensorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnDynamicQuantV2),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedMatmulV4),
    DLSYM_INTERCEPT_ENTRY(aclnnLogicalAnd),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLogicalAnd),
    DLSYM_INTERCEPT_ENTRY(aclnnNLLLoss),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnNonzero),
    DLSYM_INTERCEPT_ENTRY(aclnnPreluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMseLoss),
    DLSYM_INTERCEPT_ENTRY(aclnnIndex),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnCalculateConvolutionWeightSize),
    DLSYM_INTERCEPT_ENTRY(aclnnTransConvolutionWeight),
    DLSYM_INTERCEPT_ENTRY(aclnnCtcLoss),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachTan),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftmaxBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeFinalizeRouting),
    DLSYM_INTERCEPT_ENTRY(aclnnLog),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLog),
    DLSYM_INTERCEPT_ENTRY(aclnnIm2col),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantize),
    DLSYM_INTERCEPT_ENTRY(aclnnProd),
    DLSYM_INTERCEPT_ENTRY(aclnnProdDim),
    DLSYM_INTERCEPT_ENTRY(aclnnIncreFlashAttentionV4),
    DLSYM_INTERCEPT_ENTRY(aclnnHardshrinkBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnTanh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceTanh),
    DLSYM_INTERCEPT_ENTRY(aclnnScale),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxUnpool2d),
    DLSYM_INTERCEPT_ENTRY(aclnnConstantPadNd),
    DLSYM_INTERCEPT_ENTRY(aclnnCosh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceCosh),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormGatherStatsWithCounts),
    DLSYM_INTERCEPT_ENTRY(aclnnMm),
    DLSYM_INTERCEPT_ENTRY(aclnnRange),
    DLSYM_INTERCEPT_ENTRY(aclnnStdMeanCorrection),
    DLSYM_INTERCEPT_ENTRY(aclnnElu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceElu),
    DLSYM_INTERCEPT_ENTRY(aclnnGridSampler3DBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBicubic2d),
    DLSYM_INTERCEPT_ENTRY(aclnnWeightQuantMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnGridSampler3D),
    DLSYM_INTERCEPT_ENTRY(aclnnIsInTensorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnBinaryCrossEntropyBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnTanhBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnSwishBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnStridedSliceAssignV2),
    DLSYM_INTERCEPT_ENTRY(aclnnTransQuantParamV2),
    DLSYM_INTERCEPT_ENTRY(aclnnBlendImagesCustom),
    DLSYM_INTERCEPT_ENTRY(aclnnSwinAttentionScoreQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnBaddbmm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBaddbmm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceMaskedFillScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnWeightQuantBatchMatmul),
    DLSYM_INTERCEPT_ENTRY(aclnnTransQuantParam),
    DLSYM_INTERCEPT_ENTRY(aclnnMinDim),
    DLSYM_INTERCEPT_ENTRY(aclnnShrink),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxUnpool3d),
    DLSYM_INTERCEPT_ENTRY(aclnnApplyRotaryPosEmb),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSubScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnDeepNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddListV2),
    DLSYM_INTERCEPT_ENTRY(aclnnKlDiv),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLerpScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnAmax),
    DLSYM_INTERCEPT_ENTRY(aclnnIm2colBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnKthvalue),
    DLSYM_INTERCEPT_ENTRY(aclnnAvgPool2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnFFN),
    DLSYM_INTERCEPT_ENTRY(aclnnGridSampler2D),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachPowList),
    DLSYM_INTERCEPT_ENTRY(aclnnMaximum),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupNormSwish),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachCosh),
    DLSYM_INTERCEPT_ENTRY(aclnnLog1p),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLog1p),
    DLSYM_INTERCEPT_ENTRY(aclnnTriu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceTriu),
    DLSYM_INTERCEPT_ENTRY(aclnnFakeQuantPerTensorAffineCachemask),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachTanh),
    DLSYM_INTERCEPT_ENTRY(aclnnNeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceNeScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnGatherNd),
    DLSYM_INTERCEPT_ENTRY(aclnnIncreFlashAttention),
    DLSYM_INTERCEPT_ENTRY(aclnnDot),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachDivList),
    DLSYM_INTERCEPT_ENTRY(aclnnMax),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBilinear2dAABackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmul),
    DLSYM_INTERCEPT_ENTRY(aclnnRepeat),
    DLSYM_INTERCEPT_ENTRY(aclnnUniqueConsecutive),
    DLSYM_INTERCEPT_ENTRY(aclnnDiagFlat),
    DLSYM_INTERCEPT_ENTRY(aclnnEqual),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnScatterAdd),
    DLSYM_INTERCEPT_ENTRY(aclRfft1D),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionScoreGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionUnpaddingScoreGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionScoreGradV2),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionUnpaddingScoreGradV2),
    DLSYM_INTERCEPT_ENTRY(aclnnBitwiseAndTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceBitwiseAndTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftshrink),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearestExact2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceOne),
    DLSYM_INTERCEPT_ENTRY(aclnnBackgroundReplace),
    DLSYM_INTERCEPT_ENTRY(aclnnClamp),
    DLSYM_INTERCEPT_ENTRY(aclnnClampMin),
    DLSYM_INTERCEPT_ENTRY(aclnnClampMinTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceClampMinTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnClampTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnClampMax),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceClampMax),
    DLSYM_INTERCEPT_ENTRY(aclnnClampMaxTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceClampMaxTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachExpm1),
    DLSYM_INTERCEPT_ENTRY(aclnnMaskedSoftmaxWithRelPosBias),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachPowScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnAffineGrid),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchMatMul),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSubScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnErf),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceErf),
    DLSYM_INTERCEPT_ENTRY(aclnnLeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLeTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnGeluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmulAllReduce),
    DLSYM_INTERCEPT_ENTRY(aclnnEqScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceEqScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnAscendAntiQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnNonzeroV2),
    DLSYM_INTERCEPT_ENTRY(aclnnCummin),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxPool3dWithArgmaxBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeInitRouting),
    DLSYM_INTERCEPT_ENTRY(aclnnArgMin),
    DLSYM_INTERCEPT_ENTRY(aclnnUnique2),
    DLSYM_INTERCEPT_ENTRY(aclnnInverse),
    DLSYM_INTERCEPT_ENTRY(aclnnUniqueDim),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupNormSilu),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupNormSiluV2),
    DLSYM_INTERCEPT_ENTRY(aclnnRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeTokenUnpermute),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleTrilinear3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnRemainderTensorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnRemainderTensorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnRemainderScalarTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRemainderTensorTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRemainderTensorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSqrt),
    DLSYM_INTERCEPT_ENTRY(aclnnLog2),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLog2),
    DLSYM_INTERCEPT_ENTRY(aclnnXLogYScalarSelf),
    DLSYM_INTERCEPT_ENTRY(aclStft),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLog1p),
    DLSYM_INTERCEPT_ENTRY(aclnnIsClose),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMinimumList),
    DLSYM_INTERCEPT_ENTRY(aclnnMoeTokenPermuteGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad3d),
    DLSYM_INTERCEPT_ENTRY(aclnnSwish),
    DLSYM_INTERCEPT_ENTRY(aclnnIndexPutImpl),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachRoundOffNumberV2),
    DLSYM_INTERCEPT_ENTRY(aclnnAddLayerNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnIncreFlashAttentionV3),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchMatMulReduceScatterAlltoAll),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMulScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearestExact1dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnAvgPool3d),
    DLSYM_INTERCEPT_ENTRY(aclnnCat),
    DLSYM_INTERCEPT_ENTRY(aclnnAsin),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAsin),
    DLSYM_INTERCEPT_ENTRY(aclnnExp),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceExp),
    DLSYM_INTERCEPT_ENTRY(aclnnMultiScaleDeformableAttentionGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleTrilinear3d),
    DLSYM_INTERCEPT_ENTRY(aclnnMaskedSelect),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceWeightQuantMatmulAllReduceAddRmsNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnNeg),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceNeg),
    DLSYM_INTERCEPT_ENTRY(aclnnSWhere),
    DLSYM_INTERCEPT_ENTRY(aclnnCos),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceCos),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcdivScalarV2),
    DLSYM_INTERCEPT_ENTRY(aclnnGemm),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad3d),
    DLSYM_INTERCEPT_ENTRY(aclnnMatmulAllReduceV2),
    DLSYM_INTERCEPT_ENTRY(aclnnMseLossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnExpand),
    DLSYM_INTERCEPT_ENTRY(aclnnBidirectionLSTMV2),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachRoundOffNumber),
    DLSYM_INTERCEPT_ENTRY(aclnnEmbeddingRenorm),
    DLSYM_INTERCEPT_ENTRY(aclnnSlogdet),
    DLSYM_INTERCEPT_ENTRY(aclnnGelu),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulV4),
    DLSYM_INTERCEPT_ENTRY(aclnnSin),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSin),
    DLSYM_INTERCEPT_ENTRY(aclnnAcos),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAcos),
    DLSYM_INTERCEPT_ENTRY(aclnnPrelu),
    DLSYM_INTERCEPT_ENTRY(aclnnAscendQuantV3),
    DLSYM_INTERCEPT_ENTRY(aclnnRound),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRound),
    DLSYM_INTERCEPT_ENTRY(aclnnRoundDecimals),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRoundDecimals),
    DLSYM_INTERCEPT_ENTRY(aclnnMinN),
    DLSYM_INTERCEPT_ENTRY(aclnnMultiScaleDeformableAttnFunction),
    DLSYM_INTERCEPT_ENTRY(aclnnFlip),
    DLSYM_INTERCEPT_ENTRY(aclnnExpm1),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceExpm1),
    DLSYM_INTERCEPT_ENTRY(aclnnLinalgVectorNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSumExp),
    DLSYM_INTERCEPT_ENTRY(aclnnFakeQuantPerChannelAffineCachemask),
    DLSYM_INTERCEPT_ENTRY(aclnnNLLLoss2d),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachPowScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSoftmaxBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnCtcLossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnLtScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLtScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnRmsNormGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnRelu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRelu),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupedMatmulV3),
    DLSYM_INTERCEPT_ENTRY(aclnnConvolutionBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnConvTbcBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupNormBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnSlice),
    DLSYM_INTERCEPT_ENTRY(aclnnCircularPad2dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnMultilabelMarginLoss),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBilinear2dAA),
    DLSYM_INTERCEPT_ENTRY(aclnnWeightQuantMatmulAllReduce),
    DLSYM_INTERCEPT_ENTRY(aclnnIsNegInf),
    DLSYM_INTERCEPT_ENTRY(aclnnLogAddExp),
    DLSYM_INTERCEPT_ENTRY(aclnnFusedInferAttentionScoreV2),
    DLSYM_INTERCEPT_ENTRY(aclnnGtScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceGtScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnLogdet),
    DLSYM_INTERCEPT_ENTRY(aclnnAny),
    DLSYM_INTERCEPT_ENTRY(aclnnAddmm),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAddmm),
    DLSYM_INTERCEPT_ENTRY(aclnnSelu),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSelu),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftMarginLoss),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleNearest1d),
    DLSYM_INTERCEPT_ENTRY(aclnnAsinh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceAsinh),
    DLSYM_INTERCEPT_ENTRY(aclnnFlatten),
    DLSYM_INTERCEPT_ENTRY(aclnnBinaryCrossEntropyWithLogits),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulAllReduceV2),
    DLSYM_INTERCEPT_ENTRY(aclnnLogSoftmax),
    DLSYM_INTERCEPT_ENTRY(aclnnMaxUnpool3dBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnGroupNorm),
    DLSYM_INTERCEPT_ENTRY(aclnnTake),
    DLSYM_INTERCEPT_ENTRY(aclnnGeluV2),
    DLSYM_INTERCEPT_ENTRY(aclnnRoll),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAcos),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddcdivScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachMaximumScalarList),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachSubScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnPowTensorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnInplacePowTensorScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnPowScalarTensor),
    DLSYM_INTERCEPT_ENTRY(aclnnLinspace),
    DLSYM_INTERCEPT_ENTRY(aclnnEluBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnSilentCheck),
    DLSYM_INTERCEPT_ENTRY(aclnnBidirectionLSTM),
    DLSYM_INTERCEPT_ENTRY(aclnnQuantMatmulAllReduce),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAddList),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceFillScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnMrgbaCustom),
    DLSYM_INTERCEPT_ENTRY(aclnnIndexAdd),
    DLSYM_INTERCEPT_ENTRY(aclnnRsqrt),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceRsqrt),
    DLSYM_INTERCEPT_ENTRY(aclnnSwiGlu),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionScore),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionVarLenScore),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionScoreV2),
    DLSYM_INTERCEPT_ENTRY(aclnnFlashAttentionVarLenScoreV2),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachAsin),
    DLSYM_INTERCEPT_ENTRY(aclnnGeluBackwardV2),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftmax),
    DLSYM_INTERCEPT_ENTRY(aclnnEinsum),
    DLSYM_INTERCEPT_ENTRY(aclnnSoftplus),
    DLSYM_INTERCEPT_ENTRY(aclnnReplicationPad2d),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachDivScalar),
    DLSYM_INTERCEPT_ENTRY(aclnnSignbit),
    DLSYM_INTERCEPT_ENTRY(aclnnSinc),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSinc),
    DLSYM_INTERCEPT_ENTRY(aclnnBatchNormStats),
    DLSYM_INTERCEPT_ENTRY(aclnnGeGlu),
    DLSYM_INTERCEPT_ENTRY(aclnnGeGluV3),
    DLSYM_INTERCEPT_ENTRY(aclnnDigamma),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachLog2),
    DLSYM_INTERCEPT_ENTRY(aclnnGather),
    DLSYM_INTERCEPT_ENTRY(aclnnAvgPool2d),
    DLSYM_INTERCEPT_ENTRY(aclnnAscendQuant),
    DLSYM_INTERCEPT_ENTRY(aclnnStd),
    DLSYM_INTERCEPT_ENTRY(aclnnSwiGluGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnHardtanh),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceHardtanh),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBicubic2dAAGrad),
    DLSYM_INTERCEPT_ENTRY(aclnnSqrt),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceSqrt),
    DLSYM_INTERCEPT_ENTRY(aclnnPermute),
    DLSYM_INTERCEPT_ENTRY(aclnnReflectionPad2d),
    DLSYM_INTERCEPT_ENTRY(aclnnLogicalNot),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceLogicalNot),
    DLSYM_INTERCEPT_ENTRY(aclnnNonMaxSuppression),
    DLSYM_INTERCEPT_ENTRY(aclnnTopk),
    DLSYM_INTERCEPT_ENTRY(aclnnDiv),
    DLSYM_INTERCEPT_ENTRY(aclnnDivs),
    DLSYM_INTERCEPT_ENTRY(aclnnDivMod),
    DLSYM_INTERCEPT_ENTRY(aclnnDivMods),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceDiv),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceDivs),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceDivMod),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceDivMods),
    DLSYM_INTERCEPT_ENTRY(aclnnMv),
    DLSYM_INTERCEPT_ENTRY(aclnnQr),
    DLSYM_INTERCEPT_ENTRY(aclnnScatterNdUpdate),
    DLSYM_INTERCEPT_ENTRY(aclnnNLLLossBackward),
    DLSYM_INTERCEPT_ENTRY(aclnnUpsampleBicubic2dAA),
    DLSYM_INTERCEPT_ENTRY(aclnnThreshold),
    DLSYM_INTERCEPT_ENTRY(aclnnInplaceThreshold),
    DLSYM_INTERCEPT_ENTRY(aclnnForeachReciprocal),
};

#pragma GCC diagnostic pop

DEFINE_DLSYM_INTERCEPT(intercept_symbol_map);
