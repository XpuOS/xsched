/// This file is auto-generated by command "python3 tools/autogen/gen.py --source platforms/hip/hal/include/xsched/hip/hal/hip.h --lib /opt/rocm/lib/libamdhip64.so --platform hip --prefix hip -I /usr/lib/gcc/x86_64-linux-gnu/13/include"
#include "xsched/utils/function.h"
#include "xsched/hip/hal/driver.h"
#include "xsched/hip/shim/shim.h"

using namespace xsched::hip;

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Init, hipError_t, hipInit, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetVersion, hipError_t, hipDriverGetVersion, int *, driverVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RuntimeGetVersion, hipError_t, hipRuntimeGetVersion, int *, runtimeVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGet, hipError_t, hipDeviceGet, hipDevice_t *, device, int, ordinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceComputeCapability, hipError_t, hipDeviceComputeCapability, int *, major, int *, minor, hipDevice_t, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetName, hipError_t, hipDeviceGetName, char *, name, int, len, hipDevice_t, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetUuid, hipError_t, hipDeviceGetUuid, hipUUID *, uuid, hipDevice_t, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetP2PAttribute, hipError_t, hipDeviceGetP2PAttribute, int *, value, hipDeviceP2PAttr, attr, int, srcDevice, int, dstDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetPCIBusId, hipError_t, hipDeviceGetPCIBusId, char *, pciBusId, int, len, int, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetByPCIBusId, hipError_t, hipDeviceGetByPCIBusId, int *, device, const char *, pciBusId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceTotalMem, hipError_t, hipDeviceTotalMem, size_t *, bytes, hipDevice_t, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSynchronize, hipError_t, hipDeviceSynchronize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceReset, hipError_t, hipDeviceReset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetDevice, hipError_t, hipSetDevice, int, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetValidDevices, hipError_t, hipSetValidDevices, int *, device_arr, int, len);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDevice, hipError_t, hipGetDevice, int *, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceCount, hipError_t, hipGetDeviceCount, int *, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetAttribute, hipError_t, hipDeviceGetAttribute, int *, pi, hipDeviceAttribute_t, attr, int, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetDefaultMemPool, hipError_t, hipDeviceGetDefaultMemPool, hipMemPool_t *, mem_pool, int, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetMemPool, hipError_t, hipDeviceSetMemPool, int, device, hipMemPool_t, mem_pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemPool, hipError_t, hipDeviceGetMemPool, hipMemPool_t *, mem_pool, int, device);
// DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDevicePropertiesR0600, hipError_t, hipGetDevicePropertiesR0600, hipDeviceProp_tR0600 *, prop, int, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceProperties, hipError_t, hipGetDeviceProperties, hipDeviceProp_tR0600 *, prop, int, deviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetCacheConfig, hipError_t, hipDeviceSetCacheConfig, hipFuncCache_t, cacheConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCacheConfig, hipError_t, hipDeviceGetCacheConfig, hipFuncCache_t *, cacheConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetLimit, hipError_t, hipDeviceGetLimit, size_t *, pValue, enum hipLimit_t, limit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetLimit, hipError_t, hipDeviceSetLimit, enum hipLimit_t, limit, size_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetSharedMemConfig, hipError_t, hipDeviceGetSharedMemConfig, hipSharedMemConfig *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceFlags, hipError_t, hipGetDeviceFlags, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetSharedMemConfig, hipError_t, hipDeviceSetSharedMemConfig, hipSharedMemConfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetDeviceFlags, hipError_t, hipSetDeviceFlags, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ChooseDeviceR0600, hipError_t, hipChooseDeviceR0600, int *, device, const hipDeviceProp_tR0600 *, prop);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtGetLinkTypeAndHopCount, hipError_t, hipExtGetLinkTypeAndHopCount, int, device1, int, device2, uint32_t *, linktype, uint32_t *, hopcount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetMemHandle, hipError_t, hipIpcGetMemHandle, hipIpcMemHandle_t *, handle, void *, devPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenMemHandle, hipError_t, hipIpcOpenMemHandle, void **, devPtr, hipIpcMemHandle_t, handle, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcCloseMemHandle, hipError_t, hipIpcCloseMemHandle, void *, devPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetEventHandle, hipError_t, hipIpcGetEventHandle, hipIpcEventHandle_t *, handle, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenEventHandle, hipError_t, hipIpcOpenEventHandle, hipEvent_t *, event, hipIpcEventHandle_t, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetAttribute, hipError_t, hipFuncSetAttribute, const void *, func, hipFuncAttribute, attr, int, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetCacheConfig, hipError_t, hipFuncSetCacheConfig, const void *, func, hipFuncCache_t, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetSharedMemConfig, hipError_t, hipFuncSetSharedMemConfig, const void *, func, hipSharedMemConfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetLastError, hipError_t, hipGetLastError);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtGetLastError, hipError_t, hipExtGetLastError);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PeekAtLastError, hipError_t, hipPeekAtLastError);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorName, const char *, hipGetErrorName, hipError_t, hip_error);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorString, const char *, hipGetErrorString, hipError_t, hipError);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvGetErrorName, hipError_t, hipDrvGetErrorName, hipError_t, hipError, const char **, errorString);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvGetErrorString, hipError_t, hipDrvGetErrorString, hipError_t, hipError, const char **, errorString);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreate, hipError_t, hipStreamCreate, hipStream_t *, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreateWithFlags, hipError_t, hipStreamCreateWithFlags, hipStream_t *, stream, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreateWithPriority, hipError_t, hipStreamCreateWithPriority, hipStream_t *, stream, unsigned int, flags, int, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetStreamPriorityRange, hipError_t, hipDeviceGetStreamPriorityRange, int *, leastPriority, int *, greatestPriority);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamDestroy, hipError_t, hipStreamDestroy, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamQuery, hipError_t, hipStreamQuery, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamSynchronize, hipError_t, hipStreamSynchronize, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamWaitEvent, hipError_t, hipStreamWaitEvent, hipStream_t, stream, hipEvent_t, event, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetFlags, hipError_t, hipStreamGetFlags, hipStream_t, stream, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetPriority, hipError_t, hipStreamGetPriority, hipStream_t, stream, int *, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetDevice, hipError_t, hipStreamGetDevice, hipStream_t, stream, hipDevice_t *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtStreamCreateWithCUMask, hipError_t, hipExtStreamCreateWithCUMask, hipStream_t *, stream, uint32_t, cuMaskSize, const uint32_t *, cuMask);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtStreamGetCUMask, hipError_t, hipExtStreamGetCUMask, hipStream_t, stream, uint32_t, cuMaskSize, uint32_t *, cuMask);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAddCallback, hipError_t, hipStreamAddCallback, hipStream_t, stream, hipStreamCallback_t, callback, void *, userData, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32, hipError_t, hipStreamWaitValue32, hipStream_t, stream, void *, ptr, uint32_t, value, unsigned int, flags, uint32_t, mask);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64, hipError_t, hipStreamWaitValue64, hipStream_t, stream, void *, ptr, uint64_t, value, unsigned int, flags, uint64_t, mask);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32, hipError_t, hipStreamWriteValue32, hipStream_t, stream, void *, ptr, uint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64, hipError_t, hipStreamWriteValue64, hipStream_t, stream, void *, ptr, uint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreateWithFlags, hipError_t, hipEventCreateWithFlags, hipEvent_t *, event, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, hipError_t, hipEventCreate, hipEvent_t *, event);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventRecord, hipError_t, hipEventRecord, hipEvent_t, event, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy, hipError_t, hipEventDestroy, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventSynchronize, hipError_t, hipEventSynchronize, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventElapsedTime, hipError_t, hipEventElapsedTime, float *, ms, hipEvent_t, start, hipEvent_t, stop);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventQuery, hipError_t, hipEventQuery, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerSetAttribute, hipError_t, hipPointerSetAttribute, const void *, value, hipPointer_attribute, attribute, hipDeviceptr_t, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttributes, hipError_t, hipPointerGetAttributes, hipPointerAttribute_t *, attributes, const void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttribute, hipError_t, hipPointerGetAttribute, void *, data, hipPointer_attribute, attribute, hipDeviceptr_t, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvPointerGetAttributes, hipError_t, hipDrvPointerGetAttributes, unsigned int, numAttributes, hipPointer_attribute *, attributes, void **, data, hipDeviceptr_t, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalSemaphore, hipError_t, hipImportExternalSemaphore, hipExternalSemaphore_t *, extSem_out, const hipExternalSemaphoreHandleDesc *, semHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SignalExternalSemaphoresAsync, hipError_t, hipSignalExternalSemaphoresAsync, const hipExternalSemaphore_t *, extSemArray, const hipExternalSemaphoreSignalParams *, paramsArray, unsigned int, numExtSems, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WaitExternalSemaphoresAsync, hipError_t, hipWaitExternalSemaphoresAsync, const hipExternalSemaphore_t *, extSemArray, const hipExternalSemaphoreWaitParams *, paramsArray, unsigned int, numExtSems, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalSemaphore, hipError_t, hipDestroyExternalSemaphore, hipExternalSemaphore_t, extSem);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalMemory, hipError_t, hipImportExternalMemory, hipExternalMemory_t *, extMem_out, const hipExternalMemoryHandleDesc *, memHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExternalMemoryGetMappedBuffer, hipError_t, hipExternalMemoryGetMappedBuffer, void **, devPtr, hipExternalMemory_t, extMem, const hipExternalMemoryBufferDesc *, bufferDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalMemory, hipError_t, hipDestroyExternalMemory, hipExternalMemory_t, extMem);
DEFINE_EXPORT_C_REDIRECT_CALL(XMalloc, hipError_t, hipMalloc, void **, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtMallocWithFlags, hipError_t, hipExtMallocWithFlags, void **, ptr, size_t, sizeBytes, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocHost, hipError_t, hipMallocHost, void **, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost, hipError_t, hipMemAllocHost, void **, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostMalloc, hipError_t, hipHostMalloc, void **, ptr, size_t, size, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocManaged, hipError_t, hipMallocManaged, void **, dev_ptr, size_t, size, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync, hipError_t, hipMemPrefetchAsync, const void *, dev_ptr, size_t, count, int, device, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAdvise, hipError_t, hipMemAdvise, const void *, dev_ptr, size_t, count, hipMemoryAdvise, advice, int, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttribute, hipError_t, hipMemRangeGetAttribute, void *, data, size_t, data_size, hipMemRangeAttribute, attribute, const void *, dev_ptr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttributes, hipError_t, hipMemRangeGetAttributes, void **, data, size_t *, data_sizes, hipMemRangeAttribute *, attributes, size_t, num_attributes, const void *, dev_ptr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAttachMemAsync, hipError_t, hipStreamAttachMemAsync, hipStream_t, stream, void *, dev_ptr, size_t, length, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocAsync, hipError_t, hipMallocAsync, void **, dev_ptr, size_t, size, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FreeAsync, hipError_t, hipFreeAsync, void *, dev_ptr, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolTrimTo, hipError_t, hipMemPoolTrimTo, hipMemPool_t, mem_pool, size_t, min_bytes_to_hold);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAttribute, hipError_t, hipMemPoolSetAttribute, hipMemPool_t, mem_pool, hipMemPoolAttr, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAttribute, hipError_t, hipMemPoolGetAttribute, hipMemPool_t, mem_pool, hipMemPoolAttr, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAccess, hipError_t, hipMemPoolSetAccess, hipMemPool_t, mem_pool, const hipMemAccessDesc *, desc_list, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAccess, hipError_t, hipMemPoolGetAccess, hipMemAccessFlags *, flags, hipMemPool_t, mem_pool, hipMemLocation *, location);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolCreate, hipError_t, hipMemPoolCreate, hipMemPool_t *, mem_pool, const hipMemPoolProps *, pool_props);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolDestroy, hipError_t, hipMemPoolDestroy, hipMemPool_t, mem_pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocFromPoolAsync, hipError_t, hipMallocFromPoolAsync, void **, dev_ptr, size_t, size, hipMemPool_t, mem_pool, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportToShareableHandle, hipError_t, hipMemPoolExportToShareableHandle, void *, shared_handle, hipMemPool_t, mem_pool, hipMemAllocationHandleType, handle_type, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportFromShareableHandle, hipError_t, hipMemPoolImportFromShareableHandle, hipMemPool_t *, mem_pool, void *, shared_handle, hipMemAllocationHandleType, handle_type, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportPointer, hipError_t, hipMemPoolExportPointer, hipMemPoolPtrExportData *, export_data, void *, dev_ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportPointer, hipError_t, hipMemPoolImportPointer, void **, dev_ptr, hipMemPool_t, mem_pool, hipMemPoolPtrExportData *, export_data);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostAlloc, hipError_t, hipHostAlloc, void **, ptr, size_t, size, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostGetDevicePointer, hipError_t, hipHostGetDevicePointer, void **, devPtr, void *, hstPtr, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostGetFlags, hipError_t, hipHostGetFlags, unsigned int *, flagsPtr, void *, hostPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostRegister, hipError_t, hipHostRegister, void *, hostPtr, size_t, sizeBytes, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostUnregister, hipError_t, hipHostUnregister, void *, hostPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocPitch, hipError_t, hipMallocPitch, void **, ptr, size_t *, pitch, size_t, width, size_t, height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocPitch, hipError_t, hipMemAllocPitch, hipDeviceptr_t *, dptr, size_t *, pitch, size_t, widthInBytes, size_t, height, unsigned int, elementSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(XFree, hipError_t, hipFree, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FreeHost, hipError_t, hipFreeHost, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::HostFree, hipError_t, hipHostFree, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy, hipError_t, hipMemcpy, void *, dst, const void *, src, size_t, sizeBytes, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyWithStream, hipError_t, hipMemcpyWithStream, void *, dst, const void *, src, size_t, sizeBytes, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoD, hipError_t, hipMemcpyHtoD, hipDeviceptr_t, dst, void *, src, size_t, sizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoH, hipError_t, hipMemcpyDtoH, void *, dst, hipDeviceptr_t, src, size_t, sizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoD, hipError_t, hipMemcpyDtoD, hipDeviceptr_t, dst, hipDeviceptr_t, src, size_t, sizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoD, hipError_t, hipMemcpyAtoD, hipDeviceptr_t, dstDevice, hipArray_t, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoA, hipError_t, hipMemcpyDtoA, hipArray_t, dstArray, size_t, dstOffset, hipDeviceptr_t, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoA, hipError_t, hipMemcpyAtoA, hipArray_t, dstArray, size_t, dstOffset, hipArray_t, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyHtoDAsync, hipError_t, hipMemcpyHtoDAsync, hipDeviceptr_t, dst, void *, src, size_t, sizeBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyDtoHAsync, hipError_t, hipMemcpyDtoHAsync, void *, dst, hipDeviceptr_t, src, size_t, sizeBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyDtoDAsync, hipError_t, hipMemcpyDtoDAsync, hipDeviceptr_t, dst, hipDeviceptr_t, src, size_t, sizeBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoHAsync, hipError_t, hipMemcpyAtoHAsync, void *, dstHost, hipArray_t, srcArray, size_t, srcOffset, size_t, ByteCount, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoAAsync, hipError_t, hipMemcpyHtoAAsync, hipArray_t, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobal, hipError_t, hipModuleGetGlobal, hipDeviceptr_t *, dptr, size_t *, bytes, hipModule_t, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetSymbolAddress, hipError_t, hipGetSymbolAddress, void **, devPtr, const void *, symbol);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetSymbolSize, hipError_t, hipGetSymbolSize, size_t *, size, const void *, symbol);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetProcAddress, hipError_t, hipGetProcAddress, const char *, symbol, void **, pfn, int, hipVersion, uint64_t, flags, hipDriverProcAddressQueryResult *, symbolStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyToSymbol, hipError_t, hipMemcpyToSymbol, const void *, symbol, const void *, src, size_t, sizeBytes, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyToSymbolAsync, hipError_t, hipMemcpyToSymbolAsync, const void *, symbol, const void *, src, size_t, sizeBytes, size_t, offset, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyFromSymbol, hipError_t, hipMemcpyFromSymbol, void *, dst, const void *, symbol, size_t, sizeBytes, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyFromSymbolAsync, hipError_t, hipMemcpyFromSymbolAsync, void *, dst, const void *, symbol, size_t, sizeBytes, size_t, offset, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyAsync, hipError_t, hipMemcpyAsync, void *, dst, const void *, src, size_t, sizeBytes, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memset, hipError_t, hipMemset, void *, dst, int, value, size_t, sizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8, hipError_t, hipMemsetD8, hipDeviceptr_t, dest, unsigned char, value, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD8Async, hipError_t, hipMemsetD8Async, hipDeviceptr_t, dest, unsigned char, value, size_t, count, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16, hipError_t, hipMemsetD16, hipDeviceptr_t, dest, unsigned short, value, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD16Async, hipError_t, hipMemsetD16Async, hipDeviceptr_t, dest, unsigned short, value, size_t, count, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32, hipError_t, hipMemsetD32, hipDeviceptr_t, dest, int, value, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetAsync, hipError_t, hipMemsetAsync, void *, dst, int, value, size_t, sizeBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD32Async, hipError_t, hipMemsetD32Async, hipDeviceptr_t, dst, int, value, size_t, count, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memset2D, hipError_t, hipMemset2D, void *, dst, size_t, pitch, int, value, size_t, width, size_t, height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memset2DAsync, hipError_t, hipMemset2DAsync, void *, dst, size_t, pitch, int, value, size_t, width, size_t, height, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memset3D, hipError_t, hipMemset3D, hipPitchedPtr, pitchedDevPtr, int, value, hipExtent, extent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memset3DAsync, hipError_t, hipMemset3DAsync, hipPitchedPtr, pitchedDevPtr, int, value, hipExtent, extent, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetInfo, hipError_t, hipMemGetInfo, size_t *, free, size_t *, total);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPtrGetInfo, hipError_t, hipMemPtrGetInfo, void *, ptr, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocArray, hipError_t, hipMallocArray, hipArray_t *, array, const hipChannelFormatDesc *, desc, size_t, width, size_t, height, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreate, hipError_t, hipArrayCreate, hipArray_t *, pHandle, const HIP_ARRAY_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayDestroy, hipError_t, hipArrayDestroy, hipArray_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DCreate, hipError_t, hipArray3DCreate, hipArray_t *, array, const HIP_ARRAY3D_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Malloc3D, hipError_t, hipMalloc3D, hipPitchedPtr *, pitchedDevPtr, hipExtent, extent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FreeArray, hipError_t, hipFreeArray, hipArray_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Malloc3DArray, hipError_t, hipMalloc3DArray, hipArray_t *, array, const struct hipChannelFormatDesc *, desc, struct hipExtent, extent, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetInfo, hipError_t, hipArrayGetInfo, hipChannelFormatDesc *, desc, hipExtent *, extent, unsigned int *, flags, hipArray_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetDescriptor, hipError_t, hipArrayGetDescriptor, HIP_ARRAY_DESCRIPTOR *, pArrayDescriptor, hipArray_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DGetDescriptor, hipError_t, hipArray3DGetDescriptor, HIP_ARRAY3D_DESCRIPTOR *, pArrayDescriptor, hipArray_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2D, hipError_t, hipMemcpy2D, void *, dst, size_t, dpitch, const void *, src, size_t, spitch, size_t, width, size_t, height, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyParam2D, hipError_t, hipMemcpyParam2D, const hip_Memcpy2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyParam2DAsync, hipError_t, hipMemcpyParam2DAsync, const hip_Memcpy2D *, pCopy, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DAsync, hipError_t, hipMemcpy2DAsync, void *, dst, size_t, dpitch, const void *, src, size_t, spitch, size_t, width, size_t, height, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DToArray, hipError_t, hipMemcpy2DToArray, hipArray_t, dst, size_t, wOffset, size_t, hOffset, const void *, src, size_t, spitch, size_t, width, size_t, height, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DToArrayAsync, hipError_t, hipMemcpy2DToArrayAsync, hipArray_t, dst, size_t, wOffset, size_t, hOffset, const void *, src, size_t, spitch, size_t, width, size_t, height, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DArrayToArray, hipError_t, hipMemcpy2DArrayToArray, hipArray_t, dst, size_t, wOffsetDst, size_t, hOffsetDst, hipArray_const_t, src, size_t, wOffsetSrc, size_t, hOffsetSrc, size_t, width, size_t, height, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyToArray, hipError_t, hipMemcpyToArray, hipArray_t, dst, size_t, wOffset, size_t, hOffset, const void *, src, size_t, count, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyFromArray, hipError_t, hipMemcpyFromArray, void *, dst, hipArray_const_t, srcArray, size_t, wOffset, size_t, hOffset, size_t, count, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DFromArray, hipError_t, hipMemcpy2DFromArray, void *, dst, size_t, dpitch, hipArray_const_t, src, size_t, wOffset, size_t, hOffset, size_t, width, size_t, height, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DFromArrayAsync, hipError_t, hipMemcpy2DFromArrayAsync, void *, dst, size_t, dpitch, hipArray_const_t, src, size_t, wOffset, size_t, hOffset, size_t, width, size_t, height, hipMemcpyKind, kind, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoH, hipError_t, hipMemcpyAtoH, void *, dst, hipArray_t, srcArray, size_t, srcOffset, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoA, hipError_t, hipMemcpyHtoA, hipArray_t, dstArray, size_t, dstOffset, const void *, srcHost, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3D, hipError_t, hipMemcpy3D, const struct hipMemcpy3DParms *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DAsync, hipError_t, hipMemcpy3DAsync, const struct hipMemcpy3DParms *, p, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvMemcpy3D, hipError_t, hipDrvMemcpy3D, const HIP_MEMCPY3D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvMemcpy3DAsync, hipError_t, hipDrvMemcpy3DAsync, const HIP_MEMCPY3D *, pCopy, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceCanAccessPeer, hipError_t, hipDeviceCanAccessPeer, int *, canAccessPeer, int, deviceId, int, peerDeviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceEnablePeerAccess, hipError_t, hipDeviceEnablePeerAccess, int, peerDeviceId, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceDisablePeerAccess, hipError_t, hipDeviceDisablePeerAccess, int, peerDeviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange, hipError_t, hipMemGetAddressRange, hipDeviceptr_t *, pbase, size_t *, psize, hipDeviceptr_t, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeer, hipError_t, hipMemcpyPeer, void *, dst, int, dstDeviceId, const void *, src, int, srcDeviceId, size_t, sizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeerAsync, hipError_t, hipMemcpyPeerAsync, void *, dst, int, dstDeviceId, const void *, src, int, srcDevice, size_t, sizeBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate, hipError_t, hipCtxCreate, hipCtx_t *, ctx, unsigned int, flags, hipDevice_t, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDestroy, hipError_t, hipCtxDestroy, hipCtx_t, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPopCurrent, hipError_t, hipCtxPopCurrent, hipCtx_t *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPushCurrent, hipError_t, hipCtxPushCurrent, hipCtx_t, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCurrent, hipError_t, hipCtxSetCurrent, hipCtx_t, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCurrent, hipError_t, hipCtxGetCurrent, hipCtx_t *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetDevice, hipError_t, hipCtxGetDevice, hipDevice_t *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetApiVersion, hipError_t, hipCtxGetApiVersion, hipCtx_t, ctx, int *, apiVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCacheConfig, hipError_t, hipCtxGetCacheConfig, hipFuncCache_t *, cacheConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCacheConfig, hipError_t, hipCtxSetCacheConfig, hipFuncCache_t, cacheConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetSharedMemConfig, hipError_t, hipCtxSetSharedMemConfig, hipSharedMemConfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetSharedMemConfig, hipError_t, hipCtxGetSharedMemConfig, hipSharedMemConfig *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(XCtxSynchronize, hipError_t, hipCtxSynchronize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetFlags, hipError_t, hipCtxGetFlags, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxEnablePeerAccess, hipError_t, hipCtxEnablePeerAccess, hipCtx_t, peerCtx, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDisablePeerAccess, hipError_t, hipCtxDisablePeerAccess, hipCtx_t, peerCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxGetState, hipError_t, hipDevicePrimaryCtxGetState, hipDevice_t, dev, unsigned int *, flags, int *, active);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRelease, hipError_t, hipDevicePrimaryCtxRelease, hipDevice_t, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRetain, hipError_t, hipDevicePrimaryCtxRetain, hipCtx_t *, pctx, hipDevice_t, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxReset, hipError_t, hipDevicePrimaryCtxReset, hipDevice_t, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxSetFlags, hipError_t, hipDevicePrimaryCtxSetFlags, hipDevice_t, dev, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoad, hipError_t, hipModuleLoad, hipModule_t *, module, const char *, fname);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleUnload, hipError_t, hipModuleUnload, hipModule_t, module);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunction, hipError_t, hipModuleGetFunction, hipFunction_t *, function, hipModule_t, module, const char *, kname);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetAttributes, hipError_t, hipFuncGetAttributes, struct hipFuncAttributes *, attr, const void *, func);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetAttribute, hipError_t, hipFuncGetAttribute, int *, value, hipFunction_attribute, attrib, hipFunction_t, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetFuncBySymbol, hipError_t, hipGetFuncBySymbol, hipFunction_t *, functionPtr, const void *, symbolPtr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetTexRef, hipError_t, hipModuleGetTexRef, textureReference **, texRef, hipModule_t, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadData, hipError_t, hipModuleLoadData, hipModule_t *, module, const void *, image);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadDataEx, hipError_t, hipModuleLoadDataEx, hipModule_t *, module, const void *, image, unsigned int, numOptions, hipJitOption *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(XModuleLaunchKernel, hipError_t, hipModuleLaunchKernel, hipFunction_t, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, hipStream_t, stream, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLaunchCooperativeKernel, hipError_t, hipModuleLaunchCooperativeKernel, hipFunction_t, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, hipStream_t, stream, void **, kernelParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLaunchCooperativeKernelMultiDevice, hipError_t, hipModuleLaunchCooperativeKernelMultiDevice, hipFunctionLaunchParams *, launchParamsList, unsigned int, numDevices, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernel, hipError_t, hipLaunchCooperativeKernel, const void *, f, dim3, gridDim, dim3, blockDimX, void **, kernelParams, unsigned int, sharedMemBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernelMultiDevice, hipError_t, hipLaunchCooperativeKernelMultiDevice, hipLaunchParams *, launchParamsList, int, numDevices, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtLaunchMultiKernelMultiDevice, hipError_t, hipExtLaunchMultiKernelMultiDevice, hipLaunchParams *, launchParamsList, int, numDevices, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleOccupancyMaxPotentialBlockSize, hipError_t, hipModuleOccupancyMaxPotentialBlockSize, int *, gridSize, int *, blockSize, hipFunction_t, f, size_t, dynSharedMemPerBlk, int, blockSizeLimit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleOccupancyMaxPotentialBlockSizeWithFlags, hipError_t, hipModuleOccupancyMaxPotentialBlockSizeWithFlags, int *, gridSize, int *, blockSize, hipFunction_t, f, size_t, dynSharedMemPerBlk, int, blockSizeLimit, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleOccupancyMaxActiveBlocksPerMultiprocessor, hipError_t, hipModuleOccupancyMaxActiveBlocksPerMultiprocessor, int *, numBlocks, hipFunction_t, f, int, blockSize, size_t, dynSharedMemPerBlk);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, hipError_t, hipModuleOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, int *, numBlocks, hipFunction_t, f, int, blockSize, size_t, dynSharedMemPerBlk, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessor, hipError_t, hipOccupancyMaxActiveBlocksPerMultiprocessor, int *, numBlocks, const void *, f, int, blockSize, size_t, dynSharedMemPerBlk);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessorWithFlags, hipError_t, hipOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, int *, numBlocks, const void *, f, int, blockSize, size_t, dynSharedMemPerBlk, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialBlockSize, hipError_t, hipOccupancyMaxPotentialBlockSize, int *, gridSize, int *, blockSize, const void *, f, size_t, dynSharedMemPerBlk, int, blockSizeLimit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ProfilerStart, hipError_t, hipProfilerStart);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ProfilerStop, hipError_t, hipProfilerStop);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ConfigureCall, hipError_t, hipConfigureCall, dim3, gridDim, dim3, blockDim, size_t, sharedMem, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SetupArgument, hipError_t, hipSetupArgument, const void *, arg, size_t, size, size_t, offset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchByPtr, hipError_t, hipLaunchByPtr, const void *, func);
DEFINE_EXPORT_C_REDIRECT_CALL(XLaunchKernel, hipError_t, hipLaunchKernel, const void *, function_address, dim3, numBlocks, dim3, dimBlocks, void **, args, size_t, sharedMemBytes, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchHostFunc, hipError_t, hipLaunchHostFunc, hipStream_t, stream, hipHostFn_t, fn, void *, userData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvMemcpy2DUnaligned, hipError_t, hipDrvMemcpy2DUnaligned, const hip_Memcpy2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExtLaunchKernel, hipError_t, hipExtLaunchKernel, const void *, function_address, dim3, numBlocks, dim3, dimBlocks, void **, args, size_t, sharedMemBytes, hipStream_t, stream, hipEvent_t, startEvent, hipEvent_t, stopEvent, int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateTextureObject, hipError_t, hipCreateTextureObject, hipTextureObject_t *, pTexObject, const hipResourceDesc *, pResDesc, const hipTextureDesc *, pTexDesc, const struct hipResourceViewDesc *, pResViewDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyTextureObject, hipError_t, hipDestroyTextureObject, hipTextureObject_t, textureObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetChannelDesc, hipError_t, hipGetChannelDesc, hipChannelFormatDesc *, desc, hipArray_const_t, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTextureObjectResourceDesc, hipError_t, hipGetTextureObjectResourceDesc, hipResourceDesc *, pResDesc, hipTextureObject_t, textureObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTextureObjectResourceViewDesc, hipError_t, hipGetTextureObjectResourceViewDesc, struct hipResourceViewDesc *, pResViewDesc, hipTextureObject_t, textureObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTextureObjectTextureDesc, hipError_t, hipGetTextureObjectTextureDesc, hipTextureDesc *, pTexDesc, hipTextureObject_t, textureObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectCreate, hipError_t, hipTexObjectCreate, hipTextureObject_t *, pTexObject, const HIP_RESOURCE_DESC *, pResDesc, const HIP_TEXTURE_DESC *, pTexDesc, const HIP_RESOURCE_VIEW_DESC *, pResViewDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectDestroy, hipError_t, hipTexObjectDestroy, hipTextureObject_t, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceDesc, hipError_t, hipTexObjectGetResourceDesc, HIP_RESOURCE_DESC *, pResDesc, hipTextureObject_t, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceViewDesc, hipError_t, hipTexObjectGetResourceViewDesc, HIP_RESOURCE_VIEW_DESC *, pResViewDesc, hipTextureObject_t, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetTextureDesc, hipError_t, hipTexObjectGetTextureDesc, HIP_TEXTURE_DESC *, pTexDesc, hipTextureObject_t, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MallocMipmappedArray, hipError_t, hipMallocMipmappedArray, hipMipmappedArray_t *, mipmappedArray, const struct hipChannelFormatDesc *, desc, struct hipExtent, extent, unsigned int, numLevels, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FreeMipmappedArray, hipError_t, hipFreeMipmappedArray, hipMipmappedArray_t, mipmappedArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetMipmappedArrayLevel, hipError_t, hipGetMipmappedArrayLevel, hipArray_t *, levelArray, hipMipmappedArray_const_t, mipmappedArray, unsigned int, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayCreate, hipError_t, hipMipmappedArrayCreate, hipMipmappedArray_t *, pHandle, HIP_ARRAY3D_DESCRIPTOR *, pMipmappedArrayDesc, unsigned int, numMipmapLevels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayDestroy, hipError_t, hipMipmappedArrayDestroy, hipMipmappedArray_t, hMipmappedArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetLevel, hipError_t, hipMipmappedArrayGetLevel, hipArray_t *, pLevelArray, hipMipmappedArray_t, hMipMappedArray, unsigned int, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::BindTextureToMipmappedArray, hipError_t, hipBindTextureToMipmappedArray, const textureReference *, tex, hipMipmappedArray_const_t, mipmappedArray, const hipChannelFormatDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTextureReference, hipError_t, hipGetTextureReference, const textureReference **, texref, const void *, symbol);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetBorderColor, hipError_t, hipTexRefGetBorderColor, float *, pBorderColor, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetArray, hipError_t, hipTexRefGetArray, hipArray_t *, pArray, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddressMode, hipError_t, hipTexRefSetAddressMode, textureReference *, texRef, int, dim, enum hipTextureAddressMode, am);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetArray, hipError_t, hipTexRefSetArray, textureReference *, tex, hipArray_const_t, array, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFilterMode, hipError_t, hipTexRefSetFilterMode, textureReference *, texRef, enum hipTextureFilterMode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFlags, hipError_t, hipTexRefSetFlags, textureReference *, texRef, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFormat, hipError_t, hipTexRefSetFormat, textureReference *, texRef, hipArray_Format, fmt, int, NumPackedComponents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::BindTexture, hipError_t, hipBindTexture, size_t *, offset, const textureReference *, tex, const void *, devPtr, const hipChannelFormatDesc *, desc, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::BindTexture2D, hipError_t, hipBindTexture2D, size_t *, offset, const textureReference *, tex, const void *, devPtr, const hipChannelFormatDesc *, desc, size_t, width, size_t, height, size_t, pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::BindTextureToArray, hipError_t, hipBindTextureToArray, const textureReference *, tex, hipArray_const_t, array, const hipChannelFormatDesc *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetTextureAlignmentOffset, hipError_t, hipGetTextureAlignmentOffset, size_t *, offset, const textureReference *, texref);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UnbindTexture, hipError_t, hipUnbindTexture, const textureReference *, tex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddress, hipError_t, hipTexRefGetAddress, hipDeviceptr_t *, dev_ptr, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddressMode, hipError_t, hipTexRefGetAddressMode, enum hipTextureAddressMode *, pam, const textureReference *, texRef, int, dim);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFilterMode, hipError_t, hipTexRefGetFilterMode, enum hipTextureFilterMode *, pfm, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFlags, hipError_t, hipTexRefGetFlags, unsigned int *, pFlags, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFormat, hipError_t, hipTexRefGetFormat, hipArray_Format *, pFormat, int *, pNumChannels, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMaxAnisotropy, hipError_t, hipTexRefGetMaxAnisotropy, int *, pmaxAnsio, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapFilterMode, hipError_t, hipTexRefGetMipmapFilterMode, enum hipTextureFilterMode *, pfm, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelBias, hipError_t, hipTexRefGetMipmapLevelBias, float *, pbias, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelClamp, hipError_t, hipTexRefGetMipmapLevelClamp, float *, pminMipmapLevelClamp, float *, pmaxMipmapLevelClamp, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipMappedArray, hipError_t, hipTexRefGetMipMappedArray, hipMipmappedArray_t *, pArray, const textureReference *, texRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress, hipError_t, hipTexRefSetAddress, size_t *, ByteOffset, textureReference *, texRef, hipDeviceptr_t, dptr, size_t, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress2D, hipError_t, hipTexRefSetAddress2D, textureReference *, texRef, const HIP_ARRAY_DESCRIPTOR *, desc, hipDeviceptr_t, dptr, size_t, Pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMaxAnisotropy, hipError_t, hipTexRefSetMaxAnisotropy, textureReference *, texRef, unsigned int, maxAniso);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetBorderColor, hipError_t, hipTexRefSetBorderColor, textureReference *, texRef, float *, pBorderColor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapFilterMode, hipError_t, hipTexRefSetMipmapFilterMode, textureReference *, texRef, enum hipTextureFilterMode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelBias, hipError_t, hipTexRefSetMipmapLevelBias, textureReference *, texRef, float, bias);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelClamp, hipError_t, hipTexRefSetMipmapLevelClamp, textureReference *, texRef, float, minMipMapLevelClamp, float, maxMipMapLevelClamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmappedArray, hipError_t, hipTexRefSetMipmappedArray, textureReference *, texRef, struct hipMipmappedArray *, mipmappedArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ApiName, const char *, hipApiName, uint32_t, id);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelNameRef, const char *, hipKernelNameRef, const hipFunction_t, f);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelNameRefByPtr, const char *, hipKernelNameRefByPtr, const void *, hostFunction, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetStreamDeviceId, int, hipGetStreamDeviceId, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture, hipError_t, hipStreamBeginCapture, hipStream_t, stream, hipStreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCaptureToGraph, hipError_t, hipStreamBeginCaptureToGraph, hipStream_t, stream, hipGraph_t, graph, const hipGraphNode_t *, dependencies, const hipGraphEdgeData *, dependencyData, size_t, numDependencies, hipStreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamEndCapture, hipError_t, hipStreamEndCapture, hipStream_t, stream, hipGraph_t *, pGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo, hipError_t, hipStreamGetCaptureInfo, hipStream_t, stream, hipStreamCaptureStatus *, pCaptureStatus, unsigned long long *, pId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v2, hipError_t, hipStreamGetCaptureInfo_v2, hipStream_t, stream, hipStreamCaptureStatus *, captureStatus_out, unsigned long long *, id_out, hipGraph_t *, graph_out, const hipGraphNode_t **, dependencies_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamIsCapturing, hipError_t, hipStreamIsCapturing, hipStream_t, stream, hipStreamCaptureStatus *, pCaptureStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies, hipError_t, hipStreamUpdateCaptureDependencies, hipStream_t, stream, hipGraphNode_t *, dependencies, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ThreadExchangeStreamCaptureMode, hipError_t, hipThreadExchangeStreamCaptureMode, hipStreamCaptureMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphCreate, hipError_t, hipGraphCreate, hipGraph_t *, pGraph, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroy, hipError_t, hipGraphDestroy, hipGraph_t, graph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddDependencies, hipError_t, hipGraphAddDependencies, hipGraph_t, graph, const hipGraphNode_t *, from, const hipGraphNode_t *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRemoveDependencies, hipError_t, hipGraphRemoveDependencies, hipGraph_t, graph, const hipGraphNode_t *, from, const hipGraphNode_t *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetEdges, hipError_t, hipGraphGetEdges, hipGraph_t, graph, hipGraphNode_t *, from, hipGraphNode_t *, to, size_t *, numEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetNodes, hipError_t, hipGraphGetNodes, hipGraph_t, graph, hipGraphNode_t *, nodes, size_t *, numNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetRootNodes, hipError_t, hipGraphGetRootNodes, hipGraph_t, graph, hipGraphNode_t *, pRootNodes, size_t *, pNumRootNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependencies, hipError_t, hipGraphNodeGetDependencies, hipGraphNode_t, node, hipGraphNode_t *, pDependencies, size_t *, pNumDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependentNodes, hipError_t, hipGraphNodeGetDependentNodes, hipGraphNode_t, node, hipGraphNode_t *, pDependentNodes, size_t *, pNumDependentNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetType, hipError_t, hipGraphNodeGetType, hipGraphNode_t, node, hipGraphNodeType *, pType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroyNode, hipError_t, hipGraphDestroyNode, hipGraphNode_t, node);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphClone, hipError_t, hipGraphClone, hipGraph_t *, pGraphClone, hipGraph_t, originalGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeFindInClone, hipError_t, hipGraphNodeFindInClone, hipGraphNode_t *, pNode, hipGraphNode_t, originalNode, hipGraph_t, clonedGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiate, hipError_t, hipGraphInstantiate, hipGraphExec_t *, pGraphExec, hipGraph_t, graph, hipGraphNode_t *, pErrorNode, char *, pLogBuffer, size_t, bufferSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithFlags, hipError_t, hipGraphInstantiateWithFlags, hipGraphExec_t *, pGraphExec, hipGraph_t, graph, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithParams, hipError_t, hipGraphInstantiateWithParams, hipGraphExec_t *, pGraphExec, hipGraph_t, graph, hipGraphInstantiateParams *, instantiateParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphLaunch, hipError_t, hipGraphLaunch, hipGraphExec_t, graphExec, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphUpload, hipError_t, hipGraphUpload, hipGraphExec_t, graphExec, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddNode, hipError_t, hipGraphAddNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, hipGraphNodeParams *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecDestroy, hipError_t, hipGraphExecDestroy, hipGraphExec_t, graphExec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecUpdate, hipError_t, hipGraphExecUpdate, hipGraphExec_t, hGraphExec, hipGraph_t, hGraph, hipGraphNode_t *, hErrorNode_out, hipGraphExecUpdateResult *, updateResult_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddKernelNode, hipError_t, hipGraphAddKernelNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, const hipKernelNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetParams, hipError_t, hipGraphKernelNodeGetParams, hipGraphNode_t, node, hipKernelNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetParams, hipError_t, hipGraphKernelNodeSetParams, hipGraphNode_t, node, const hipKernelNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecKernelNodeSetParams, hipError_t, hipGraphExecKernelNodeSetParams, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, const hipKernelNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvGraphAddMemcpyNode, hipError_t, hipDrvGraphAddMemcpyNode, hipGraphNode_t *, phGraphNode, hipGraph_t, hGraph, const hipGraphNode_t *, dependencies, size_t, numDependencies, const HIP_MEMCPY3D *, copyParams, hipCtx_t, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNode, hipError_t, hipGraphAddMemcpyNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, const hipMemcpy3DParms *, pCopyParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeGetParams, hipError_t, hipGraphMemcpyNodeGetParams, hipGraphNode_t, node, hipMemcpy3DParms *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParams, hipError_t, hipGraphMemcpyNodeSetParams, hipGraphNode_t, node, const hipMemcpy3DParms *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetAttribute, hipError_t, hipGraphKernelNodeSetAttribute, hipGraphNode_t, hNode, hipLaunchAttributeID, attr, const hipLaunchAttributeValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetAttribute, hipError_t, hipGraphKernelNodeGetAttribute, hipGraphNode_t, hNode, hipLaunchAttributeID, attr, hipLaunchAttributeValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParams, hipError_t, hipGraphExecMemcpyNodeSetParams, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, hipMemcpy3DParms *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNode1D, hipError_t, hipGraphAddMemcpyNode1D, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, void *, dst, const void *, src, size_t, count, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParams1D, hipError_t, hipGraphMemcpyNodeSetParams1D, hipGraphNode_t, node, void *, dst, const void *, src, size_t, count, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParams1D, hipError_t, hipGraphExecMemcpyNodeSetParams1D, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, void *, dst, const void *, src, size_t, count, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNodeFromSymbol, hipError_t, hipGraphAddMemcpyNodeFromSymbol, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, void *, dst, const void *, symbol, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParamsFromSymbol, hipError_t, hipGraphMemcpyNodeSetParamsFromSymbol, hipGraphNode_t, node, void *, dst, const void *, symbol, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParamsFromSymbol, hipError_t, hipGraphExecMemcpyNodeSetParamsFromSymbol, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, void *, dst, const void *, symbol, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNodeToSymbol, hipError_t, hipGraphAddMemcpyNodeToSymbol, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, const void *, symbol, const void *, src, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParamsToSymbol, hipError_t, hipGraphMemcpyNodeSetParamsToSymbol, hipGraphNode_t, node, const void *, symbol, const void *, src, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParamsToSymbol, hipError_t, hipGraphExecMemcpyNodeSetParamsToSymbol, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, const void *, symbol, const void *, src, size_t, count, size_t, offset, hipMemcpyKind, kind);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemsetNode, hipError_t, hipGraphAddMemsetNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, const hipMemsetParams *, pMemsetParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeGetParams, hipError_t, hipGraphMemsetNodeGetParams, hipGraphNode_t, node, hipMemsetParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeSetParams, hipError_t, hipGraphMemsetNodeSetParams, hipGraphNode_t, node, const hipMemsetParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemsetNodeSetParams, hipError_t, hipGraphExecMemsetNodeSetParams, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, const hipMemsetParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddHostNode, hipError_t, hipGraphAddHostNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, const hipHostNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeGetParams, hipError_t, hipGraphHostNodeGetParams, hipGraphNode_t, node, hipHostNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeSetParams, hipError_t, hipGraphHostNodeSetParams, hipGraphNode_t, node, const hipHostNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecHostNodeSetParams, hipError_t, hipGraphExecHostNodeSetParams, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, const hipHostNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddChildGraphNode, hipError_t, hipGraphAddChildGraphNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, hipGraph_t, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphChildGraphNodeGetGraph, hipError_t, hipGraphChildGraphNodeGetGraph, hipGraphNode_t, node, hipGraph_t *, pGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecChildGraphNodeSetParams, hipError_t, hipGraphExecChildGraphNodeSetParams, hipGraphExec_t, hGraphExec, hipGraphNode_t, node, hipGraph_t, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEmptyNode, hipError_t, hipGraphAddEmptyNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventRecordNode, hipError_t, hipGraphAddEventRecordNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeGetEvent, hipError_t, hipGraphEventRecordNodeGetEvent, hipGraphNode_t, node, hipEvent_t *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeSetEvent, hipError_t, hipGraphEventRecordNodeSetEvent, hipGraphNode_t, node, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventRecordNodeSetEvent, hipError_t, hipGraphExecEventRecordNodeSetEvent, hipGraphExec_t, hGraphExec, hipGraphNode_t, hNode, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventWaitNode, hipError_t, hipGraphAddEventWaitNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeGetEvent, hipError_t, hipGraphEventWaitNodeGetEvent, hipGraphNode_t, node, hipEvent_t *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeSetEvent, hipError_t, hipGraphEventWaitNodeSetEvent, hipGraphNode_t, node, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventWaitNodeSetEvent, hipError_t, hipGraphExecEventWaitNodeSetEvent, hipGraphExec_t, hGraphExec, hipGraphNode_t, hNode, hipEvent_t, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemAllocNode, hipError_t, hipGraphAddMemAllocNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, hipMemAllocNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemAllocNodeGetParams, hipError_t, hipGraphMemAllocNodeGetParams, hipGraphNode_t, node, hipMemAllocNodeParams *, pNodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemFreeNode, hipError_t, hipGraphAddMemFreeNode, hipGraphNode_t *, pGraphNode, hipGraph_t, graph, const hipGraphNode_t *, pDependencies, size_t, numDependencies, void *, dev_ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemFreeNodeGetParams, hipError_t, hipGraphMemFreeNodeGetParams, hipGraphNode_t, node, void *, dev_ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetGraphMemAttribute, hipError_t, hipDeviceGetGraphMemAttribute, int, device, hipGraphMemAttributeType, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetGraphMemAttribute, hipError_t, hipDeviceSetGraphMemAttribute, int, device, hipGraphMemAttributeType, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGraphMemTrim, hipError_t, hipDeviceGraphMemTrim, int, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectCreate, hipError_t, hipUserObjectCreate, hipUserObject_t *, object_out, void *, ptr, hipHostFn_t, destroy, unsigned int, initialRefcount, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRelease, hipError_t, hipUserObjectRelease, hipUserObject_t, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRetain, hipError_t, hipUserObjectRetain, hipUserObject_t, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRetainUserObject, hipError_t, hipGraphRetainUserObject, hipGraph_t, graph, hipUserObject_t, object, unsigned int, count, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphReleaseUserObject, hipError_t, hipGraphReleaseUserObject, hipGraph_t, graph, hipUserObject_t, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDebugDotPrint, hipError_t, hipGraphDebugDotPrint, hipGraph_t, graph, const char *, path, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeCopyAttributes, hipError_t, hipGraphKernelNodeCopyAttributes, hipGraphNode_t, hSrc, hipGraphNode_t, hDst);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeSetEnabled, hipError_t, hipGraphNodeSetEnabled, hipGraphExec_t, hGraphExec, hipGraphNode_t, hNode, unsigned int, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetEnabled, hipError_t, hipGraphNodeGetEnabled, hipGraphExec_t, hGraphExec, hipGraphNode_t, hNode, unsigned int *, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DrvGraphAddMemsetNode, hipError_t, hipDrvGraphAddMemsetNode, hipGraphNode_t *, phGraphNode, hipGraph_t, hGraph, const hipGraphNode_t *, dependencies, size_t, numDependencies, const HIP_MEMSET_NODE_PARAMS *, memsetParams, hipCtx_t, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressFree, hipError_t, hipMemAddressFree, void *, devPtr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressReserve, hipError_t, hipMemAddressReserve, void **, ptr, size_t, size, size_t, alignment, void *, addr, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemCreate, hipError_t, hipMemCreate, hipMemGenericAllocationHandle_t *, handle, size_t, size, const hipMemAllocationProp *, prop, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemExportToShareableHandle, hipError_t, hipMemExportToShareableHandle, void *, shareableHandle, hipMemGenericAllocationHandle_t, handle, hipMemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAccess, hipError_t, hipMemGetAccess, unsigned long long *, flags, const hipMemLocation *, location, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationGranularity, hipError_t, hipMemGetAllocationGranularity, size_t *, granularity, const hipMemAllocationProp *, prop, hipMemAllocationGranularity_flags, option);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationPropertiesFromHandle, hipError_t, hipMemGetAllocationPropertiesFromHandle, hipMemAllocationProp *, prop, hipMemGenericAllocationHandle_t, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemImportFromShareableHandle, hipError_t, hipMemImportFromShareableHandle, hipMemGenericAllocationHandle_t *, handle, void *, osHandle, hipMemAllocationHandleType, shHandleType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMap, hipError_t, hipMemMap, void *, ptr, size_t, size, size_t, offset, hipMemGenericAllocationHandle_t, handle, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMapArrayAsync, hipError_t, hipMemMapArrayAsync, hipArrayMapInfo *, mapInfoList, unsigned int, count, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRelease, hipError_t, hipMemRelease, hipMemGenericAllocationHandle_t, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRetainAllocationHandle, hipError_t, hipMemRetainAllocationHandle, hipMemGenericAllocationHandle_t *, handle, void *, addr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemSetAccess, hipError_t, hipMemSetAccess, void *, ptr, size_t, size, const hipMemAccessDesc *, desc, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemUnmap, hipError_t, hipMemUnmap, void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsMapResources, hipError_t, hipGraphicsMapResources, int, count, hipGraphicsResource_t *, resources, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsSubResourceGetMappedArray, hipError_t, hipGraphicsSubResourceGetMappedArray, hipArray_t *, array, hipGraphicsResource_t, resource, unsigned int, arrayIndex, unsigned int, mipLevel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedPointer, hipError_t, hipGraphicsResourceGetMappedPointer, void **, devPtr, size_t *, size, hipGraphicsResource_t, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnmapResources, hipError_t, hipGraphicsUnmapResources, int, count, hipGraphicsResource_t *, resources, hipStream_t, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnregisterResource, hipError_t, hipGraphicsUnregisterResource, hipGraphicsResource_t, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateSurfaceObject, hipError_t, hipCreateSurfaceObject, hipSurfaceObject_t *, pSurfObject, const hipResourceDesc *, pResDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroySurfaceObject, hipError_t, hipDestroySurfaceObject, hipSurfaceObject_t, surfaceObject);

// HIP does not export this symbol using `export "C"`
using hipFunction_t = ihipModuleSymbol_t*;
DEFINE_EXPORT_CXX_REDIRECT_CALL(XExtModuleLaunchKernel, hipError_t, hipExtModuleLaunchKernel, hipFunction_t, f, uint32_t, globalWorkSizeX, uint32_t, globalWorkSizeY, uint32_t, globalWorkSizeZ, uint32_t, localWorkSizeX, uint32_t, localWorkSizeY, uint32_t, localWorkSizeZ, size_t, sharedMemBytes, hipStream_t, hStream, void**, kernelParams, void**, extra, hipEvent_t, startEvent, hipEvent_t, stopEvent, uint32_t, flags);

// Special functions for static code object and function registration
DEFINE_EXPORT_C_REDIRECT_CALL(XRegisterFatBinary, void**, __hipRegisterFatBinary, const void*, data);
DEFINE_EXPORT_C_REDIRECT_CALL(XRegisterFunction, void, __hipRegisterFunction, void**, modules, const void*, hostFunction, char*, deviceFunction, const char*, deviceName, unsigned int, threadLimit, void*, tid, void*, bid, dim3*, blockDim, dim3*, gridDim, int*, wSize);

EXPORT_C_FUNC void *dlsym(void *handle, const char *name) 
{
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
    static const std::unordered_map<std::string, void *> intercept_symbol_map = {   
        DLSYM_INTERCEPT_ENTRY(__hipRegisterFatBinary),
        DLSYM_INTERCEPT_ENTRY(__hipRegisterFunction),
        DLSYM_INTERCEPT_ENTRY(hipInit),
        DLSYM_INTERCEPT_ENTRY(hipDriverGetVersion),
        DLSYM_INTERCEPT_ENTRY(hipRuntimeGetVersion),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGet),
        DLSYM_INTERCEPT_ENTRY(hipDeviceComputeCapability),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetName),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetUuid),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetP2PAttribute),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetPCIBusId),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetByPCIBusId),
        DLSYM_INTERCEPT_ENTRY(hipDeviceTotalMem),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSynchronize),
        DLSYM_INTERCEPT_ENTRY(hipDeviceReset),
        DLSYM_INTERCEPT_ENTRY(hipSetDevice),
        DLSYM_INTERCEPT_ENTRY(hipSetValidDevices),
        DLSYM_INTERCEPT_ENTRY(hipGetDevice),
        DLSYM_INTERCEPT_ENTRY(hipGetDeviceCount),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetDefaultMemPool),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSetMemPool),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetMemPool),
        // DLSYM_INTERCEPT_ENTRY(hipGetDevicePropertiesR0600),
        DLSYM_INTERCEPT_ENTRY(hipGetDeviceProperties),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSetCacheConfig),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetCacheConfig),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetLimit),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSetLimit),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetSharedMemConfig),
        DLSYM_INTERCEPT_ENTRY(hipGetDeviceFlags),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSetSharedMemConfig),
        DLSYM_INTERCEPT_ENTRY(hipSetDeviceFlags),
        DLSYM_INTERCEPT_ENTRY(hipChooseDeviceR0600),
        DLSYM_INTERCEPT_ENTRY(hipExtGetLinkTypeAndHopCount),
        DLSYM_INTERCEPT_ENTRY(hipIpcGetMemHandle),
        DLSYM_INTERCEPT_ENTRY(hipIpcOpenMemHandle),
        DLSYM_INTERCEPT_ENTRY(hipIpcCloseMemHandle),
        DLSYM_INTERCEPT_ENTRY(hipIpcGetEventHandle),
        DLSYM_INTERCEPT_ENTRY(hipIpcOpenEventHandle),
        DLSYM_INTERCEPT_ENTRY(hipFuncSetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipFuncSetCacheConfig),
        DLSYM_INTERCEPT_ENTRY(hipFuncSetSharedMemConfig),
        DLSYM_INTERCEPT_ENTRY(hipGetLastError),
        DLSYM_INTERCEPT_ENTRY(hipExtGetLastError),
        DLSYM_INTERCEPT_ENTRY(hipPeekAtLastError),
        DLSYM_INTERCEPT_ENTRY(hipGetErrorName),
        DLSYM_INTERCEPT_ENTRY(hipGetErrorString),
        DLSYM_INTERCEPT_ENTRY(hipDrvGetErrorName),
        DLSYM_INTERCEPT_ENTRY(hipDrvGetErrorString),
        DLSYM_INTERCEPT_ENTRY(hipStreamCreate),
        DLSYM_INTERCEPT_ENTRY(hipStreamCreateWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipStreamCreateWithPriority),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetStreamPriorityRange),
        DLSYM_INTERCEPT_ENTRY(hipStreamDestroy),
        DLSYM_INTERCEPT_ENTRY(hipStreamQuery),
        DLSYM_INTERCEPT_ENTRY(hipStreamSynchronize),
        DLSYM_INTERCEPT_ENTRY(hipStreamWaitEvent),
        DLSYM_INTERCEPT_ENTRY(hipStreamGetFlags),
        DLSYM_INTERCEPT_ENTRY(hipStreamGetPriority),
        DLSYM_INTERCEPT_ENTRY(hipStreamGetDevice),
        DLSYM_INTERCEPT_ENTRY(hipExtStreamCreateWithCUMask),
        DLSYM_INTERCEPT_ENTRY(hipExtStreamGetCUMask),
        DLSYM_INTERCEPT_ENTRY(hipStreamAddCallback),
        DLSYM_INTERCEPT_ENTRY(hipStreamWaitValue32),
        DLSYM_INTERCEPT_ENTRY(hipStreamWaitValue64),
        DLSYM_INTERCEPT_ENTRY(hipStreamWriteValue32),
        DLSYM_INTERCEPT_ENTRY(hipStreamWriteValue64),
        DLSYM_INTERCEPT_ENTRY(hipEventCreateWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipEventCreate),
        DLSYM_INTERCEPT_ENTRY(hipEventRecord),
        DLSYM_INTERCEPT_ENTRY(hipEventDestroy),
        DLSYM_INTERCEPT_ENTRY(hipEventSynchronize),
        DLSYM_INTERCEPT_ENTRY(hipEventElapsedTime),
        DLSYM_INTERCEPT_ENTRY(hipEventQuery),
        DLSYM_INTERCEPT_ENTRY(hipPointerSetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipPointerGetAttributes),
        DLSYM_INTERCEPT_ENTRY(hipPointerGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipDrvPointerGetAttributes),
        DLSYM_INTERCEPT_ENTRY(hipImportExternalSemaphore),
        DLSYM_INTERCEPT_ENTRY(hipSignalExternalSemaphoresAsync),
        DLSYM_INTERCEPT_ENTRY(hipWaitExternalSemaphoresAsync),
        DLSYM_INTERCEPT_ENTRY(hipDestroyExternalSemaphore),
        DLSYM_INTERCEPT_ENTRY(hipImportExternalMemory),
        DLSYM_INTERCEPT_ENTRY(hipExternalMemoryGetMappedBuffer),
        DLSYM_INTERCEPT_ENTRY(hipDestroyExternalMemory),
        DLSYM_INTERCEPT_ENTRY(hipMalloc),
        DLSYM_INTERCEPT_ENTRY(hipExtMallocWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipMallocHost),
        DLSYM_INTERCEPT_ENTRY(hipMemAllocHost),
        DLSYM_INTERCEPT_ENTRY(hipHostMalloc),
        DLSYM_INTERCEPT_ENTRY(hipMallocManaged),
        DLSYM_INTERCEPT_ENTRY(hipMemPrefetchAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemAdvise),
        DLSYM_INTERCEPT_ENTRY(hipMemRangeGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipMemRangeGetAttributes),
        DLSYM_INTERCEPT_ENTRY(hipStreamAttachMemAsync),
        DLSYM_INTERCEPT_ENTRY(hipMallocAsync),
        DLSYM_INTERCEPT_ENTRY(hipFreeAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolTrimTo),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolSetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolSetAccess),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolGetAccess),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolCreate),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolDestroy),
        DLSYM_INTERCEPT_ENTRY(hipMallocFromPoolAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolExportToShareableHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolImportFromShareableHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolExportPointer),
        DLSYM_INTERCEPT_ENTRY(hipMemPoolImportPointer),
        DLSYM_INTERCEPT_ENTRY(hipHostAlloc),
        DLSYM_INTERCEPT_ENTRY(hipHostGetDevicePointer),
        DLSYM_INTERCEPT_ENTRY(hipHostGetFlags),
        DLSYM_INTERCEPT_ENTRY(hipHostRegister),
        DLSYM_INTERCEPT_ENTRY(hipHostUnregister),
        DLSYM_INTERCEPT_ENTRY(hipMallocPitch),
        DLSYM_INTERCEPT_ENTRY(hipMemAllocPitch),
        DLSYM_INTERCEPT_ENTRY(hipFree),
        DLSYM_INTERCEPT_ENTRY(hipFreeHost),
        DLSYM_INTERCEPT_ENTRY(hipHostFree),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyWithStream),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyHtoD),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyDtoH),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyDtoD),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyAtoD),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyDtoA),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyAtoA),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyHtoDAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyDtoHAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyDtoDAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyAtoHAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyHtoAAsync),
        DLSYM_INTERCEPT_ENTRY(hipModuleGetGlobal),
        DLSYM_INTERCEPT_ENTRY(hipGetSymbolAddress),
        DLSYM_INTERCEPT_ENTRY(hipGetSymbolSize),
        DLSYM_INTERCEPT_ENTRY(hipGetProcAddress),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyToSymbol),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyToSymbolAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyFromSymbol),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyFromSymbolAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemset),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD8),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD8Async),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD16),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD16Async),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD32),
        DLSYM_INTERCEPT_ENTRY(hipMemsetAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemsetD32Async),
        DLSYM_INTERCEPT_ENTRY(hipMemset2D),
        DLSYM_INTERCEPT_ENTRY(hipMemset2DAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemset3D),
        DLSYM_INTERCEPT_ENTRY(hipMemset3DAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemGetInfo),
        DLSYM_INTERCEPT_ENTRY(hipMemPtrGetInfo),
        DLSYM_INTERCEPT_ENTRY(hipMallocArray),
        DLSYM_INTERCEPT_ENTRY(hipArrayCreate),
        DLSYM_INTERCEPT_ENTRY(hipArrayDestroy),
        DLSYM_INTERCEPT_ENTRY(hipArray3DCreate),
        DLSYM_INTERCEPT_ENTRY(hipMalloc3D),
        DLSYM_INTERCEPT_ENTRY(hipFreeArray),
        DLSYM_INTERCEPT_ENTRY(hipMalloc3DArray),
        DLSYM_INTERCEPT_ENTRY(hipArrayGetInfo),
        DLSYM_INTERCEPT_ENTRY(hipArrayGetDescriptor),
        DLSYM_INTERCEPT_ENTRY(hipArray3DGetDescriptor),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2D),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyParam2D),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyParam2DAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DToArray),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DToArrayAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DArrayToArray),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyToArray),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyFromArray),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DFromArray),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy2DFromArrayAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyAtoH),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyHtoA),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy3D),
        DLSYM_INTERCEPT_ENTRY(hipMemcpy3DAsync),
        DLSYM_INTERCEPT_ENTRY(hipDrvMemcpy3D),
        DLSYM_INTERCEPT_ENTRY(hipDrvMemcpy3DAsync),
        DLSYM_INTERCEPT_ENTRY(hipDeviceCanAccessPeer),
        DLSYM_INTERCEPT_ENTRY(hipDeviceEnablePeerAccess),
        DLSYM_INTERCEPT_ENTRY(hipDeviceDisablePeerAccess),
        DLSYM_INTERCEPT_ENTRY(hipMemGetAddressRange),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyPeer),
        DLSYM_INTERCEPT_ENTRY(hipMemcpyPeerAsync),
        DLSYM_INTERCEPT_ENTRY(hipCtxCreate),
        DLSYM_INTERCEPT_ENTRY(hipCtxDestroy),
        DLSYM_INTERCEPT_ENTRY(hipCtxPopCurrent),
        DLSYM_INTERCEPT_ENTRY(hipCtxPushCurrent),
        DLSYM_INTERCEPT_ENTRY(hipCtxSetCurrent),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetCurrent),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetDevice),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetApiVersion),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetCacheConfig),
        DLSYM_INTERCEPT_ENTRY(hipCtxSetCacheConfig),
        DLSYM_INTERCEPT_ENTRY(hipCtxSetSharedMemConfig),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetSharedMemConfig),
        DLSYM_INTERCEPT_ENTRY(hipCtxSynchronize),
        DLSYM_INTERCEPT_ENTRY(hipCtxGetFlags),
        DLSYM_INTERCEPT_ENTRY(hipCtxEnablePeerAccess),
        DLSYM_INTERCEPT_ENTRY(hipCtxDisablePeerAccess),
        DLSYM_INTERCEPT_ENTRY(hipDevicePrimaryCtxGetState),
        DLSYM_INTERCEPT_ENTRY(hipDevicePrimaryCtxRelease),
        DLSYM_INTERCEPT_ENTRY(hipDevicePrimaryCtxRetain),
        DLSYM_INTERCEPT_ENTRY(hipDevicePrimaryCtxReset),
        DLSYM_INTERCEPT_ENTRY(hipDevicePrimaryCtxSetFlags),
        DLSYM_INTERCEPT_ENTRY(hipModuleLoad),
        DLSYM_INTERCEPT_ENTRY(hipModuleUnload),
        DLSYM_INTERCEPT_ENTRY(hipModuleGetFunction),
        DLSYM_INTERCEPT_ENTRY(hipFuncGetAttributes),
        DLSYM_INTERCEPT_ENTRY(hipFuncGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipGetFuncBySymbol),
        DLSYM_INTERCEPT_ENTRY(hipModuleGetTexRef),
        DLSYM_INTERCEPT_ENTRY(hipModuleLoadData),
        DLSYM_INTERCEPT_ENTRY(hipModuleLoadDataEx),
        DLSYM_INTERCEPT_ENTRY(hipModuleLaunchKernel),
        DLSYM_INTERCEPT_ENTRY(hipModuleLaunchCooperativeKernel),
        DLSYM_INTERCEPT_ENTRY(hipModuleLaunchCooperativeKernelMultiDevice),
        DLSYM_INTERCEPT_ENTRY(hipLaunchCooperativeKernel),
        DLSYM_INTERCEPT_ENTRY(hipLaunchCooperativeKernelMultiDevice),
        DLSYM_INTERCEPT_ENTRY(hipExtLaunchMultiKernelMultiDevice),
        DLSYM_INTERCEPT_ENTRY(hipModuleOccupancyMaxPotentialBlockSize),
        DLSYM_INTERCEPT_ENTRY(hipModuleOccupancyMaxPotentialBlockSizeWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipModuleOccupancyMaxActiveBlocksPerMultiprocessor),
        DLSYM_INTERCEPT_ENTRY(hipModuleOccupancyMaxActiveBlocksPerMultiprocessorWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipOccupancyMaxActiveBlocksPerMultiprocessor),
        DLSYM_INTERCEPT_ENTRY(hipOccupancyMaxActiveBlocksPerMultiprocessorWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipOccupancyMaxPotentialBlockSize),
        DLSYM_INTERCEPT_ENTRY(hipProfilerStart),
        DLSYM_INTERCEPT_ENTRY(hipProfilerStop),
        DLSYM_INTERCEPT_ENTRY(hipConfigureCall),
        DLSYM_INTERCEPT_ENTRY(hipSetupArgument),
        DLSYM_INTERCEPT_ENTRY(hipLaunchByPtr),
        DLSYM_INTERCEPT_ENTRY(hipLaunchKernel),
        DLSYM_INTERCEPT_ENTRY(hipLaunchHostFunc),
        DLSYM_INTERCEPT_ENTRY(hipDrvMemcpy2DUnaligned),
        DLSYM_INTERCEPT_ENTRY(hipExtLaunchKernel),
        DLSYM_INTERCEPT_ENTRY(hipCreateTextureObject),
        DLSYM_INTERCEPT_ENTRY(hipDestroyTextureObject),
        DLSYM_INTERCEPT_ENTRY(hipGetChannelDesc),
        DLSYM_INTERCEPT_ENTRY(hipGetTextureObjectResourceDesc),
        DLSYM_INTERCEPT_ENTRY(hipGetTextureObjectResourceViewDesc),
        DLSYM_INTERCEPT_ENTRY(hipGetTextureObjectTextureDesc),
        DLSYM_INTERCEPT_ENTRY(hipTexObjectCreate),
        DLSYM_INTERCEPT_ENTRY(hipTexObjectDestroy),
        DLSYM_INTERCEPT_ENTRY(hipTexObjectGetResourceDesc),
        DLSYM_INTERCEPT_ENTRY(hipTexObjectGetResourceViewDesc),
        DLSYM_INTERCEPT_ENTRY(hipTexObjectGetTextureDesc),
        DLSYM_INTERCEPT_ENTRY(hipMallocMipmappedArray),
        DLSYM_INTERCEPT_ENTRY(hipFreeMipmappedArray),
        DLSYM_INTERCEPT_ENTRY(hipGetMipmappedArrayLevel),
        DLSYM_INTERCEPT_ENTRY(hipMipmappedArrayCreate),
        DLSYM_INTERCEPT_ENTRY(hipMipmappedArrayDestroy),
        DLSYM_INTERCEPT_ENTRY(hipMipmappedArrayGetLevel),
        DLSYM_INTERCEPT_ENTRY(hipBindTextureToMipmappedArray),
        DLSYM_INTERCEPT_ENTRY(hipGetTextureReference),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetBorderColor),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetArray),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetAddressMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetArray),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetFilterMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetFlags),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetFormat),
        DLSYM_INTERCEPT_ENTRY(hipBindTexture),
        DLSYM_INTERCEPT_ENTRY(hipBindTexture2D),
        DLSYM_INTERCEPT_ENTRY(hipBindTextureToArray),
        DLSYM_INTERCEPT_ENTRY(hipGetTextureAlignmentOffset),
        DLSYM_INTERCEPT_ENTRY(hipUnbindTexture),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetAddress),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetAddressMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetFilterMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetFlags),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetFormat),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetMaxAnisotropy),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetMipmapFilterMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetMipmapLevelBias),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetMipmapLevelClamp),
        DLSYM_INTERCEPT_ENTRY(hipTexRefGetMipMappedArray),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetAddress),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetAddress2D),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetMaxAnisotropy),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetBorderColor),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetMipmapFilterMode),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetMipmapLevelBias),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetMipmapLevelClamp),
        DLSYM_INTERCEPT_ENTRY(hipTexRefSetMipmappedArray),
        DLSYM_INTERCEPT_ENTRY(hipApiName),
        DLSYM_INTERCEPT_ENTRY(hipKernelNameRef),
        DLSYM_INTERCEPT_ENTRY(hipKernelNameRefByPtr),
        DLSYM_INTERCEPT_ENTRY(hipGetStreamDeviceId),
        DLSYM_INTERCEPT_ENTRY(hipStreamBeginCapture),
        DLSYM_INTERCEPT_ENTRY(hipStreamBeginCaptureToGraph),
        DLSYM_INTERCEPT_ENTRY(hipStreamEndCapture),
        DLSYM_INTERCEPT_ENTRY(hipStreamGetCaptureInfo),
        DLSYM_INTERCEPT_ENTRY(hipStreamGetCaptureInfo_v2),
        DLSYM_INTERCEPT_ENTRY(hipStreamIsCapturing),
        DLSYM_INTERCEPT_ENTRY(hipStreamUpdateCaptureDependencies),
        DLSYM_INTERCEPT_ENTRY(hipThreadExchangeStreamCaptureMode),
        DLSYM_INTERCEPT_ENTRY(hipGraphCreate),
        DLSYM_INTERCEPT_ENTRY(hipGraphDestroy),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddDependencies),
        DLSYM_INTERCEPT_ENTRY(hipGraphRemoveDependencies),
        DLSYM_INTERCEPT_ENTRY(hipGraphGetEdges),
        DLSYM_INTERCEPT_ENTRY(hipGraphGetNodes),
        DLSYM_INTERCEPT_ENTRY(hipGraphGetRootNodes),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeGetDependencies),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeGetDependentNodes),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeGetType),
        DLSYM_INTERCEPT_ENTRY(hipGraphDestroyNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphClone),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeFindInClone),
        DLSYM_INTERCEPT_ENTRY(hipGraphInstantiate),
        DLSYM_INTERCEPT_ENTRY(hipGraphInstantiateWithFlags),
        DLSYM_INTERCEPT_ENTRY(hipGraphInstantiateWithParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphLaunch),
        DLSYM_INTERCEPT_ENTRY(hipGraphUpload),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecDestroy),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecUpdate),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddKernelNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphKernelNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphKernelNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecKernelNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipDrvGraphAddMemcpyNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemcpyNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemcpyNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemcpyNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphKernelNodeSetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipGraphKernelNodeGetAttribute),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecMemcpyNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemcpyNode1D),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemcpyNodeSetParams1D),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecMemcpyNodeSetParams1D),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemcpyNodeFromSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemcpyNodeSetParamsFromSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecMemcpyNodeSetParamsFromSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemcpyNodeToSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemcpyNodeSetParamsToSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecMemcpyNodeSetParamsToSymbol),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemsetNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemsetNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemsetNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecMemsetNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddHostNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphHostNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphHostNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecHostNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddChildGraphNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphChildGraphNodeGetGraph),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecChildGraphNodeSetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddEmptyNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddEventRecordNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphEventRecordNodeGetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphEventRecordNodeSetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecEventRecordNodeSetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddEventWaitNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphEventWaitNodeGetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphEventWaitNodeSetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphExecEventWaitNodeSetEvent),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemAllocNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemAllocNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipGraphAddMemFreeNode),
        DLSYM_INTERCEPT_ENTRY(hipGraphMemFreeNodeGetParams),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGetGraphMemAttribute),
        DLSYM_INTERCEPT_ENTRY(hipDeviceSetGraphMemAttribute),
        DLSYM_INTERCEPT_ENTRY(hipDeviceGraphMemTrim),
        DLSYM_INTERCEPT_ENTRY(hipUserObjectCreate),
        DLSYM_INTERCEPT_ENTRY(hipUserObjectRelease),
        DLSYM_INTERCEPT_ENTRY(hipUserObjectRetain),
        DLSYM_INTERCEPT_ENTRY(hipGraphRetainUserObject),
        DLSYM_INTERCEPT_ENTRY(hipGraphReleaseUserObject),
        DLSYM_INTERCEPT_ENTRY(hipGraphDebugDotPrint),
        DLSYM_INTERCEPT_ENTRY(hipGraphKernelNodeCopyAttributes),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeSetEnabled),
        DLSYM_INTERCEPT_ENTRY(hipGraphNodeGetEnabled),
        DLSYM_INTERCEPT_ENTRY(hipDrvGraphAddMemsetNode),
        DLSYM_INTERCEPT_ENTRY(hipMemAddressFree),
        DLSYM_INTERCEPT_ENTRY(hipMemAddressReserve),
        DLSYM_INTERCEPT_ENTRY(hipMemCreate),
        DLSYM_INTERCEPT_ENTRY(hipMemExportToShareableHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemGetAccess),
        DLSYM_INTERCEPT_ENTRY(hipMemGetAllocationGranularity),
        DLSYM_INTERCEPT_ENTRY(hipMemGetAllocationPropertiesFromHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemImportFromShareableHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemMap),
        DLSYM_INTERCEPT_ENTRY(hipMemMapArrayAsync),
        DLSYM_INTERCEPT_ENTRY(hipMemRelease),
        DLSYM_INTERCEPT_ENTRY(hipMemRetainAllocationHandle),
        DLSYM_INTERCEPT_ENTRY(hipMemSetAccess),
        DLSYM_INTERCEPT_ENTRY(hipMemUnmap),
        DLSYM_INTERCEPT_ENTRY(hipGraphicsMapResources),
        DLSYM_INTERCEPT_ENTRY(hipGraphicsSubResourceGetMappedArray),
        DLSYM_INTERCEPT_ENTRY(hipGraphicsResourceGetMappedPointer),
        DLSYM_INTERCEPT_ENTRY(hipGraphicsUnmapResources),
        DLSYM_INTERCEPT_ENTRY(hipGraphicsUnregisterResource),
        DLSYM_INTERCEPT_ENTRY(hipCreateSurfaceObject),
        DLSYM_INTERCEPT_ENTRY(hipDestroySurfaceObject),
    };
    #pragma GCC diagnostic pop

    auto it = intercept_symbol_map.find(name); 
    if (it != intercept_symbol_map.end()) { 
        XDEBG("dlsym symbol replaced: %s -> %p", name, it->second); 
        return it->second; 
    } 
    XDEBG("dlsym symbol ignored: %s", name); 
    return RealDlSym(handle, name); 
}
