/// This file is auto-generated by command "python3 tools/autogen/gen.py ./include/hal/cuda/common/cuda.h cuda cu"
#pragma once

#include "xsched/protocol/def.h"
#include "xsched/utils/common.h"
#include "xsched/utils/symbol.h"
#include "xsched/utils/function.h"
#include "xsched/cuda/hal/common/cuda.h"

namespace xsched::cuda
{

class Driver
{
private:
#if defined(_WIN32)
    DEFINE_GET_SYMBOL_FUNC(GetSymbol, XSCHED_CUDA_LIB_ENV_NAME,
                           std::vector<std::string>({"nvcuda_original.dll"}),
                           std::vector<std::string>({}));
#elif defined(__linux__)
    DEFINE_GET_SYMBOL_FUNC(GetSymbol, XSCHED_CUDA_LIB_ENV_NAME,
                           std::vector<std::string>({"libcuda.so", "libcuda.so.1"}),
                           std::vector<std::string>({}));
#endif

public:
    STATIC_CLASS(Driver);

    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGetErrorString"), CUresult, GetErrorString, CUresult, error, const char **, pStr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGetErrorName"), CUresult, GetErrorName, CUresult, error, const char **, pStr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuInit"), CUresult, Init, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDriverGetVersion"), CUresult, DriverGetVersion, int *, driverVersion);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGet"), CUresult, DeviceGet, CUdevice *, device, int, ordinal);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetCount"), CUresult, DeviceGetCount, int *, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetName"), CUresult, DeviceGetName, char *, name, int, len, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetUuid"), CUresult, DeviceGetUuid, CUuuid *, uuid, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetUuid_v2"), CUresult, DeviceGetUuid_v2, CUuuid *, uuid, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetLuid"), CUresult, DeviceGetLuid, char *, luid, unsigned int *, deviceNodeMask, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceTotalMem_v2"), CUresult, DeviceTotalMem_v2, size_t *, bytes, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetTexture1DLinearMaxWidth"), CUresult, DeviceGetTexture1DLinearMaxWidth, size_t *, maxWidthInElements, CUarray_format, format, unsigned int, numChannels, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetAttribute"), CUresult, DeviceGetAttribute, int *, pi, CUdevice_attribute, attrib, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetNvSciSyncAttributes"), CUresult, DeviceGetNvSciSyncAttributes, void *, nvSciSyncAttrList, CUdevice, dev, int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceSetMemPool"), CUresult, DeviceSetMemPool, CUdevice, dev, CUmemoryPool, pool);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetMemPool"), CUresult, DeviceGetMemPool, CUmemoryPool *, pool, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetDefaultMemPool"), CUresult, DeviceGetDefaultMemPool, CUmemoryPool *, pool_out, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetExecAffinitySupport"), CUresult, DeviceGetExecAffinitySupport, int *, pi, CUexecAffinityType, type, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFlushGPUDirectRDMAWrites"), CUresult, FlushGPUDirectRDMAWrites, CUflushGPUDirectRDMAWritesTarget, target, CUflushGPUDirectRDMAWritesScope, scope);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetProperties"), CUresult, DeviceGetProperties, CUdevprop *, prop, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceComputeCapability"), CUresult, DeviceComputeCapability, int *, major, int *, minor, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxRetain"), CUresult, DevicePrimaryCtxRetain, CUcontext *, pctx, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxRelease_v2"), CUresult, DevicePrimaryCtxRelease_v2, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxSetFlags_v2"), CUresult, DevicePrimaryCtxSetFlags_v2, CUdevice, dev, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxGetState"), CUresult, DevicePrimaryCtxGetState, CUdevice, dev, unsigned int *, flags, int *, active);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxReset_v2"), CUresult, DevicePrimaryCtxReset_v2, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxCreate_v2"), CUresult, CtxCreate_v2, CUcontext *, pctx, unsigned int, flags, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxCreate_v3"), CUresult, CtxCreate_v3, CUcontext *, pctx, CUexecAffinityParam *, paramsArray, int, numParams, unsigned int, flags, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxCreate_v4"), CUresult, CtxCreate_v4, CUcontext *, pctx, CUctxCreateParams *, ctxCreateParams, unsigned int, flags, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxDestroy_v2"), CUresult, CtxDestroy_v2, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxPushCurrent_v2"), CUresult, CtxPushCurrent_v2, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxPopCurrent_v2"), CUresult, CtxPopCurrent_v2, CUcontext *, pctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSetCurrent"), CUresult, CtxSetCurrent, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetCurrent"), CUresult, CtxGetCurrent, CUcontext *, pctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetDevice"), CUresult, CtxGetDevice, CUdevice *, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetFlags"), CUresult, CtxGetFlags, unsigned int *, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSetFlags"), CUresult, CtxSetFlags, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetId"), CUresult, CtxGetId, CUcontext, ctx, unsigned long long *, ctxId);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSynchronize"), CUresult, CtxSynchronize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSetLimit"), CUresult, CtxSetLimit, CUlimit, limit, size_t, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetLimit"), CUresult, CtxGetLimit, size_t *, pvalue, CUlimit, limit);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetCacheConfig"), CUresult, CtxGetCacheConfig, CUfunc_cache *, pconfig);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSetCacheConfig"), CUresult, CtxSetCacheConfig, CUfunc_cache, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetApiVersion"), CUresult, CtxGetApiVersion, CUcontext, ctx, unsigned int *, version);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetStreamPriorityRange"), CUresult, CtxGetStreamPriorityRange, int *, leastPriority, int *, greatestPriority);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxResetPersistingL2Cache"), CUresult, CtxResetPersistingL2Cache);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetExecAffinity"), CUresult, CtxGetExecAffinity, CUexecAffinityParam *, pExecAffinity, CUexecAffinityType, type);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxRecordEvent"), CUresult, CtxRecordEvent, CUcontext, hCtx, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxWaitEvent"), CUresult, CtxWaitEvent, CUcontext, hCtx, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxAttach"), CUresult, CtxAttach, CUcontext *, pctx, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxDetach"), CUresult, CtxDetach, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetSharedMemConfig"), CUresult, CtxGetSharedMemConfig, CUsharedconfig *, pConfig);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxSetSharedMemConfig"), CUresult, CtxSetSharedMemConfig, CUsharedconfig, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleLoad"), CUresult, ModuleLoad, CUmodule *, module, const char *, fname);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleLoadData"), CUresult, ModuleLoadData, CUmodule *, module, const void *, image);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleLoadDataEx"), CUresult, ModuleLoadDataEx, CUmodule *, module, const void *, image, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleLoadFatBinary"), CUresult, ModuleLoadFatBinary, CUmodule *, module, const void *, fatCubin);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleUnload"), CUresult, ModuleUnload, CUmodule, hmod);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetLoadingMode"), CUresult, ModuleGetLoadingMode, CUmoduleLoadingMode *, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetFunction"), CUresult, ModuleGetFunction, CUfunction *, hfunc, CUmodule, hmod, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetFunctionCount"), CUresult, ModuleGetFunctionCount, unsigned int *, count, CUmodule, mod);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleEnumerateFunctions"), CUresult, ModuleEnumerateFunctions, CUfunction *, functions, unsigned int, numFunctions, CUmodule, mod);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetGlobal_v2"), CUresult, ModuleGetGlobal_v2, CUdeviceptr *, dptr, size_t *, bytes, CUmodule, hmod, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkCreate_v2"), CUresult, LinkCreate_v2, unsigned int, numOptions, CUjit_option *, options, void **, optionValues, CUlinkState *, stateOut);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkAddData_v2"), CUresult, LinkAddData_v2, CUlinkState, state, CUjitInputType, type, void *, data, size_t, size, const char *, name, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkAddFile_v2"), CUresult, LinkAddFile_v2, CUlinkState, state, CUjitInputType, type, const char *, path, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkComplete"), CUresult, LinkComplete, CUlinkState, state, void **, cubinOut, size_t *, sizeOut);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkDestroy"), CUresult, LinkDestroy, CUlinkState, state);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetTexRef"), CUresult, ModuleGetTexRef, CUtexref *, pTexRef, CUmodule, hmod, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetSurfRef"), CUresult, ModuleGetSurfRef, CUsurfref *, pSurfRef, CUmodule, hmod, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryLoadData"), CUresult, LibraryLoadData, CUlibrary *, library, const void *, code, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryLoadFromFile"), CUresult, LibraryLoadFromFile, CUlibrary *, library, const char *, fileName, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryUnload"), CUresult, LibraryUnload, CUlibrary, library);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetKernel"), CUresult, LibraryGetKernel, CUkernel *, pKernel, CUlibrary, library, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetKernelCount"), CUresult, LibraryGetKernelCount, unsigned int *, count, CUlibrary, lib);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryEnumerateKernels"), CUresult, LibraryEnumerateKernels, CUkernel *, kernels, unsigned int, numKernels, CUlibrary, lib);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetModule"), CUresult, LibraryGetModule, CUmodule *, pMod, CUlibrary, library);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelGetFunction"), CUresult, KernelGetFunction, CUfunction *, pFunc, CUkernel, kernel);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelGetLibrary"), CUresult, KernelGetLibrary, CUlibrary *, pLib, CUkernel, kernel);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetGlobal"), CUresult, LibraryGetGlobal, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetManaged"), CUresult, LibraryGetManaged, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLibraryGetUnifiedFunction"), CUresult, LibraryGetUnifiedFunction, void **, fptr, CUlibrary, library, const char *, symbol);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelGetAttribute"), CUresult, KernelGetAttribute, int *, pi, CUfunction_attribute, attrib, CUkernel, kernel, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelSetAttribute"), CUresult, KernelSetAttribute, CUfunction_attribute, attrib, int, val, CUkernel, kernel, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelSetCacheConfig"), CUresult, KernelSetCacheConfig, CUkernel, kernel, CUfunc_cache, config, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelGetName"), CUresult, KernelGetName, const char **, name, CUkernel, hfunc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuKernelGetParamInfo"), CUresult, KernelGetParamInfo, CUkernel, kernel, size_t, paramIndex, size_t *, paramOffset, size_t *, paramSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetInfo_v2"), CUresult, MemGetInfo_v2, size_t *, free, size_t *, total);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAlloc_v2"), CUresult, MemAlloc_v2, CUdeviceptr *, dptr, size_t, bytesize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocPitch_v2"), CUresult, MemAllocPitch_v2, CUdeviceptr *, dptr, size_t *, pPitch, size_t, WidthInBytes, size_t, Height, unsigned int, ElementSizeBytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemFree_v2"), CUresult, MemFree_v2, CUdeviceptr, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetAddressRange_v2"), CUresult, MemGetAddressRange_v2, CUdeviceptr *, pbase, size_t *, psize, CUdeviceptr, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocHost_v2"), CUresult, MemAllocHost_v2, void **, pp, size_t, bytesize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemFreeHost"), CUresult, MemFreeHost, void *, p);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostAlloc"), CUresult, MemHostAlloc, void **, pp, size_t, bytesize, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostGetDevicePointer_v2"), CUresult, MemHostGetDevicePointer_v2, CUdeviceptr *, pdptr, void *, p, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostGetFlags"), CUresult, MemHostGetFlags, unsigned int *, pFlags, void *, p);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocManaged"), CUresult, MemAllocManaged, CUdeviceptr *, dptr, size_t, bytesize, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceRegisterAsyncNotification"), CUresult, DeviceRegisterAsyncNotification, CUdevice, device, CUasyncCallback, callbackFunc, void *, userData, CUasyncCallbackHandle *, callback);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceUnregisterAsyncNotification"), CUresult, DeviceUnregisterAsyncNotification, CUdevice, device, CUasyncCallbackHandle, callback);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetByPCIBusId"), CUresult, DeviceGetByPCIBusId, CUdevice *, dev, const char *, pciBusId);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetPCIBusId"), CUresult, DeviceGetPCIBusId, char *, pciBusId, int, len, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcGetEventHandle"), CUresult, IpcGetEventHandle, CUipcEventHandle *, pHandle, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcOpenEventHandle"), CUresult, IpcOpenEventHandle, CUevent *, phEvent, CUipcEventHandle, handle);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcGetMemHandle"), CUresult, IpcGetMemHandle, CUipcMemHandle *, pHandle, CUdeviceptr, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcOpenMemHandle_v2"), CUresult, IpcOpenMemHandle_v2, CUdeviceptr *, pdptr, CUipcMemHandle, handle, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcCloseMemHandle"), CUresult, IpcCloseMemHandle, CUdeviceptr, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostRegister_v2"), CUresult, MemHostRegister_v2, void *, p, size_t, bytesize, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostUnregister"), CUresult, MemHostUnregister, void *, p);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy_ptds"), CUresult, Memcpy_ptds, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyPeer_ptds"), CUresult, MemcpyPeer_ptds, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoD_v2_ptds"), CUresult, MemcpyHtoD_v2_ptds, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoH_v2_ptds"), CUresult, MemcpyDtoH_v2_ptds, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoD_v2_ptds"), CUresult, MemcpyDtoD_v2_ptds, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoA_v2_ptds"), CUresult, MemcpyDtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoD_v2_ptds"), CUresult, MemcpyAtoD_v2_ptds, CUdeviceptr, dstDevice, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoA_v2_ptds"), CUresult, MemcpyHtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoH_v2_ptds"), CUresult, MemcpyAtoH_v2_ptds, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoA_v2_ptds"), CUresult, MemcpyAtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2D_v2_ptds"), CUresult, Memcpy2D_v2_ptds, const CUDA_MEMCPY2D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DUnaligned_v2_ptds"), CUresult, Memcpy2DUnaligned_v2_ptds, const CUDA_MEMCPY2D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3D_v2_ptds"), CUresult, Memcpy3D_v2_ptds, const CUDA_MEMCPY3D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DPeer_ptds"), CUresult, Memcpy3DPeer_ptds, const CUDA_MEMCPY3D_PEER *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAsync_ptsz"), CUresult, MemcpyAsync_ptsz, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyPeerAsync_ptsz"), CUresult, MemcpyPeerAsync_ptsz, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoDAsync_v2_ptsz"), CUresult, MemcpyHtoDAsync_v2_ptsz, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoHAsync_v2_ptsz"), CUresult, MemcpyDtoHAsync_v2_ptsz, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoDAsync_v2_ptsz"), CUresult, MemcpyDtoDAsync_v2_ptsz, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoAAsync_v2_ptsz"), CUresult, MemcpyHtoAAsync_v2_ptsz, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoHAsync_v2_ptsz"), CUresult, MemcpyAtoHAsync_v2_ptsz, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DAsync_v2_ptsz"), CUresult, Memcpy2DAsync_v2_ptsz, const CUDA_MEMCPY2D *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DAsync_v2_ptsz"), CUresult, Memcpy3DAsync_v2_ptsz, const CUDA_MEMCPY3D *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DPeerAsync_ptsz"), CUresult, Memcpy3DPeerAsync_ptsz, const CUDA_MEMCPY3D_PEER *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyBatchAsync_ptsz"), CUresult, MemcpyBatchAsync_ptsz, CUdeviceptr *, dsts, CUdeviceptr *, srcs, size_t *, sizes, size_t, count, CUmemcpyAttributes *, attrs, size_t *, attrsIdxs, size_t, numAttrs, size_t *, failIdx, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DBatchAsync_ptsz"), CUresult, Memcpy3DBatchAsync_ptsz, size_t, numOps, CUDA_MEMCPY3D_BATCH_OP *, opList, size_t *, failIdx, unsigned long long, flags, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD8_v2_ptds"), CUresult, MemsetD8_v2_ptds, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD16_v2_ptds"), CUresult, MemsetD16_v2_ptds, CUdeviceptr, dstDevice, unsigned short, us, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD32_v2_ptds"), CUresult, MemsetD32_v2_ptds, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D8_v2_ptds"), CUresult, MemsetD2D8_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D16_v2_ptds"), CUresult, MemsetD2D16_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D32_v2_ptds"), CUresult, MemsetD2D32_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD8Async_ptsz"), CUresult, MemsetD8Async_ptsz, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD16Async_ptsz"), CUresult, MemsetD16Async_ptsz, CUdeviceptr, dstDevice, unsigned short, us, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD32Async_ptsz"), CUresult, MemsetD32Async_ptsz, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D8Async_ptsz"), CUresult, MemsetD2D8Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D16Async_ptsz"), CUresult, MemsetD2D16Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D32Async_ptsz"), CUresult, MemsetD2D32Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayCreate_v2"), CUresult, ArrayCreate_v2, CUarray *, pHandle, const CUDA_ARRAY_DESCRIPTOR *, pAllocateArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayGetDescriptor_v2"), CUresult, ArrayGetDescriptor_v2, CUDA_ARRAY_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayGetSparseProperties"), CUresult, ArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUarray, array);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMipmappedArrayGetSparseProperties"), CUresult, MipmappedArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUmipmappedArray, mipmap);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayGetMemoryRequirements"), CUresult, ArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUarray, array, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMipmappedArrayGetMemoryRequirements"), CUresult, MipmappedArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUmipmappedArray, mipmap, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayGetPlane"), CUresult, ArrayGetPlane, CUarray *, pPlaneArray, CUarray, hArray, unsigned int, planeIdx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayDestroy"), CUresult, ArrayDestroy, CUarray, hArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArray3DCreate_v2"), CUresult, Array3DCreate_v2, CUarray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pAllocateArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArray3DGetDescriptor_v2"), CUresult, Array3DGetDescriptor_v2, CUDA_ARRAY3D_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMipmappedArrayCreate"), CUresult, MipmappedArrayCreate, CUmipmappedArray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pMipmappedArrayDesc, unsigned int, numMipmapLevels);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMipmappedArrayGetLevel"), CUresult, MipmappedArrayGetLevel, CUarray *, pLevelArray, CUmipmappedArray, hMipmappedArray, unsigned int, level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMipmappedArrayDestroy"), CUresult, MipmappedArrayDestroy, CUmipmappedArray, hMipmappedArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetHandleForAddressRange"), CUresult, MemGetHandleForAddressRange, void *, handle, CUdeviceptr, dptr, size_t, size, CUmemRangeHandleType, handleType, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemBatchDecompressAsync_ptsz"), CUresult, MemBatchDecompressAsync_ptsz, CUmemDecompressParams *, paramsArray, size_t, count, unsigned int, flags, size_t *, errorIndex, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAddressReserve"), CUresult, MemAddressReserve, CUdeviceptr *, ptr, size_t, size, size_t, alignment, CUdeviceptr, addr, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAddressFree"), CUresult, MemAddressFree, CUdeviceptr, ptr, size_t, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemCreate"), CUresult, MemCreate, CUmemGenericAllocationHandle *, handle, size_t, size, const CUmemAllocationProp *, prop, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemRelease"), CUresult, MemRelease, CUmemGenericAllocationHandle, handle);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemMap"), CUresult, MemMap, CUdeviceptr, ptr, size_t, size, size_t, offset, CUmemGenericAllocationHandle, handle, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemMapArrayAsync_ptsz"), CUresult, MemMapArrayAsync_ptsz, CUarrayMapInfo *, mapInfoList, unsigned int, count, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemUnmap"), CUresult, MemUnmap, CUdeviceptr, ptr, size_t, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemSetAccess"), CUresult, MemSetAccess, CUdeviceptr, ptr, size_t, size, const CUmemAccessDesc *, desc, size_t, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetAccess"), CUresult, MemGetAccess, unsigned long long *, flags, const CUmemLocation *, location, CUdeviceptr, ptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemExportToShareableHandle"), CUresult, MemExportToShareableHandle, void *, shareableHandle, CUmemGenericAllocationHandle, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemImportFromShareableHandle"), CUresult, MemImportFromShareableHandle, CUmemGenericAllocationHandle *, handle, void *, osHandle, CUmemAllocationHandleType, shHandleType);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetAllocationGranularity"), CUresult, MemGetAllocationGranularity, size_t *, granularity, const CUmemAllocationProp *, prop, CUmemAllocationGranularity_flags, option);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetAllocationPropertiesFromHandle"), CUresult, MemGetAllocationPropertiesFromHandle, CUmemAllocationProp *, prop, CUmemGenericAllocationHandle, handle);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemRetainAllocationHandle"), CUresult, MemRetainAllocationHandle, CUmemGenericAllocationHandle *, handle, void *, addr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemFreeAsync_ptsz"), CUresult, MemFreeAsync_ptsz, CUdeviceptr, dptr, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocAsync_ptsz"), CUresult, MemAllocAsync_ptsz, CUdeviceptr *, dptr, size_t, bytesize, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolTrimTo"), CUresult, MemPoolTrimTo, CUmemoryPool, pool, size_t, minBytesToKeep);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolSetAttribute"), CUresult, MemPoolSetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolGetAttribute"), CUresult, MemPoolGetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolSetAccess"), CUresult, MemPoolSetAccess, CUmemoryPool, pool, const CUmemAccessDesc *, map, size_t, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolGetAccess"), CUresult, MemPoolGetAccess, CUmemAccess_flags *, flags, CUmemoryPool, memPool, CUmemLocation *, location);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolCreate"), CUresult, MemPoolCreate, CUmemoryPool *, pool, const CUmemPoolProps *, poolProps);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolDestroy"), CUresult, MemPoolDestroy, CUmemoryPool, pool);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocFromPoolAsync_ptsz"), CUresult, MemAllocFromPoolAsync_ptsz, CUdeviceptr *, dptr, size_t, bytesize, CUmemoryPool, pool, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolExportToShareableHandle"), CUresult, MemPoolExportToShareableHandle, void *, handle_out, CUmemoryPool, pool, CUmemAllocationHandleType, handleType, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolImportFromShareableHandle"), CUresult, MemPoolImportFromShareableHandle, CUmemoryPool *, pool_out, void *, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolExportPointer"), CUresult, MemPoolExportPointer, CUmemPoolPtrExportData *, shareData_out, CUdeviceptr, ptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPoolImportPointer"), CUresult, MemPoolImportPointer, CUdeviceptr *, ptr_out, CUmemoryPool, pool, CUmemPoolPtrExportData *, shareData);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastCreate"), CUresult, MulticastCreate, CUmemGenericAllocationHandle *, mcHandle, const CUmulticastObjectProp *, prop);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastAddDevice"), CUresult, MulticastAddDevice, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastBindMem"), CUresult, MulticastBindMem, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUmemGenericAllocationHandle, memHandle, size_t, memOffset, size_t, size, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastBindAddr"), CUresult, MulticastBindAddr, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUdeviceptr, memptr, size_t, size, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastUnbind"), CUresult, MulticastUnbind, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev, size_t, mcOffset, size_t, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMulticastGetGranularity"), CUresult, MulticastGetGranularity, size_t *, granularity, const CUmulticastObjectProp *, prop, CUmulticastGranularity_flags, option);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuPointerGetAttribute"), CUresult, PointerGetAttribute, void *, data, CUpointer_attribute, attribute, CUdeviceptr, ptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPrefetchAsync_ptsz"), CUresult, MemPrefetchAsync_ptsz, CUdeviceptr, devPtr, size_t, count, CUdevice, dstDevice, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPrefetchAsync_v2_ptsz"), CUresult, MemPrefetchAsync_v2_ptsz, CUdeviceptr, devPtr, size_t, count, CUmemLocation, location, unsigned int, flags, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAdvise"), CUresult, MemAdvise, CUdeviceptr, devPtr, size_t, count, CUmem_advise, advice, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAdvise_v2"), CUresult, MemAdvise_v2, CUdeviceptr, devPtr, size_t, count, CUmem_advise, advice, CUmemLocation, location);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemRangeGetAttribute"), CUresult, MemRangeGetAttribute, void *, data, size_t, dataSize, CUmem_range_attribute, attribute, CUdeviceptr, devPtr, size_t, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemRangeGetAttributes"), CUresult, MemRangeGetAttributes, void **, data, size_t *, dataSizes, CUmem_range_attribute *, attributes, size_t, numAttributes, CUdeviceptr, devPtr, size_t, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuPointerSetAttribute"), CUresult, PointerSetAttribute, const void *, value, CUpointer_attribute, attribute, CUdeviceptr, ptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuPointerGetAttributes"), CUresult, PointerGetAttributes, unsigned int, numAttributes, CUpointer_attribute *, attributes, void **, data, CUdeviceptr, ptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamCreate"), CUresult, StreamCreate, CUstream *, phStream, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamCreateWithPriority"), CUresult, StreamCreateWithPriority, CUstream *, phStream, unsigned int, flags, int, priority);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetPriority_ptsz"), CUresult, StreamGetPriority_ptsz, CUstream, hStream, int *, priority);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetDevice_ptsz"), CUresult, StreamGetDevice_ptsz, CUstream, hStream, CUdevice *, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetFlags_ptsz"), CUresult, StreamGetFlags_ptsz, CUstream, hStream, unsigned int *, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetId_ptsz"), CUresult, StreamGetId_ptsz, CUstream, hStream, unsigned long long *, streamId);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCtx_ptsz"), CUresult, StreamGetCtx_ptsz, CUstream, hStream, CUcontext *, pctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCtx_v2_ptsz"), CUresult, StreamGetCtx_v2_ptsz, CUstream, hStream, CUcontext *, pCtx, CUgreenCtx *, pGreenCtx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitEvent_ptsz"), CUresult, StreamWaitEvent_ptsz, CUstream, hStream, CUevent, hEvent, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamAddCallback_ptsz"), CUresult, StreamAddCallback_ptsz, CUstream, hStream, CUstreamCallback, callback, void *, userData, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCapture_v2_ptsz"), CUresult, StreamBeginCapture_v2_ptsz, CUstream, hStream, CUstreamCaptureMode, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCaptureToGraph_ptsz"), CUresult, StreamBeginCaptureToGraph_ptsz, CUstream, hStream, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUstreamCaptureMode, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuThreadExchangeStreamCaptureMode"), CUresult, ThreadExchangeStreamCaptureMode, CUstreamCaptureMode *, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamEndCapture_ptsz"), CUresult, StreamEndCapture_ptsz, CUstream, hStream, CUgraph *, phGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamIsCapturing_ptsz"), CUresult, StreamIsCapturing_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo_v2_ptsz"), CUresult, StreamGetCaptureInfo_v2_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, size_t *, numDependencies_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo_v3_ptsz"), CUresult, StreamGetCaptureInfo_v3_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, const CUgraphEdgeData **, edgeData_out, size_t *, numDependencies_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamUpdateCaptureDependencies_ptsz"), CUresult, StreamUpdateCaptureDependencies_ptsz, CUstream, hStream, CUgraphNode *, dependencies, size_t, numDependencies, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamUpdateCaptureDependencies_v2_ptsz"), CUresult, StreamUpdateCaptureDependencies_v2_ptsz, CUstream, hStream, CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamAttachMemAsync_ptsz"), CUresult, StreamAttachMemAsync_ptsz, CUstream, hStream, CUdeviceptr, dptr, size_t, length, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamQuery_ptsz"), CUresult, StreamQuery_ptsz, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamSynchronize_ptsz"), CUresult, StreamSynchronize_ptsz, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamDestroy_v2"), CUresult, StreamDestroy_v2, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamCopyAttributes_ptsz"), CUresult, StreamCopyAttributes_ptsz, CUstream, dst, CUstream, src);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetAttribute_ptsz"), CUresult, StreamGetAttribute_ptsz, CUstream, hStream, CUstreamAttrID, attr, CUstreamAttrValue *, value_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamSetAttribute_ptsz"), CUresult, StreamSetAttribute_ptsz, CUstream, hStream, CUstreamAttrID, attr, const CUstreamAttrValue *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventCreate"), CUresult, EventCreate, CUevent *, phEvent, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventRecord_ptsz"), CUresult, EventRecord_ptsz, CUevent, hEvent, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventRecordWithFlags_ptsz"), CUresult, EventRecordWithFlags_ptsz, CUevent, hEvent, CUstream, hStream, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventQuery"), CUresult, EventQuery, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventSynchronize"), CUresult, EventSynchronize, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventDestroy_v2"), CUresult, EventDestroy_v2, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventElapsedTime"), CUresult, EventElapsedTime, float *, pMilliseconds, CUevent, hStart, CUevent, hEnd);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventElapsedTime_v2"), CUresult, EventElapsedTime_v2, float *, pMilliseconds, CUevent, hStart, CUevent, hEnd);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuImportExternalMemory"), CUresult, ImportExternalMemory, CUexternalMemory *, extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC *, memHandleDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuExternalMemoryGetMappedBuffer"), CUresult, ExternalMemoryGetMappedBuffer, CUdeviceptr *, devPtr, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC *, bufferDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuExternalMemoryGetMappedMipmappedArray"), CUresult, ExternalMemoryGetMappedMipmappedArray, CUmipmappedArray *, mipmap, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC *, mipmapDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDestroyExternalMemory"), CUresult, DestroyExternalMemory, CUexternalMemory, extMem);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuImportExternalSemaphore"), CUresult, ImportExternalSemaphore, CUexternalSemaphore *, extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC *, semHandleDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSignalExternalSemaphoresAsync_ptsz"), CUresult, SignalExternalSemaphoresAsync_ptsz, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuWaitExternalSemaphoresAsync_ptsz"), CUresult, WaitExternalSemaphoresAsync_ptsz, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDestroyExternalSemaphore"), CUresult, DestroyExternalSemaphore, CUexternalSemaphore, extSem);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue32_v2_ptsz"), CUresult, StreamWaitValue32_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue64_v2_ptsz"), CUresult, StreamWaitValue64_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue32_v2_ptsz"), CUresult, StreamWriteValue32_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue64_v2_ptsz"), CUresult, StreamWriteValue64_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBatchMemOp_v2_ptsz"), CUresult, StreamBatchMemOp_v2_ptsz, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncGetAttribute"), CUresult, FuncGetAttribute, int *, pi, CUfunction_attribute, attrib, CUfunction, hfunc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncSetAttribute"), CUresult, FuncSetAttribute, CUfunction, hfunc, CUfunction_attribute, attrib, int, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncSetCacheConfig"), CUresult, FuncSetCacheConfig, CUfunction, hfunc, CUfunc_cache, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncGetModule"), CUresult, FuncGetModule, CUmodule *, hmod, CUfunction, hfunc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncGetName"), CUresult, FuncGetName, const char **, name, CUfunction, hfunc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncGetParamInfo"), CUresult, FuncGetParamInfo, CUfunction, func, size_t, paramIndex, size_t *, paramOffset, size_t *, paramSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncIsLoaded"), CUresult, FuncIsLoaded, CUfunctionLoadingState *, state, CUfunction, function);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncLoad"), CUresult, FuncLoad, CUfunction, function);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchKernel_ptsz"), CUresult, LaunchKernel_ptsz, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchKernelEx_ptsz"), CUresult, LaunchKernelEx_ptsz, const CUlaunchConfig *, config, CUfunction, f, void **, kernelParams, void **, extra);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchCooperativeKernel_ptsz"), CUresult, LaunchCooperativeKernel_ptsz, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchCooperativeKernelMultiDevice"), CUresult, LaunchCooperativeKernelMultiDevice, CUDA_LAUNCH_PARAMS *, launchParamsList, unsigned int, numDevices, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchHostFunc_ptsz"), CUresult, LaunchHostFunc_ptsz, CUstream, hStream, CUhostFn, fn, void *, userData);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncSetBlockShape"), CUresult, FuncSetBlockShape, CUfunction, hfunc, int, x, int, y, int, z);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncSetSharedSize"), CUresult, FuncSetSharedSize, CUfunction, hfunc, unsigned int, bytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuParamSetSize"), CUresult, ParamSetSize, CUfunction, hfunc, unsigned int, numbytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuParamSeti"), CUresult, ParamSeti, CUfunction, hfunc, int, offset, unsigned int, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuParamSetf"), CUresult, ParamSetf, CUfunction, hfunc, int, offset, float, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuParamSetv"), CUresult, ParamSetv, CUfunction, hfunc, int, offset, void *, ptr, unsigned int, numbytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunch"), CUresult, Launch, CUfunction, f);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchGrid"), CUresult, LaunchGrid, CUfunction, f, int, grid_width, int, grid_height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchGridAsync"), CUresult, LaunchGridAsync, CUfunction, f, int, grid_width, int, grid_height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuParamSetTexRef"), CUresult, ParamSetTexRef, CUfunction, hfunc, int, texunit, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuFuncSetSharedMemConfig"), CUresult, FuncSetSharedMemConfig, CUfunction, hfunc, CUsharedconfig, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphCreate"), CUresult, GraphCreate, CUgraph *, phGraph, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddKernelNode_v2"), CUresult, GraphAddKernelNode_v2, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeGetParams_v2"), CUresult, GraphKernelNodeGetParams_v2, CUgraphNode, hNode, CUDA_KERNEL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeSetParams_v2"), CUresult, GraphKernelNodeSetParams_v2, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddMemcpyNode"), CUresult, GraphAddMemcpyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemcpyNodeGetParams"), CUresult, GraphMemcpyNodeGetParams, CUgraphNode, hNode, CUDA_MEMCPY3D *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemcpyNodeSetParams"), CUresult, GraphMemcpyNodeSetParams, CUgraphNode, hNode, const CUDA_MEMCPY3D *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddMemsetNode"), CUresult, GraphAddMemsetNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemsetNodeGetParams"), CUresult, GraphMemsetNodeGetParams, CUgraphNode, hNode, CUDA_MEMSET_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemsetNodeSetParams"), CUresult, GraphMemsetNodeSetParams, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddHostNode"), CUresult, GraphAddHostNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_HOST_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphHostNodeGetParams"), CUresult, GraphHostNodeGetParams, CUgraphNode, hNode, CUDA_HOST_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphHostNodeSetParams"), CUresult, GraphHostNodeSetParams, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddChildGraphNode"), CUresult, GraphAddChildGraphNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUgraph, childGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphChildGraphNodeGetGraph"), CUresult, GraphChildGraphNodeGetGraph, CUgraphNode, hNode, CUgraph *, phGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddEmptyNode"), CUresult, GraphAddEmptyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddEventRecordNode"), CUresult, GraphAddEventRecordNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphEventRecordNodeGetEvent"), CUresult, GraphEventRecordNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphEventRecordNodeSetEvent"), CUresult, GraphEventRecordNodeSetEvent, CUgraphNode, hNode, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddEventWaitNode"), CUresult, GraphAddEventWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphEventWaitNodeGetEvent"), CUresult, GraphEventWaitNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphEventWaitNodeSetEvent"), CUresult, GraphEventWaitNodeSetEvent, CUgraphNode, hNode, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddExternalSemaphoresSignalNode"), CUresult, GraphAddExternalSemaphoresSignalNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExternalSemaphoresSignalNodeGetParams"), CUresult, GraphExternalSemaphoresSignalNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, params_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExternalSemaphoresSignalNodeSetParams"), CUresult, GraphExternalSemaphoresSignalNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddExternalSemaphoresWaitNode"), CUresult, GraphAddExternalSemaphoresWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExternalSemaphoresWaitNodeGetParams"), CUresult, GraphExternalSemaphoresWaitNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS *, params_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExternalSemaphoresWaitNodeSetParams"), CUresult, GraphExternalSemaphoresWaitNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddBatchMemOpNode"), CUresult, GraphAddBatchMemOpNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphBatchMemOpNodeGetParams"), CUresult, GraphBatchMemOpNodeGetParams, CUgraphNode, hNode, CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphBatchMemOpNodeSetParams"), CUresult, GraphBatchMemOpNodeSetParams, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecBatchMemOpNodeSetParams"), CUresult, GraphExecBatchMemOpNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddMemAllocNode"), CUresult, GraphAddMemAllocNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemAllocNodeGetParams"), CUresult, GraphMemAllocNodeGetParams, CUgraphNode, hNode, CUDA_MEM_ALLOC_NODE_PARAMS *, params_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddMemFreeNode"), CUresult, GraphAddMemFreeNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUdeviceptr, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphMemFreeNodeGetParams"), CUresult, GraphMemFreeNodeGetParams, CUgraphNode, hNode, CUdeviceptr *, dptr_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGraphMemTrim"), CUresult, DeviceGraphMemTrim, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetGraphMemAttribute"), CUresult, DeviceGetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceSetGraphMemAttribute"), CUresult, DeviceSetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphClone"), CUresult, GraphClone, CUgraph *, phGraphClone, CUgraph, originalGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeFindInClone"), CUresult, GraphNodeFindInClone, CUgraphNode *, phNode, CUgraphNode, hOriginalNode, CUgraph, hClonedGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetType"), CUresult, GraphNodeGetType, CUgraphNode, hNode, CUgraphNodeType *, type);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphGetNodes"), CUresult, GraphGetNodes, CUgraph, hGraph, CUgraphNode *, nodes, size_t *, numNodes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphGetRootNodes"), CUresult, GraphGetRootNodes, CUgraph, hGraph, CUgraphNode *, rootNodes, size_t *, numRootNodes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphGetEdges"), CUresult, GraphGetEdges, CUgraph, hGraph, CUgraphNode *, from, CUgraphNode *, to, size_t *, numEdges);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphGetEdges_v2"), CUresult, GraphGetEdges_v2, CUgraph, hGraph, CUgraphNode *, from, CUgraphNode *, to, CUgraphEdgeData *, edgeData, size_t *, numEdges);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetDependencies"), CUresult, GraphNodeGetDependencies, CUgraphNode, hNode, CUgraphNode *, dependencies, size_t *, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetDependencies_v2"), CUresult, GraphNodeGetDependencies_v2, CUgraphNode, hNode, CUgraphNode *, dependencies, CUgraphEdgeData *, edgeData, size_t *, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetDependentNodes"), CUresult, GraphNodeGetDependentNodes, CUgraphNode, hNode, CUgraphNode *, dependentNodes, size_t *, numDependentNodes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetDependentNodes_v2"), CUresult, GraphNodeGetDependentNodes_v2, CUgraphNode, hNode, CUgraphNode *, dependentNodes, CUgraphEdgeData *, edgeData, size_t *, numDependentNodes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddDependencies"), CUresult, GraphAddDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddDependencies_v2"), CUresult, GraphAddDependencies_v2, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, const CUgraphEdgeData *, edgeData, size_t, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphRemoveDependencies"), CUresult, GraphRemoveDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphRemoveDependencies_v2"), CUresult, GraphRemoveDependencies_v2, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, const CUgraphEdgeData *, edgeData, size_t, numDependencies);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphDestroyNode"), CUresult, GraphDestroyNode, CUgraphNode, hNode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphInstantiateWithFlags"), CUresult, GraphInstantiateWithFlags, CUgraphExec *, phGraphExec, CUgraph, hGraph, unsigned long long, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphInstantiateWithParams_ptsz"), CUresult, GraphInstantiateWithParams_ptsz, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS *, instantiateParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecGetFlags"), CUresult, GraphExecGetFlags, CUgraphExec, hGraphExec, cuuint64_t *, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecKernelNodeSetParams_v2"), CUresult, GraphExecKernelNodeSetParams_v2, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecMemcpyNodeSetParams"), CUresult, GraphExecMemcpyNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecMemsetNodeSetParams"), CUresult, GraphExecMemsetNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecHostNodeSetParams"), CUresult, GraphExecHostNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecChildGraphNodeSetParams"), CUresult, GraphExecChildGraphNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUgraph, childGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecEventRecordNodeSetEvent"), CUresult, GraphExecEventRecordNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecEventWaitNodeSetEvent"), CUresult, GraphExecEventWaitNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecExternalSemaphoresSignalNodeSetParams"), CUresult, GraphExecExternalSemaphoresSignalNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecExternalSemaphoresWaitNodeSetParams"), CUresult, GraphExecExternalSemaphoresWaitNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeSetEnabled"), CUresult, GraphNodeSetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int, isEnabled);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeGetEnabled"), CUresult, GraphNodeGetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int *, isEnabled);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphUpload_ptsz"), CUresult, GraphUpload_ptsz, CUgraphExec, hGraphExec, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphLaunch_ptsz"), CUresult, GraphLaunch_ptsz, CUgraphExec, hGraphExec, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecDestroy"), CUresult, GraphExecDestroy, CUgraphExec, hGraphExec);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphDestroy"), CUresult, GraphDestroy, CUgraph, hGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecUpdate_v2"), CUresult, GraphExecUpdate_v2, CUgraphExec, hGraphExec, CUgraph, hGraph, CUgraphExecUpdateResultInfo *, resultInfo);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeCopyAttributes"), CUresult, GraphKernelNodeCopyAttributes, CUgraphNode, dst, CUgraphNode, src);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeGetAttribute"), CUresult, GraphKernelNodeGetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, CUkernelNodeAttrValue *, value_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeSetAttribute"), CUresult, GraphKernelNodeSetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, const CUkernelNodeAttrValue *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphDebugDotPrint"), CUresult, GraphDebugDotPrint, CUgraph, hGraph, const char *, path, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuUserObjectCreate"), CUresult, UserObjectCreate, CUuserObject *, object_out, void *, ptr, CUhostFn, destroy, unsigned int, initialRefcount, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuUserObjectRetain"), CUresult, UserObjectRetain, CUuserObject, object, unsigned int, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuUserObjectRelease"), CUresult, UserObjectRelease, CUuserObject, object, unsigned int, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphRetainUserObject"), CUresult, GraphRetainUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphReleaseUserObject"), CUresult, GraphReleaseUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddNode"), CUresult, GraphAddNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUgraphNodeParams *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddNode_v2"), CUresult, GraphAddNode_v2, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUgraphNodeParams *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphNodeSetParams"), CUresult, GraphNodeSetParams, CUgraphNode, hNode, CUgraphNodeParams *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecNodeSetParams"), CUresult, GraphExecNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUgraphNodeParams *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphConditionalHandleCreate"), CUresult, GraphConditionalHandleCreate, CUgraphConditionalHandle *, pHandle_out, CUgraph, hGraph, CUcontext, ctx, unsigned int, defaultLaunchValue, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxActiveBlocksPerMultiprocessor"), CUresult, OccupancyMaxActiveBlocksPerMultiprocessor, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags"), CUresult, OccupancyMaxActiveBlocksPerMultiprocessorWithFlags, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxPotentialBlockSize"), CUresult, OccupancyMaxPotentialBlockSize, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxPotentialBlockSizeWithFlags"), CUresult, OccupancyMaxPotentialBlockSizeWithFlags, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyAvailableDynamicSMemPerBlock"), CUresult, OccupancyAvailableDynamicSMemPerBlock, size_t *, dynamicSmemSize, CUfunction, func, int, numBlocks, int, blockSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxPotentialClusterSize"), CUresult, OccupancyMaxPotentialClusterSize, int *, clusterSize, CUfunction, func, const CUlaunchConfig *, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuOccupancyMaxActiveClusters"), CUresult, OccupancyMaxActiveClusters, int *, numClusters, CUfunction, func, const CUlaunchConfig *, config);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetArray"), CUresult, TexRefSetArray, CUtexref, hTexRef, CUarray, hArray, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetMipmappedArray"), CUresult, TexRefSetMipmappedArray, CUtexref, hTexRef, CUmipmappedArray, hMipmappedArray, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddress_v2"), CUresult, TexRefSetAddress_v2, size_t *, ByteOffset, CUtexref, hTexRef, CUdeviceptr, dptr, size_t, bytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddress2D_v3"), CUresult, TexRefSetAddress2D_v3, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR *, desc, CUdeviceptr, dptr, size_t, Pitch);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetFormat"), CUresult, TexRefSetFormat, CUtexref, hTexRef, CUarray_format, fmt, int, NumPackedComponents);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddressMode"), CUresult, TexRefSetAddressMode, CUtexref, hTexRef, int, dim, CUaddress_mode, am);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetFilterMode"), CUresult, TexRefSetFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetMipmapFilterMode"), CUresult, TexRefSetMipmapFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetMipmapLevelBias"), CUresult, TexRefSetMipmapLevelBias, CUtexref, hTexRef, float, bias);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetMipmapLevelClamp"), CUresult, TexRefSetMipmapLevelClamp, CUtexref, hTexRef, float, minMipmapLevelClamp, float, maxMipmapLevelClamp);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetMaxAnisotropy"), CUresult, TexRefSetMaxAnisotropy, CUtexref, hTexRef, unsigned int, maxAniso);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetBorderColor"), CUresult, TexRefSetBorderColor, CUtexref, hTexRef, float *, pBorderColor);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetFlags"), CUresult, TexRefSetFlags, CUtexref, hTexRef, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetAddress_v2"), CUresult, TexRefGetAddress_v2, CUdeviceptr *, pdptr, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetArray"), CUresult, TexRefGetArray, CUarray *, phArray, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetMipmappedArray"), CUresult, TexRefGetMipmappedArray, CUmipmappedArray *, phMipmappedArray, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetAddressMode"), CUresult, TexRefGetAddressMode, CUaddress_mode *, pam, CUtexref, hTexRef, int, dim);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetFilterMode"), CUresult, TexRefGetFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetFormat"), CUresult, TexRefGetFormat, CUarray_format *, pFormat, int *, pNumChannels, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetMipmapFilterMode"), CUresult, TexRefGetMipmapFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetMipmapLevelBias"), CUresult, TexRefGetMipmapLevelBias, float *, pbias, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetMipmapLevelClamp"), CUresult, TexRefGetMipmapLevelClamp, float *, pminMipmapLevelClamp, float *, pmaxMipmapLevelClamp, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetMaxAnisotropy"), CUresult, TexRefGetMaxAnisotropy, int *, pmaxAniso, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetBorderColor"), CUresult, TexRefGetBorderColor, float *, pBorderColor, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetFlags"), CUresult, TexRefGetFlags, unsigned int *, pFlags, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefCreate"), CUresult, TexRefCreate, CUtexref *, pTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefDestroy"), CUresult, TexRefDestroy, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSurfRefSetArray"), CUresult, SurfRefSetArray, CUsurfref, hSurfRef, CUarray, hArray, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSurfRefGetArray"), CUresult, SurfRefGetArray, CUarray *, phArray, CUsurfref, hSurfRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexObjectCreate"), CUresult, TexObjectCreate, CUtexObject *, pTexObject, const CUDA_RESOURCE_DESC *, pResDesc, const CUDA_TEXTURE_DESC *, pTexDesc, const CUDA_RESOURCE_VIEW_DESC *, pResViewDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexObjectDestroy"), CUresult, TexObjectDestroy, CUtexObject, texObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexObjectGetResourceDesc"), CUresult, TexObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUtexObject, texObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexObjectGetTextureDesc"), CUresult, TexObjectGetTextureDesc, CUDA_TEXTURE_DESC *, pTexDesc, CUtexObject, texObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexObjectGetResourceViewDesc"), CUresult, TexObjectGetResourceViewDesc, CUDA_RESOURCE_VIEW_DESC *, pResViewDesc, CUtexObject, texObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSurfObjectCreate"), CUresult, SurfObjectCreate, CUsurfObject *, pSurfObject, const CUDA_RESOURCE_DESC *, pResDesc);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSurfObjectDestroy"), CUresult, SurfObjectDestroy, CUsurfObject, surfObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSurfObjectGetResourceDesc"), CUresult, SurfObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUsurfObject, surfObject);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTensorMapEncodeTiled"), CUresult, TensorMapEncodeTiled, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const cuuint32_t *, boxDim, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTensorMapEncodeIm2col"), CUresult, TensorMapEncodeIm2col, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const int *, pixelBoxLowerCorner, const int *, pixelBoxUpperCorner, cuuint32_t, channelsPerPixel, cuuint32_t, pixelsPerColumn, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTensorMapEncodeIm2colWide"), CUresult, TensorMapEncodeIm2colWide, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, int, pixelBoxLowerCornerWidth, int, pixelBoxUpperCornerWidth, cuuint32_t, channelsPerPixel, cuuint32_t, pixelsPerColumn, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapIm2ColWideMode, mode, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTensorMapReplaceAddress"), CUresult, TensorMapReplaceAddress, CUtensorMap *, tensorMap, void *, globalAddress);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceCanAccessPeer"), CUresult, DeviceCanAccessPeer, int *, canAccessPeer, CUdevice, dev, CUdevice, peerDev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxEnablePeerAccess"), CUresult, CtxEnablePeerAccess, CUcontext, peerContext, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxDisablePeerAccess"), CUresult, CtxDisablePeerAccess, CUcontext, peerContext);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetP2PAttribute"), CUresult, DeviceGetP2PAttribute, int *, value, CUdevice_P2PAttribute, attrib, CUdevice, srcDevice, CUdevice, dstDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsUnregisterResource"), CUresult, GraphicsUnregisterResource, CUgraphicsResource, resource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsSubResourceGetMappedArray"), CUresult, GraphicsSubResourceGetMappedArray, CUarray *, pArray, CUgraphicsResource, resource, unsigned int, arrayIndex, unsigned int, mipLevel);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsResourceGetMappedMipmappedArray"), CUresult, GraphicsResourceGetMappedMipmappedArray, CUmipmappedArray *, pMipmappedArray, CUgraphicsResource, resource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsResourceGetMappedPointer_v2"), CUresult, GraphicsResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, size_t *, pSize, CUgraphicsResource, resource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsResourceSetMapFlags_v2"), CUresult, GraphicsResourceSetMapFlags_v2, CUgraphicsResource, resource, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsMapResources_ptsz"), CUresult, GraphicsMapResources_ptsz, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsUnmapResources_ptsz"), CUresult, GraphicsUnmapResources_ptsz, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGetProcAddress_v2"), CUresult, GetProcAddress_v2, const char *, symbol, void **, pfn, int, cudaVersion, cuuint64_t, flags, CUdriverProcAddressQueryResult *, symbolStatus);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCoredumpGetAttribute"), CUresult, CoredumpGetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCoredumpGetAttributeGlobal"), CUresult, CoredumpGetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCoredumpSetAttribute"), CUresult, CoredumpSetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCoredumpSetAttributeGlobal"), CUresult, CoredumpSetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGetExportTable"), CUresult, GetExportTable, const void **, ppExportTable, const CUuuid *, pExportTableId);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxCreate"), CUresult, GreenCtxCreate, CUgreenCtx *, phCtx, CUdevResourceDesc, desc, CUdevice, dev, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxDestroy"), CUresult, GreenCtxDestroy, CUgreenCtx, hCtx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxFromGreenCtx"), CUresult, CtxFromGreenCtx, CUcontext *, pContext, CUgreenCtx, hCtx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceGetDevResource"), CUresult, DeviceGetDevResource, CUdevice, device, CUdevResource *, resource, CUdevResourceType, type);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxGetDevResource"), CUresult, CtxGetDevResource, CUcontext, hCtx, CUdevResource *, resource, CUdevResourceType, type);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxGetDevResource"), CUresult, GreenCtxGetDevResource, CUgreenCtx, hCtx, CUdevResource *, resource, CUdevResourceType, type);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevSmResourceSplitByCount"), CUresult, DevSmResourceSplitByCount, CUdevResource *, result, unsigned int *, nbGroups, const CUdevResource *, input, CUdevResource *, remaining, unsigned int, useFlags, unsigned int, minCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevResourceGenerateDesc"), CUresult, DevResourceGenerateDesc, CUdevResourceDesc *, phDesc, CUdevResource *, resources, unsigned int, nbResources);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxRecordEvent"), CUresult, GreenCtxRecordEvent, CUgreenCtx, hCtx, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxWaitEvent"), CUresult, GreenCtxWaitEvent, CUgreenCtx, hCtx, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetGreenCtx"), CUresult, StreamGetGreenCtx, CUstream, hStream, CUgreenCtx *, phCtx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGreenCtxStreamCreate"), CUresult, GreenCtxStreamCreate, CUstream *, phStream, CUgreenCtx, greenCtx, unsigned int, flags, int, priority);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLogsRegisterCallback"), CUresult, LogsRegisterCallback, CUlogsCallback, callbackFunc, void *, userData, CUlogsCallbackHandle *, callback_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLogsUnregisterCallback"), CUresult, LogsUnregisterCallback, CUlogsCallbackHandle, callback);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLogsCurrent"), CUresult, LogsCurrent, CUlogIterator *, iterator_out, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLogsDumpToFile"), CUresult, LogsDumpToFile, CUlogIterator *, iterator, const char *, pathToFile, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLogsDumpToMemory"), CUresult, LogsDumpToMemory, CUlogIterator *, iterator, char *, buffer, size_t *, size, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostRegister"), CUresult, MemHostRegister, void *, p, size_t, bytesize, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsResourceSetMapFlags"), CUresult, GraphicsResourceSetMapFlags, CUgraphicsResource, resource, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkCreate"), CUresult, LinkCreate, unsigned int, numOptions, CUjit_option *, options, void **, optionValues, CUlinkState *, stateOut);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkAddData"), CUresult, LinkAddData, CUlinkState, state, CUjitInputType, type, void *, data, size_t, size, const char *, name, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLinkAddFile"), CUresult, LinkAddFile, CUlinkState, state, CUjitInputType, type, const char *, path, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddress2D_v2"), CUresult, TexRefSetAddress2D_v2, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR *, desc, CUdeviceptr, dptr, size_t, Pitch);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDeviceTotalMem"), CUresult, DeviceTotalMem, unsigned int *, bytes, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxCreate"), CUresult, CtxCreate, CUcontext *, pctx, unsigned int, flags, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuModuleGetGlobal"), CUresult, ModuleGetGlobal, CUdeviceptr_v1 *, dptr, unsigned int *, bytes, CUmodule, hmod, const char *, name);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetInfo"), CUresult, MemGetInfo, unsigned int *, free, unsigned int *, total);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAlloc"), CUresult, MemAlloc, CUdeviceptr_v1 *, dptr, unsigned int, bytesize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocPitch"), CUresult, MemAllocPitch, CUdeviceptr_v1 *, dptr, unsigned int *, pPitch, unsigned int, WidthInBytes, unsigned int, Height, unsigned int, ElementSizeBytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemFree"), CUresult, MemFree, CUdeviceptr_v1, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemGetAddressRange"), CUresult, MemGetAddressRange, CUdeviceptr_v1 *, pbase, unsigned int *, psize, CUdeviceptr_v1, dptr);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocHost"), CUresult, MemAllocHost, void **, pp, unsigned int, bytesize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemHostGetDevicePointer"), CUresult, MemHostGetDevicePointer, CUdeviceptr_v1 *, pdptr, void *, p, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoD"), CUresult, MemcpyHtoD, CUdeviceptr_v1, dstDevice, const void *, srcHost, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoH"), CUresult, MemcpyDtoH, void *, dstHost, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoD"), CUresult, MemcpyDtoD, CUdeviceptr_v1, dstDevice, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoA"), CUresult, MemcpyDtoA, CUarray, dstArray, unsigned int, dstOffset, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoD"), CUresult, MemcpyAtoD, CUdeviceptr_v1, dstDevice, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoA"), CUresult, MemcpyHtoA, CUarray, dstArray, unsigned int, dstOffset, const void *, srcHost, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoH"), CUresult, MemcpyAtoH, void *, dstHost, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoA"), CUresult, MemcpyAtoA, CUarray, dstArray, unsigned int, dstOffset, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoAAsync"), CUresult, MemcpyHtoAAsync, CUarray, dstArray, unsigned int, dstOffset, const void *, srcHost, unsigned int, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoHAsync"), CUresult, MemcpyAtoHAsync, void *, dstHost, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2D"), CUresult, Memcpy2D, const CUDA_MEMCPY2D_v1 *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DUnaligned"), CUresult, Memcpy2DUnaligned, const CUDA_MEMCPY2D_v1 *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3D"), CUresult, Memcpy3D, const CUDA_MEMCPY3D_v1 *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoDAsync"), CUresult, MemcpyHtoDAsync, CUdeviceptr_v1, dstDevice, const void *, srcHost, unsigned int, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoHAsync"), CUresult, MemcpyDtoHAsync, void *, dstHost, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoDAsync"), CUresult, MemcpyDtoDAsync, CUdeviceptr_v1, dstDevice, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DAsync"), CUresult, Memcpy2DAsync, const CUDA_MEMCPY2D_v1 *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DAsync"), CUresult, Memcpy3DAsync, const CUDA_MEMCPY3D_v1 *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD8"), CUresult, MemsetD8, CUdeviceptr_v1, dstDevice, unsigned char, uc, unsigned int, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD16"), CUresult, MemsetD16, CUdeviceptr_v1, dstDevice, unsigned short, us, unsigned int, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD32"), CUresult, MemsetD32, CUdeviceptr_v1, dstDevice, unsigned int, ui, unsigned int, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D8"), CUresult, MemsetD2D8, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned char, uc, unsigned int, Width, unsigned int, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D16"), CUresult, MemsetD2D16, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned short, us, unsigned int, Width, unsigned int, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D32"), CUresult, MemsetD2D32, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned int, ui, unsigned int, Width, unsigned int, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayCreate"), CUresult, ArrayCreate, CUarray *, pHandle, const CUDA_ARRAY_DESCRIPTOR_v1 *, pAllocateArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArrayGetDescriptor"), CUresult, ArrayGetDescriptor, CUDA_ARRAY_DESCRIPTOR_v1 *, pArrayDescriptor, CUarray, hArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArray3DCreate"), CUresult, Array3DCreate, CUarray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR_v1 *, pAllocateArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuArray3DGetDescriptor"), CUresult, Array3DGetDescriptor, CUDA_ARRAY3D_DESCRIPTOR_v1 *, pArrayDescriptor, CUarray, hArray);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddress"), CUresult, TexRefSetAddress, unsigned int *, ByteOffset, CUtexref, hTexRef, CUdeviceptr_v1, dptr, unsigned int, bytes);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefSetAddress2D"), CUresult, TexRefSetAddress2D, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR_v1 *, desc, CUdeviceptr_v1, dptr, unsigned int, Pitch);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuTexRefGetAddress"), CUresult, TexRefGetAddress, CUdeviceptr_v1 *, pdptr, CUtexref, hTexRef);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsResourceGetMappedPointer"), CUresult, GraphicsResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, unsigned int *, pSize, CUgraphicsResource, resource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxDestroy"), CUresult, CtxDestroy, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxPopCurrent"), CUresult, CtxPopCurrent, CUcontext *, pctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCtxPushCurrent"), CUresult, CtxPushCurrent, CUcontext, ctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamDestroy"), CUresult, StreamDestroy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventDestroy"), CUresult, EventDestroy, CUevent, hEvent);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxRelease"), CUresult, DevicePrimaryCtxRelease, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxReset"), CUresult, DevicePrimaryCtxReset, CUdevice, dev);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuDevicePrimaryCtxSetFlags"), CUresult, DevicePrimaryCtxSetFlags, CUdevice, dev, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoD_v2"), CUresult, MemcpyHtoD_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoH_v2"), CUresult, MemcpyDtoH_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoD_v2"), CUresult, MemcpyDtoD_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoA_v2"), CUresult, MemcpyDtoA_v2, CUarray, dstArray, size_t, dstOffset, CUdeviceptr, srcDevice, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoD_v2"), CUresult, MemcpyAtoD_v2, CUdeviceptr, dstDevice, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoA_v2"), CUresult, MemcpyHtoA_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoH_v2"), CUresult, MemcpyAtoH_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoA_v2"), CUresult, MemcpyAtoA_v2, CUarray, dstArray, size_t, dstOffset, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoAAsync_v2"), CUresult, MemcpyHtoAAsync_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAtoHAsync_v2"), CUresult, MemcpyAtoHAsync_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2D_v2"), CUresult, Memcpy2D_v2, const CUDA_MEMCPY2D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DUnaligned_v2"), CUresult, Memcpy2DUnaligned_v2, const CUDA_MEMCPY2D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3D_v2"), CUresult, Memcpy3D_v2, const CUDA_MEMCPY3D *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyHtoDAsync_v2"), CUresult, MemcpyHtoDAsync_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoHAsync_v2"), CUresult, MemcpyDtoHAsync_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyDtoDAsync_v2"), CUresult, MemcpyDtoDAsync_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy2DAsync_v2"), CUresult, Memcpy2DAsync_v2, const CUDA_MEMCPY2D *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DAsync_v2"), CUresult, Memcpy3DAsync_v2, const CUDA_MEMCPY3D *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD8_v2"), CUresult, MemsetD8_v2, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD16_v2"), CUresult, MemsetD16_v2, CUdeviceptr, dstDevice, unsigned short, us, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD32_v2"), CUresult, MemsetD32_v2, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D8_v2"), CUresult, MemsetD2D8_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D16_v2"), CUresult, MemsetD2D16_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D32_v2"), CUresult, MemsetD2D32_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy"), CUresult, Memcpy, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyAsync"), CUresult, MemcpyAsync, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyPeer"), CUresult, MemcpyPeer, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyPeerAsync"), CUresult, MemcpyPeerAsync, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DPeer"), CUresult, Memcpy3DPeer, const CUDA_MEMCPY3D_PEER *, pCopy);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DPeerAsync"), CUresult, Memcpy3DPeerAsync, const CUDA_MEMCPY3D_PEER *, pCopy, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpyBatchAsync"), CUresult, MemcpyBatchAsync, CUdeviceptr *, dsts, CUdeviceptr *, srcs, size_t *, sizes, size_t, count, CUmemcpyAttributes *, attrs, size_t *, attrsIdxs, size_t, numAttrs, size_t *, failIdx, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemcpy3DBatchAsync"), CUresult, Memcpy3DBatchAsync, size_t, numOps, CUDA_MEMCPY3D_BATCH_OP *, opList, size_t *, failIdx, unsigned long long, flags, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD8Async"), CUresult, MemsetD8Async, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD16Async"), CUresult, MemsetD16Async, CUdeviceptr, dstDevice, unsigned short, us, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD32Async"), CUresult, MemsetD32Async, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D8Async"), CUresult, MemsetD2D8Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D16Async"), CUresult, MemsetD2D16Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemsetD2D32Async"), CUresult, MemsetD2D32Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetPriority"), CUresult, StreamGetPriority, CUstream, hStream, int *, priority);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetId"), CUresult, StreamGetId, CUstream, hStream, unsigned long long *, streamId);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetFlags"), CUresult, StreamGetFlags, CUstream, hStream, unsigned int *, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetDevice"), CUresult, StreamGetDevice, CUstream, hStream, CUdevice *, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCtx"), CUresult, StreamGetCtx, CUstream, hStream, CUcontext *, pctx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCtx_v2"), CUresult, StreamGetCtx_v2, CUstream, hStream, CUcontext *, pCtx, CUgreenCtx *, pGreenCtx);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitEvent"), CUresult, StreamWaitEvent, CUstream, hStream, CUevent, hEvent, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamAddCallback"), CUresult, StreamAddCallback, CUstream, hStream, CUstreamCallback, callback, void *, userData, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamAttachMemAsync"), CUresult, StreamAttachMemAsync, CUstream, hStream, CUdeviceptr, dptr, size_t, length, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamQuery"), CUresult, StreamQuery, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamSynchronize"), CUresult, StreamSynchronize, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventRecord"), CUresult, EventRecord, CUevent, hEvent, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuEventRecordWithFlags"), CUresult, EventRecordWithFlags, CUevent, hEvent, CUstream, hStream, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchKernel"), CUresult, LaunchKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchKernelEx"), CUresult, LaunchKernelEx, const CUlaunchConfig *, config, CUfunction, f, void **, kernelParams, void **, extra);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchHostFunc"), CUresult, LaunchHostFunc, CUstream, hStream, CUhostFn, fn, void *, userData);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsMapResources"), CUresult, GraphicsMapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsUnmapResources"), CUresult, GraphicsUnmapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue32"), CUresult, StreamWriteValue32, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue32"), CUresult, StreamWaitValue32, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue64"), CUresult, StreamWriteValue64, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue64"), CUresult, StreamWaitValue64, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBatchMemOp"), CUresult, StreamBatchMemOp, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue32_ptsz"), CUresult, StreamWriteValue32_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue32_ptsz"), CUresult, StreamWaitValue32_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue64_ptsz"), CUresult, StreamWriteValue64_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue64_ptsz"), CUresult, StreamWaitValue64_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBatchMemOp_ptsz"), CUresult, StreamBatchMemOp_ptsz, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue32_v2"), CUresult, StreamWriteValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue32_v2"), CUresult, StreamWaitValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWriteValue64_v2"), CUresult, StreamWriteValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamWaitValue64_v2"), CUresult, StreamWaitValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBatchMemOp_v2"), CUresult, StreamBatchMemOp_v2, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPrefetchAsync"), CUresult, MemPrefetchAsync, CUdeviceptr, devPtr, size_t, count, CUdevice, dstDevice, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemPrefetchAsync_v2"), CUresult, MemPrefetchAsync_v2, CUdeviceptr, devPtr, size_t, count, CUmemLocation, location, unsigned int, flags, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuLaunchCooperativeKernel"), CUresult, LaunchCooperativeKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuSignalExternalSemaphoresAsync"), CUresult, SignalExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuWaitExternalSemaphoresAsync"), CUresult, WaitExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCapture"), CUresult, StreamBeginCapture, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCapture_ptsz"), CUresult, StreamBeginCapture_ptsz, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCapture_v2"), CUresult, StreamBeginCapture_v2, CUstream, hStream, CUstreamCaptureMode, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamBeginCaptureToGraph"), CUresult, StreamBeginCaptureToGraph, CUstream, hStream, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUstreamCaptureMode, mode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamEndCapture"), CUresult, StreamEndCapture, CUstream, hStream, CUgraph *, phGraph);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamIsCapturing"), CUresult, StreamIsCapturing, CUstream, hStream, CUstreamCaptureStatus *, captureStatus);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo"), CUresult, StreamGetCaptureInfo, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo_ptsz"), CUresult, StreamGetCaptureInfo_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo_v2"), CUresult, StreamGetCaptureInfo_v2, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, size_t *, numDependencies_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetCaptureInfo_v3"), CUresult, StreamGetCaptureInfo_v3, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, const CUgraphEdgeData **, edgeData_out, size_t *, numDependencies_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphAddKernelNode"), CUresult, GraphAddKernelNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeGetParams"), CUresult, GraphKernelNodeGetParams, CUgraphNode, hNode, CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphKernelNodeSetParams"), CUresult, GraphKernelNodeSetParams, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecKernelNodeSetParams"), CUresult, GraphExecKernelNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphInstantiateWithParams"), CUresult, GraphInstantiateWithParams, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS *, instantiateParams);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphExecUpdate"), CUresult, GraphExecUpdate, CUgraphExec, hGraphExec, CUgraph, hGraph, CUgraphNode *, hErrorNode_out, CUgraphExecUpdateResult *, updateResult_out);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphUpload"), CUresult, GraphUpload, CUgraphExec, hGraph, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphLaunch"), CUresult, GraphLaunch, CUgraphExec, hGraph, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamCopyAttributes"), CUresult, StreamCopyAttributes, CUstream, dstStream, CUstream, srcStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamGetAttribute"), CUresult, StreamGetAttribute, CUstream, hStream, CUstreamAttrID, attr, CUstreamAttrValue *, value);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamSetAttribute"), CUresult, StreamSetAttribute, CUstream, hStream, CUstreamAttrID, attr, const CUstreamAttrValue *, param);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuIpcOpenMemHandle"), CUresult, IpcOpenMemHandle, CUdeviceptr *, pdptr, CUipcMemHandle, handle, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphInstantiate"), CUresult, GraphInstantiate, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUgraphNode *, phErrorNode, char *, logBuffer, size_t, bufferSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphInstantiate_v2"), CUresult, GraphInstantiate_v2, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUgraphNode *, phErrorNode, char *, logBuffer, size_t, bufferSize);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemMapArrayAsync"), CUresult, MemMapArrayAsync, CUarrayMapInfo *, mapInfoList, unsigned int, count, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemFreeAsync"), CUresult, MemFreeAsync, CUdeviceptr, dptr, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocAsync"), CUresult, MemAllocAsync, CUdeviceptr *, dptr, size_t, bytesize, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemAllocFromPoolAsync"), CUresult, MemAllocFromPoolAsync, CUdeviceptr *, dptr, size_t, bytesize, CUmemoryPool, pool, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamUpdateCaptureDependencies"), CUresult, StreamUpdateCaptureDependencies, CUstream, hStream, CUgraphNode *, dependencies, size_t, numDependencies, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuStreamUpdateCaptureDependencies_v2"), CUresult, StreamUpdateCaptureDependencies_v2, CUstream, hStream, CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, unsigned int, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuMemBatchDecompressAsync"), CUresult, MemBatchDecompressAsync, CUmemDecompressParams *, paramsArray, size_t, count, unsigned int, flags, size_t *, errorIndex, CUstream, stream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGetProcAddress"), CUresult, GetProcAddress, const char *, symbol, void **, pfn, int, cudaVersion, cuuint64_t, flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessGetRestoreThreadId"), CUresult, CheckpointProcessGetRestoreThreadId, int, pid, int *, tid);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessGetState"), CUresult, CheckpointProcessGetState, int, pid, CUprocessState *, state);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessLock"), CUresult, CheckpointProcessLock, int, pid, CUcheckpointLockArgs *, args);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessCheckpoint"), CUresult, CheckpointProcessCheckpoint, int, pid, CUcheckpointCheckpointArgs *, args);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessRestore"), CUresult, CheckpointProcessRestore, int, pid, CUcheckpointRestoreArgs *, args);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuCheckpointProcessUnlock"), CUresult, CheckpointProcessUnlock, int, pid, CUcheckpointUnlockArgs *, args);

};

} // namespace xsched::cuda
