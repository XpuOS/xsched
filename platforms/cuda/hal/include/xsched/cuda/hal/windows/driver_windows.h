// This file is auto-generated by command 
// "python tools/autogen/merge_headers.py -d .\platforms\cuda\hal\include\xsched\cuda\hal\windows"
// "python tools/autogen/gen.py --source merged.h --lib C:\Windows\System32\nvcuda.dll --platform cuda --prefix cu"
#pragma once

#if defined(_WIN32)

#include "xsched/protocol/def.h"
#include "xsched/utils/common.h"
#include "xsched/utils/symbol.h"
#include "xsched/utils/function.h"
#include "xsched/cuda/hal/common/cuda.h"
#include "cudaD3D9.h"
#include "cudaD3D10.h"
#include "cudaD3D11.h"
#include "cudaGL.h"
#include "cudaProfiler.h"

namespace xsched::cuda
{

class DriverWindows
{
private:
    DEFINE_GET_SYMBOL_FUNC(GetSymbol, XSCHED_CUDA_LIB_ENV_NAME,
                           std::vector<std::string>({"nvcuda_original.dll"}),
                           std::vector<std::string>({}));

public:
    STATIC_CLASS(DriverWindows);
    
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuProfilerInitialize"), CUresult, ProfilerInitialize, const char *, configFile, const char *, outputFile, CUoutput_mode, outputMode);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuProfilerStart"), CUresult, ProfilerStart);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuProfilerStop"), CUresult, ProfilerStop);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsGLRegisterBuffer"), CUresult, GraphicsGLRegisterBuffer, CUgraphicsResource *, pCudaResource, GLuint, buffer, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsGLRegisterImage"), CUresult, GraphicsGLRegisterImage, CUgraphicsResource *, pCudaResource, GLuint, image, GLenum, target, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuWGLGetDevice"), CUresult, WGLGetDevice, CUdevice *, pDevice, HGPUNV, hGpu);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLGetDevices_v2"), CUresult, GLGetDevices_v2, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, CUGLDeviceList, deviceList);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLCtxCreate_v2"), CUresult, GLCtxCreate_v2, CUcontext *, pCtx, unsigned int, Flags, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLInit"), CUresult, GLInit);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLRegisterBufferObject"), CUresult, GLRegisterBufferObject, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObject_v2_ptds"), CUresult, GLMapBufferObject_v2_ptds, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLUnmapBufferObject"), CUresult, GLUnmapBufferObject, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLUnregisterBufferObject"), CUresult, GLUnregisterBufferObject, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLSetBufferObjectMapFlags"), CUresult, GLSetBufferObjectMapFlags, GLuint, buffer, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObjectAsync_v2_ptsz"), CUresult, GLMapBufferObjectAsync_v2_ptsz, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLUnmapBufferObjectAsync"), CUresult, GLUnmapBufferObjectAsync, GLuint, buffer, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLGetDevices"), CUresult, GLGetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, CUGLDeviceList, deviceList);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObject_v2"), CUresult, GLMapBufferObject_v2, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObjectAsync_v2"), CUresult, GLMapBufferObjectAsync_v2, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLCtxCreate"), CUresult, GLCtxCreate, CUcontext *, pCtx, unsigned int, Flags, CUdevice, device);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObject"), CUresult, GLMapBufferObject, CUdeviceptr_v1 *, dptr, unsigned int *, size, GLuint, buffer);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGLMapBufferObjectAsync"), CUresult, GLMapBufferObjectAsync, CUdeviceptr_v1 *, dptr, unsigned int *, size, GLuint, buffer, CUstream, hStream);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11GetDevice"), CUresult, D3D11GetDevice, CUdevice *, pCudaDevice, IDXGIAdapter *, pAdapter);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11GetDevices"), CUresult, D3D11GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, ID3D11Device *, pD3D11Device, CUd3d11DeviceList, deviceList);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsD3D11RegisterResource"), CUresult, GraphicsD3D11RegisterResource, CUgraphicsResource *, pCudaResource, ID3D11Resource *, pD3DResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11CtxCreate_v2"), CUresult, D3D11CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D11Device *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11CtxCreateOnDevice"), CUresult, D3D11CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, ID3D11Device *, pD3DDevice, CUdevice, cudaDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11GetDirect3DDevice"), CUresult, D3D11GetDirect3DDevice, ID3D11Device **, ppD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D11CtxCreate"), CUresult, D3D11CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D11Device *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10GetDevice"), CUresult, D3D10GetDevice, CUdevice *, pCudaDevice, IDXGIAdapter *, pAdapter);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10GetDevices"), CUresult, D3D10GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, ID3D10Device *, pD3D10Device, CUd3d10DeviceList, deviceList);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsD3D10RegisterResource"), CUresult, GraphicsD3D10RegisterResource, CUgraphicsResource *, pCudaResource, ID3D10Resource *, pD3DResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10CtxCreate_v2"), CUresult, D3D10CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D10Device *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10CtxCreateOnDevice"), CUresult, D3D10CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, ID3D10Device *, pD3DDevice, CUdevice, cudaDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10GetDirect3DDevice"), CUresult, D3D10GetDirect3DDevice, ID3D10Device **, ppD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10RegisterResource"), CUresult, D3D10RegisterResource, ID3D10Resource *, pResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10UnregisterResource"), CUresult, D3D10UnregisterResource, ID3D10Resource *, pResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10MapResources"), CUresult, D3D10MapResources, unsigned int, count, ID3D10Resource **, ppResources);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10UnmapResources"), CUresult, D3D10UnmapResources, unsigned int, count, ID3D10Resource **, ppResources);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceSetMapFlags"), CUresult, D3D10ResourceSetMapFlags, ID3D10Resource *, pResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedArray"), CUresult, D3D10ResourceGetMappedArray, CUarray *, pArray, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedPointer_v2"), CUresult, D3D10ResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedSize_v2"), CUresult, D3D10ResourceGetMappedSize_v2, size_t *, pSize, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedPitch_v2"), CUresult, D3D10ResourceGetMappedPitch_v2, size_t *, pPitch, size_t *, pPitchSlice, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetSurfaceDimensions_v2"), CUresult, D3D10ResourceGetSurfaceDimensions_v2, size_t *, pWidth, size_t *, pHeight, size_t *, pDepth, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10CtxCreate"), CUresult, D3D10CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D10Device *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedPitch"), CUresult, D3D10ResourceGetMappedPitch, unsigned int *, pPitch, unsigned int *, pPitchSlice, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedPointer"), CUresult, D3D10ResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetMappedSize"), CUresult, D3D10ResourceGetMappedSize, unsigned int *, pSize, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D10ResourceGetSurfaceDimensions"), CUresult, D3D10ResourceGetSurfaceDimensions, unsigned int *, pWidth, unsigned int *, pHeight, unsigned int *, pDepth, ID3D10Resource *, pResource, unsigned int, SubResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9GetDevice"), CUresult, D3D9GetDevice, CUdevice *, pCudaDevice, const char *, pszAdapterName);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9GetDevices"), CUresult, D3D9GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, IDirect3DDevice9 *, pD3D9Device, CUd3d9DeviceList, deviceList);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9CtxCreate_v2"), CUresult, D3D9CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, IDirect3DDevice9 *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9CtxCreateOnDevice"), CUresult, D3D9CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, IDirect3DDevice9 *, pD3DDevice, CUdevice, cudaDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9GetDirect3DDevice"), CUresult, D3D9GetDirect3DDevice, IDirect3DDevice9 **, ppD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuGraphicsD3D9RegisterResource"), CUresult, GraphicsD3D9RegisterResource, CUgraphicsResource *, pCudaResource, IDirect3DResource9 *, pD3DResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9RegisterResource"), CUresult, D3D9RegisterResource, IDirect3DResource9 *, pResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9UnregisterResource"), CUresult, D3D9UnregisterResource, IDirect3DResource9 *, pResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9MapResources"), CUresult, D3D9MapResources, unsigned int, count, IDirect3DResource9 **, ppResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9UnmapResources"), CUresult, D3D9UnmapResources, unsigned int, count, IDirect3DResource9 **, ppResource);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceSetMapFlags"), CUresult, D3D9ResourceSetMapFlags, IDirect3DResource9 *, pResource, unsigned int, Flags);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetSurfaceDimensions_v2"), CUresult, D3D9ResourceGetSurfaceDimensions_v2, size_t *, pWidth, size_t *, pHeight, size_t *, pDepth, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedArray"), CUresult, D3D9ResourceGetMappedArray, CUarray *, pArray, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedPointer_v2"), CUresult, D3D9ResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedSize_v2"), CUresult, D3D9ResourceGetMappedSize_v2, size_t *, pSize, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedPitch_v2"), CUresult, D3D9ResourceGetMappedPitch_v2, size_t *, pPitch, size_t *, pPitchSlice, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9Begin"), CUresult, D3D9Begin, IDirect3DDevice9 *, pDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9End"), CUresult, D3D9End);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9RegisterVertexBuffer"), CUresult, D3D9RegisterVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9MapVertexBuffer_v2"), CUresult, D3D9MapVertexBuffer_v2, CUdeviceptr *, pDevPtr, size_t *, pSize, IDirect3DVertexBuffer9 *, pVB);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9UnmapVertexBuffer"), CUresult, D3D9UnmapVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9UnregisterVertexBuffer"), CUresult, D3D9UnregisterVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9CtxCreate"), CUresult, D3D9CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, IDirect3DDevice9 *, pD3DDevice);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetSurfaceDimensions"), CUresult, D3D9ResourceGetSurfaceDimensions, unsigned int *, pWidth, unsigned int *, pHeight, unsigned int *, pDepth, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedPointer"), CUresult, D3D9ResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedSize"), CUresult, D3D9ResourceGetMappedSize, unsigned int *, pSize, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9ResourceGetMappedPitch"), CUresult, D3D9ResourceGetMappedPitch, unsigned int *, pPitch, unsigned int *, pPitchSlice, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
    DEFINE_STATIC_ADDRESS_CALL(GetSymbol("cuD3D9MapVertexBuffer"), CUresult, D3D9MapVertexBuffer, CUdeviceptr_v1 *, pDevPtr, unsigned int *, pSize, IDirect3DVertexBuffer9 *, pVB);

};

} // namespace xsched::cuda

#endif
