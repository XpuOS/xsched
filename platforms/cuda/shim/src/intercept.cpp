/// This file is auto-generated by tools/autogen/gen.py ./include/hal/cuda/common/cuda.h cuda cu
#include <map>
#include <unordered_map>

#include "xsched/utils/function.h"
#include "xsched/cuda/shim/shim.h"
#include "xsched/cuda/hal/common/driver.h"

using namespace xsched::cuda;

EXPORT_C_FUNC CUresult XGetProcAddress(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags);
EXPORT_C_FUNC CUresult XGetProcAddress_v2(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags, CUdriverProcAddressQueryResult *symbolStatus);

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorString, CUresult, cuGetErrorString, CUresult, error, const char **, pStr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorName, CUresult, cuGetErrorName, CUresult, error, const char **, pStr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Init, CUresult, cuInit, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetVersion, CUresult, cuDriverGetVersion, int *, driverVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGet, CUresult, cuDeviceGet, CUdevice *, device, int, ordinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCount, CUresult, cuDeviceGetCount, int *, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetName, CUresult, cuDeviceGetName, char *, name, int, len, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetUuid, CUresult, cuDeviceGetUuid, CUuuid *, uuid, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetUuid_v2, CUresult, cuDeviceGetUuid_v2, CUuuid *, uuid, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetLuid, CUresult, cuDeviceGetLuid, char *, luid, unsigned int *, deviceNodeMask, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceTotalMem_v2, CUresult, cuDeviceTotalMem_v2, size_t *, bytes, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetTexture1DLinearMaxWidth, CUresult, cuDeviceGetTexture1DLinearMaxWidth, size_t *, maxWidthInElements, CUarray_format, format, unsigned int, numChannels, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetAttribute, CUresult, cuDeviceGetAttribute, int *, pi, CUdevice_attribute, attrib, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetNvSciSyncAttributes, CUresult, cuDeviceGetNvSciSyncAttributes, void *, nvSciSyncAttrList, CUdevice, dev, int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetMemPool, CUresult, cuDeviceSetMemPool, CUdevice, dev, CUmemoryPool, pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemPool, CUresult, cuDeviceGetMemPool, CUmemoryPool *, pool, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetDefaultMemPool, CUresult, cuDeviceGetDefaultMemPool, CUmemoryPool *, pool_out, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetExecAffinitySupport, CUresult, cuDeviceGetExecAffinitySupport, int *, pi, CUexecAffinityType, type, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FlushGPUDirectRDMAWrites, CUresult, cuFlushGPUDirectRDMAWrites, CUflushGPUDirectRDMAWritesTarget, target, CUflushGPUDirectRDMAWritesScope, scope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetProperties, CUresult, cuDeviceGetProperties, CUdevprop *, prop, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceComputeCapability, CUresult, cuDeviceComputeCapability, int *, major, int *, minor, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRetain, CUresult, cuDevicePrimaryCtxRetain, CUcontext *, pctx, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRelease_v2, CUresult, cuDevicePrimaryCtxRelease_v2, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxSetFlags_v2, CUresult, cuDevicePrimaryCtxSetFlags_v2, CUdevice, dev, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxGetState, CUresult, cuDevicePrimaryCtxGetState, CUdevice, dev, unsigned int *, flags, int *, active);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxReset_v2, CUresult, cuDevicePrimaryCtxReset_v2, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate_v2, CUresult, cuCtxCreate_v2, CUcontext *, pctx, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate_v3, CUresult, cuCtxCreate_v3, CUcontext *, pctx, CUexecAffinityParam *, paramsArray, int, numParams, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate_v4, CUresult, cuCtxCreate_v4, CUcontext *, pctx, CUctxCreateParams *, ctxCreateParams, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDestroy_v2, CUresult, cuCtxDestroy_v2, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPushCurrent_v2, CUresult, cuCtxPushCurrent_v2, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPopCurrent_v2, CUresult, cuCtxPopCurrent_v2, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCurrent, CUresult, cuCtxSetCurrent, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCurrent, CUresult, cuCtxGetCurrent, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetDevice, CUresult, cuCtxGetDevice, CUdevice *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetFlags, CUresult, cuCtxGetFlags, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetFlags, CUresult, cuCtxSetFlags, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetId, CUresult, cuCtxGetId, CUcontext, ctx, unsigned long long *, ctxId);
DEFINE_EXPORT_C_REDIRECT_CALL(XCtxSynchronize, CUresult, cuCtxSynchronize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetLimit, CUresult, cuCtxSetLimit, CUlimit, limit, size_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetLimit, CUresult, cuCtxGetLimit, size_t *, pvalue, CUlimit, limit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCacheConfig, CUresult, cuCtxGetCacheConfig, CUfunc_cache *, pconfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCacheConfig, CUresult, cuCtxSetCacheConfig, CUfunc_cache, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetApiVersion, CUresult, cuCtxGetApiVersion, CUcontext, ctx, unsigned int *, version);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetStreamPriorityRange, CUresult, cuCtxGetStreamPriorityRange, int *, leastPriority, int *, greatestPriority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxResetPersistingL2Cache, CUresult, cuCtxResetPersistingL2Cache);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetExecAffinity, CUresult, cuCtxGetExecAffinity, CUexecAffinityParam *, pExecAffinity, CUexecAffinityType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxRecordEvent, CUresult, cuCtxRecordEvent, CUcontext, hCtx, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxWaitEvent, CUresult, cuCtxWaitEvent, CUcontext, hCtx, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxAttach, CUresult, cuCtxAttach, CUcontext *, pctx, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDetach, CUresult, cuCtxDetach, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetSharedMemConfig, CUresult, cuCtxGetSharedMemConfig, CUsharedconfig *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetSharedMemConfig, CUresult, cuCtxSetSharedMemConfig, CUsharedconfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoad, CUresult, cuModuleLoad, CUmodule *, module, const char *, fname);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadData, CUresult, cuModuleLoadData, CUmodule *, module, const void *, image);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadDataEx, CUresult, cuModuleLoadDataEx, CUmodule *, module, const void *, image, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadFatBinary, CUresult, cuModuleLoadFatBinary, CUmodule *, module, const void *, fatCubin);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleUnload, CUresult, cuModuleUnload, CUmodule, hmod);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetLoadingMode, CUresult, cuModuleGetLoadingMode, CUmoduleLoadingMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunction, CUresult, cuModuleGetFunction, CUfunction *, hfunc, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunctionCount, CUresult, cuModuleGetFunctionCount, unsigned int *, count, CUmodule, mod);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleEnumerateFunctions, CUresult, cuModuleEnumerateFunctions, CUfunction *, functions, unsigned int, numFunctions, CUmodule, mod);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobal_v2, CUresult, cuModuleGetGlobal_v2, CUdeviceptr *, dptr, size_t *, bytes, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkCreate_v2, CUresult, cuLinkCreate_v2, unsigned int, numOptions, CUjit_option *, options, void **, optionValues, CUlinkState *, stateOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddData_v2, CUresult, cuLinkAddData_v2, CUlinkState, state, CUjitInputType, type, void *, data, size_t, size, const char *, name, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddFile_v2, CUresult, cuLinkAddFile_v2, CUlinkState, state, CUjitInputType, type, const char *, path, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkComplete, CUresult, cuLinkComplete, CUlinkState, state, void **, cubinOut, size_t *, sizeOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkDestroy, CUresult, cuLinkDestroy, CUlinkState, state);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetTexRef, CUresult, cuModuleGetTexRef, CUtexref *, pTexRef, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetSurfRef, CUresult, cuModuleGetSurfRef, CUsurfref *, pSurfRef, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryLoadData, CUresult, cuLibraryLoadData, CUlibrary *, library, const void *, code, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryLoadFromFile, CUresult, cuLibraryLoadFromFile, CUlibrary *, library, const char *, fileName, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryUnload, CUresult, cuLibraryUnload, CUlibrary, library);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetKernel, CUresult, cuLibraryGetKernel, CUkernel *, pKernel, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetKernelCount, CUresult, cuLibraryGetKernelCount, unsigned int *, count, CUlibrary, lib);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryEnumerateKernels, CUresult, cuLibraryEnumerateKernels, CUkernel *, kernels, unsigned int, numKernels, CUlibrary, lib);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetModule, CUresult, cuLibraryGetModule, CUmodule *, pMod, CUlibrary, library);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetFunction, CUresult, cuKernelGetFunction, CUfunction *, pFunc, CUkernel, kernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetLibrary, CUresult, cuKernelGetLibrary, CUlibrary *, pLib, CUkernel, kernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetGlobal, CUresult, cuLibraryGetGlobal, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetManaged, CUresult, cuLibraryGetManaged, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetUnifiedFunction, CUresult, cuLibraryGetUnifiedFunction, void **, fptr, CUlibrary, library, const char *, symbol);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetAttribute, CUresult, cuKernelGetAttribute, int *, pi, CUfunction_attribute, attrib, CUkernel, kernel, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetAttribute, CUresult, cuKernelSetAttribute, CUfunction_attribute, attrib, int, val, CUkernel, kernel, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetCacheConfig, CUresult, cuKernelSetCacheConfig, CUkernel, kernel, CUfunc_cache, config, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetName, CUresult, cuKernelGetName, const char **, name, CUkernel, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetParamInfo, CUresult, cuKernelGetParamInfo, CUkernel, kernel, size_t, paramIndex, size_t *, paramOffset, size_t *, paramSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetInfo_v2, CUresult, cuMemGetInfo_v2, size_t *, free, size_t *, total);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAlloc_v2, CUresult, cuMemAlloc_v2, CUdeviceptr *, dptr, size_t, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocPitch_v2, CUresult, cuMemAllocPitch_v2, CUdeviceptr *, dptr, size_t *, pPitch, size_t, WidthInBytes, size_t, Height, unsigned int, ElementSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFree_v2, CUresult, cuMemFree_v2, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange_v2, CUresult, cuMemGetAddressRange_v2, CUdeviceptr *, pbase, size_t *, psize, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost_v2, CUresult, cuMemAllocHost_v2, void **, pp, size_t, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeHost, CUresult, cuMemFreeHost, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostAlloc, CUresult, cuMemHostAlloc, void **, pp, size_t, bytesize, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostGetDevicePointer_v2, CUresult, cuMemHostGetDevicePointer_v2, CUdeviceptr *, pdptr, void *, p, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostGetFlags, CUresult, cuMemHostGetFlags, unsigned int *, pFlags, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocManaged, CUresult, cuMemAllocManaged, CUdeviceptr *, dptr, size_t, bytesize, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceRegisterAsyncNotification, CUresult, cuDeviceRegisterAsyncNotification, CUdevice, device, CUasyncCallback, callbackFunc, void *, userData, CUasyncCallbackHandle *, callback);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceUnregisterAsyncNotification, CUresult, cuDeviceUnregisterAsyncNotification, CUdevice, device, CUasyncCallbackHandle, callback);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetByPCIBusId, CUresult, cuDeviceGetByPCIBusId, CUdevice *, dev, const char *, pciBusId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetPCIBusId, CUresult, cuDeviceGetPCIBusId, char *, pciBusId, int, len, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetEventHandle, CUresult, cuIpcGetEventHandle, CUipcEventHandle *, pHandle, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenEventHandle, CUresult, cuIpcOpenEventHandle, CUevent *, phEvent, CUipcEventHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetMemHandle, CUresult, cuIpcGetMemHandle, CUipcMemHandle *, pHandle, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenMemHandle_v2, CUresult, cuIpcOpenMemHandle_v2, CUdeviceptr *, pdptr, CUipcMemHandle, handle, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcCloseMemHandle, CUresult, cuIpcCloseMemHandle, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostRegister_v2, CUresult, cuMemHostRegister_v2, void *, p, size_t, bytesize, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostUnregister, CUresult, cuMemHostUnregister, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy_ptds, CUresult, cuMemcpy_ptds, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeer_ptds, CUresult, cuMemcpyPeer_ptds, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoD_v2_ptds, CUresult, cuMemcpyHtoD_v2_ptds, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoH_v2_ptds, CUresult, cuMemcpyDtoH_v2_ptds, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoD_v2_ptds, CUresult, cuMemcpyDtoD_v2_ptds, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoA_v2_ptds, CUresult, cuMemcpyDtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoD_v2_ptds, CUresult, cuMemcpyAtoD_v2_ptds, CUdeviceptr, dstDevice, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoA_v2_ptds, CUresult, cuMemcpyHtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoH_v2_ptds, CUresult, cuMemcpyAtoH_v2_ptds, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoA_v2_ptds, CUresult, cuMemcpyAtoA_v2_ptds, CUarray, dstArray, size_t, dstOffset, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2D_v2_ptds, CUresult, cuMemcpy2D_v2_ptds, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DUnaligned_v2_ptds, CUresult, cuMemcpy2DUnaligned_v2_ptds, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3D_v2_ptds, CUresult, cuMemcpy3D_v2_ptds, const CUDA_MEMCPY3D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeer_ptds, CUresult, cuMemcpy3DPeer_ptds, const CUDA_MEMCPY3D_PEER *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAsync_ptsz, CUresult, cuMemcpyAsync_ptsz, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeerAsync_ptsz, CUresult, cuMemcpyPeerAsync_ptsz, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoDAsync_v2_ptsz, CUresult, cuMemcpyHtoDAsync_v2_ptsz, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoHAsync_v2_ptsz, CUresult, cuMemcpyDtoHAsync_v2_ptsz, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoDAsync_v2_ptsz, CUresult, cuMemcpyDtoDAsync_v2_ptsz, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoAAsync_v2_ptsz, CUresult, cuMemcpyHtoAAsync_v2_ptsz, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoHAsync_v2_ptsz, CUresult, cuMemcpyAtoHAsync_v2_ptsz, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DAsync_v2_ptsz, CUresult, cuMemcpy2DAsync_v2_ptsz, const CUDA_MEMCPY2D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DAsync_v2_ptsz, CUresult, cuMemcpy3DAsync_v2_ptsz, const CUDA_MEMCPY3D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeerAsync_ptsz, CUresult, cuMemcpy3DPeerAsync_ptsz, const CUDA_MEMCPY3D_PEER *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyBatchAsync_ptsz, CUresult, cuMemcpyBatchAsync_ptsz, CUdeviceptr *, dsts, CUdeviceptr *, srcs, size_t *, sizes, size_t, count, CUmemcpyAttributes *, attrs, size_t *, attrsIdxs, size_t, numAttrs, size_t *, failIdx, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DBatchAsync_ptsz, CUresult, cuMemcpy3DBatchAsync_ptsz, size_t, numOps, CUDA_MEMCPY3D_BATCH_OP *, opList, size_t *, failIdx, unsigned long long, flags, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8_v2_ptds, CUresult, cuMemsetD8_v2_ptds, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16_v2_ptds, CUresult, cuMemsetD16_v2_ptds, CUdeviceptr, dstDevice, unsigned short, us, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32_v2_ptds, CUresult, cuMemsetD32_v2_ptds, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8_v2_ptds, CUresult, cuMemsetD2D8_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16_v2_ptds, CUresult, cuMemsetD2D16_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32_v2_ptds, CUresult, cuMemsetD2D32_v2_ptds, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8Async_ptsz, CUresult, cuMemsetD8Async_ptsz, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16Async_ptsz, CUresult, cuMemsetD16Async_ptsz, CUdeviceptr, dstDevice, unsigned short, us, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32Async_ptsz, CUresult, cuMemsetD32Async_ptsz, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8Async_ptsz, CUresult, cuMemsetD2D8Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16Async_ptsz, CUresult, cuMemsetD2D16Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32Async_ptsz, CUresult, cuMemsetD2D32Async_ptsz, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreate_v2, CUresult, cuArrayCreate_v2, CUarray *, pHandle, const CUDA_ARRAY_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetDescriptor_v2, CUresult, cuArrayGetDescriptor_v2, CUDA_ARRAY_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetSparseProperties, CUresult, cuArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUarray, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetSparseProperties, CUresult, cuMipmappedArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUmipmappedArray, mipmap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetMemoryRequirements, CUresult, cuArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUarray, array, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetMemoryRequirements, CUresult, cuMipmappedArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUmipmappedArray, mipmap, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetPlane, CUresult, cuArrayGetPlane, CUarray *, pPlaneArray, CUarray, hArray, unsigned int, planeIdx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayDestroy, CUresult, cuArrayDestroy, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DCreate_v2, CUresult, cuArray3DCreate_v2, CUarray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DGetDescriptor_v2, CUresult, cuArray3DGetDescriptor_v2, CUDA_ARRAY3D_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayCreate, CUresult, cuMipmappedArrayCreate, CUmipmappedArray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pMipmappedArrayDesc, unsigned int, numMipmapLevels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetLevel, CUresult, cuMipmappedArrayGetLevel, CUarray *, pLevelArray, CUmipmappedArray, hMipmappedArray, unsigned int, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayDestroy, CUresult, cuMipmappedArrayDestroy, CUmipmappedArray, hMipmappedArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetHandleForAddressRange, CUresult, cuMemGetHandleForAddressRange, void *, handle, CUdeviceptr, dptr, size_t, size, CUmemRangeHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemBatchDecompressAsync_ptsz, CUresult, cuMemBatchDecompressAsync_ptsz, CUmemDecompressParams *, paramsArray, size_t, count, unsigned int, flags, size_t *, errorIndex, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressReserve, CUresult, cuMemAddressReserve, CUdeviceptr *, ptr, size_t, size, size_t, alignment, CUdeviceptr, addr, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressFree, CUresult, cuMemAddressFree, CUdeviceptr, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemCreate, CUresult, cuMemCreate, CUmemGenericAllocationHandle *, handle, size_t, size, const CUmemAllocationProp *, prop, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRelease, CUresult, cuMemRelease, CUmemGenericAllocationHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMap, CUresult, cuMemMap, CUdeviceptr, ptr, size_t, size, size_t, offset, CUmemGenericAllocationHandle, handle, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMapArrayAsync_ptsz, CUresult, cuMemMapArrayAsync_ptsz, CUarrayMapInfo *, mapInfoList, unsigned int, count, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemUnmap, CUresult, cuMemUnmap, CUdeviceptr, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemSetAccess, CUresult, cuMemSetAccess, CUdeviceptr, ptr, size_t, size, const CUmemAccessDesc *, desc, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAccess, CUresult, cuMemGetAccess, unsigned long long *, flags, const CUmemLocation *, location, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemExportToShareableHandle, CUresult, cuMemExportToShareableHandle, void *, shareableHandle, CUmemGenericAllocationHandle, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemImportFromShareableHandle, CUresult, cuMemImportFromShareableHandle, CUmemGenericAllocationHandle *, handle, void *, osHandle, CUmemAllocationHandleType, shHandleType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationGranularity, CUresult, cuMemGetAllocationGranularity, size_t *, granularity, const CUmemAllocationProp *, prop, CUmemAllocationGranularity_flags, option);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationPropertiesFromHandle, CUresult, cuMemGetAllocationPropertiesFromHandle, CUmemAllocationProp *, prop, CUmemGenericAllocationHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRetainAllocationHandle, CUresult, cuMemRetainAllocationHandle, CUmemGenericAllocationHandle *, handle, void *, addr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeAsync_ptsz, CUresult, cuMemFreeAsync_ptsz, CUdeviceptr, dptr, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocAsync_ptsz, CUresult, cuMemAllocAsync_ptsz, CUdeviceptr *, dptr, size_t, bytesize, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolTrimTo, CUresult, cuMemPoolTrimTo, CUmemoryPool, pool, size_t, minBytesToKeep);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAttribute, CUresult, cuMemPoolSetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAttribute, CUresult, cuMemPoolGetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAccess, CUresult, cuMemPoolSetAccess, CUmemoryPool, pool, const CUmemAccessDesc *, map, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAccess, CUresult, cuMemPoolGetAccess, CUmemAccess_flags *, flags, CUmemoryPool, memPool, CUmemLocation *, location);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolCreate, CUresult, cuMemPoolCreate, CUmemoryPool *, pool, const CUmemPoolProps *, poolProps);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolDestroy, CUresult, cuMemPoolDestroy, CUmemoryPool, pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocFromPoolAsync_ptsz, CUresult, cuMemAllocFromPoolAsync_ptsz, CUdeviceptr *, dptr, size_t, bytesize, CUmemoryPool, pool, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportToShareableHandle, CUresult, cuMemPoolExportToShareableHandle, void *, handle_out, CUmemoryPool, pool, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportFromShareableHandle, CUresult, cuMemPoolImportFromShareableHandle, CUmemoryPool *, pool_out, void *, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportPointer, CUresult, cuMemPoolExportPointer, CUmemPoolPtrExportData *, shareData_out, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportPointer, CUresult, cuMemPoolImportPointer, CUdeviceptr *, ptr_out, CUmemoryPool, pool, CUmemPoolPtrExportData *, shareData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastCreate, CUresult, cuMulticastCreate, CUmemGenericAllocationHandle *, mcHandle, const CUmulticastObjectProp *, prop);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastAddDevice, CUresult, cuMulticastAddDevice, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastBindMem, CUresult, cuMulticastBindMem, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUmemGenericAllocationHandle, memHandle, size_t, memOffset, size_t, size, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastBindAddr, CUresult, cuMulticastBindAddr, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUdeviceptr, memptr, size_t, size, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastUnbind, CUresult, cuMulticastUnbind, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev, size_t, mcOffset, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastGetGranularity, CUresult, cuMulticastGetGranularity, size_t *, granularity, const CUmulticastObjectProp *, prop, CUmulticastGranularity_flags, option);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttribute, CUresult, cuPointerGetAttribute, void *, data, CUpointer_attribute, attribute, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync_ptsz, CUresult, cuMemPrefetchAsync_ptsz, CUdeviceptr, devPtr, size_t, count, CUdevice, dstDevice, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync_v2_ptsz, CUresult, cuMemPrefetchAsync_v2_ptsz, CUdeviceptr, devPtr, size_t, count, CUmemLocation, location, unsigned int, flags, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAdvise, CUresult, cuMemAdvise, CUdeviceptr, devPtr, size_t, count, CUmem_advise, advice, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAdvise_v2, CUresult, cuMemAdvise_v2, CUdeviceptr, devPtr, size_t, count, CUmem_advise, advice, CUmemLocation, location);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttribute, CUresult, cuMemRangeGetAttribute, void *, data, size_t, dataSize, CUmem_range_attribute, attribute, CUdeviceptr, devPtr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttributes, CUresult, cuMemRangeGetAttributes, void **, data, size_t *, dataSizes, CUmem_range_attribute *, attributes, size_t, numAttributes, CUdeviceptr, devPtr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerSetAttribute, CUresult, cuPointerSetAttribute, const void *, value, CUpointer_attribute, attribute, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttributes, CUresult, cuPointerGetAttributes, unsigned int, numAttributes, CUpointer_attribute *, attributes, void **, data, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreate, CUresult, cuStreamCreate, CUstream *, phStream, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreateWithPriority, CUresult, cuStreamCreateWithPriority, CUstream *, phStream, unsigned int, flags, int, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetPriority_ptsz, CUresult, cuStreamGetPriority_ptsz, CUstream, hStream, int *, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetDevice_ptsz, CUresult, cuStreamGetDevice_ptsz, CUstream, hStream, CUdevice *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetFlags_ptsz, CUresult, cuStreamGetFlags_ptsz, CUstream, hStream, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetId_ptsz, CUresult, cuStreamGetId_ptsz, CUstream, hStream, unsigned long long *, streamId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCtx_ptsz, CUresult, cuStreamGetCtx_ptsz, CUstream, hStream, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCtx_v2_ptsz, CUresult, cuStreamGetCtx_v2_ptsz, CUstream, hStream, CUcontext *, pCtx, CUgreenCtx *, pGreenCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitEvent_ptsz, CUresult, cuStreamWaitEvent_ptsz, CUstream, hStream, CUevent, hEvent, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAddCallback_ptsz, CUresult, cuStreamAddCallback_ptsz, CUstream, hStream, CUstreamCallback, callback, void *, userData, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture_v2_ptsz, CUresult, cuStreamBeginCapture_v2_ptsz, CUstream, hStream, CUstreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCaptureToGraph_ptsz, CUresult, cuStreamBeginCaptureToGraph_ptsz, CUstream, hStream, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUstreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ThreadExchangeStreamCaptureMode, CUresult, cuThreadExchangeStreamCaptureMode, CUstreamCaptureMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamEndCapture_ptsz, CUresult, cuStreamEndCapture_ptsz, CUstream, hStream, CUgraph *, phGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamIsCapturing_ptsz, CUresult, cuStreamIsCapturing_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v2_ptsz, CUresult, cuStreamGetCaptureInfo_v2_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v3_ptsz, CUresult, cuStreamGetCaptureInfo_v3_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, const CUgraphEdgeData **, edgeData_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies_ptsz, CUresult, cuStreamUpdateCaptureDependencies_ptsz, CUstream, hStream, CUgraphNode *, dependencies, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies_v2_ptsz, CUresult, cuStreamUpdateCaptureDependencies_v2_ptsz, CUstream, hStream, CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAttachMemAsync_ptsz, CUresult, cuStreamAttachMemAsync_ptsz, CUstream, hStream, CUdeviceptr, dptr, size_t, length, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamQuery_ptsz, CUresult, cuStreamQuery_ptsz, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamSynchronize_ptsz, CUresult, cuStreamSynchronize_ptsz, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamDestroy_v2, CUresult, cuStreamDestroy_v2, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamCopyAttributes_ptsz, CUresult, cuStreamCopyAttributes_ptsz, CUstream, dst, CUstream, src);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetAttribute_ptsz, CUresult, cuStreamGetAttribute_ptsz, CUstream, hStream, CUstreamAttrID, attr, CUstreamAttrValue *, value_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamSetAttribute_ptsz, CUresult, cuStreamSetAttribute_ptsz, CUstream, hStream, CUstreamAttrID, attr, const CUstreamAttrValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, CUresult, cuEventCreate, CUevent *, phEvent, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventRecord_ptsz, CUresult, cuEventRecord_ptsz, CUevent, hEvent, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventRecordWithFlags_ptsz, CUresult, cuEventRecordWithFlags_ptsz, CUevent, hEvent, CUstream, hStream, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventQuery, CUresult, cuEventQuery, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventSynchronize, CUresult, cuEventSynchronize, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy_v2, CUresult, cuEventDestroy_v2, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventElapsedTime, CUresult, cuEventElapsedTime, float *, pMilliseconds, CUevent, hStart, CUevent, hEnd);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventElapsedTime_v2, CUresult, cuEventElapsedTime_v2, float *, pMilliseconds, CUevent, hStart, CUevent, hEnd);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalMemory, CUresult, cuImportExternalMemory, CUexternalMemory *, extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC *, memHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExternalMemoryGetMappedBuffer, CUresult, cuExternalMemoryGetMappedBuffer, CUdeviceptr *, devPtr, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC *, bufferDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExternalMemoryGetMappedMipmappedArray, CUresult, cuExternalMemoryGetMappedMipmappedArray, CUmipmappedArray *, mipmap, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC *, mipmapDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalMemory, CUresult, cuDestroyExternalMemory, CUexternalMemory, extMem);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalSemaphore, CUresult, cuImportExternalSemaphore, CUexternalSemaphore *, extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC *, semHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SignalExternalSemaphoresAsync_ptsz, CUresult, cuSignalExternalSemaphoresAsync_ptsz, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WaitExternalSemaphoresAsync_ptsz, CUresult, cuWaitExternalSemaphoresAsync_ptsz, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalSemaphore, CUresult, cuDestroyExternalSemaphore, CUexternalSemaphore, extSem);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32_v2_ptsz, CUresult, cuStreamWaitValue32_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64_v2_ptsz, CUresult, cuStreamWaitValue64_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32_v2_ptsz, CUresult, cuStreamWriteValue32_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64_v2_ptsz, CUresult, cuStreamWriteValue64_v2_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBatchMemOp_v2_ptsz, CUresult, cuStreamBatchMemOp_v2_ptsz, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetAttribute, CUresult, cuFuncGetAttribute, int *, pi, CUfunction_attribute, attrib, CUfunction, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetAttribute, CUresult, cuFuncSetAttribute, CUfunction, hfunc, CUfunction_attribute, attrib, int, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetCacheConfig, CUresult, cuFuncSetCacheConfig, CUfunction, hfunc, CUfunc_cache, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetModule, CUresult, cuFuncGetModule, CUmodule *, hmod, CUfunction, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetName, CUresult, cuFuncGetName, const char **, name, CUfunction, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetParamInfo, CUresult, cuFuncGetParamInfo, CUfunction, func, size_t, paramIndex, size_t *, paramOffset, size_t *, paramSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncIsLoaded, CUresult, cuFuncIsLoaded, CUfunctionLoadingState *, state, CUfunction, function);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncLoad, CUresult, cuFuncLoad, CUfunction, function);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchKernel_ptsz, CUresult, cuLaunchKernel_ptsz, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchKernelEx_ptsz, CUresult, cuLaunchKernelEx_ptsz, const CUlaunchConfig *, config, CUfunction, f, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernel_ptsz, CUresult, cuLaunchCooperativeKernel_ptsz, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernelMultiDevice, CUresult, cuLaunchCooperativeKernelMultiDevice, CUDA_LAUNCH_PARAMS *, launchParamsList, unsigned int, numDevices, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchHostFunc_ptsz, CUresult, cuLaunchHostFunc_ptsz, CUstream, hStream, CUhostFn, fn, void *, userData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetBlockShape, CUresult, cuFuncSetBlockShape, CUfunction, hfunc, int, x, int, y, int, z);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetSharedSize, CUresult, cuFuncSetSharedSize, CUfunction, hfunc, unsigned int, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetSize, CUresult, cuParamSetSize, CUfunction, hfunc, unsigned int, numbytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSeti, CUresult, cuParamSeti, CUfunction, hfunc, int, offset, unsigned int, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetf, CUresult, cuParamSetf, CUfunction, hfunc, int, offset, float, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetv, CUresult, cuParamSetv, CUfunction, hfunc, int, offset, void *, ptr, unsigned int, numbytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Launch, CUresult, cuLaunch, CUfunction, f);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchGrid, CUresult, cuLaunchGrid, CUfunction, f, int, grid_width, int, grid_height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchGridAsync, CUresult, cuLaunchGridAsync, CUfunction, f, int, grid_width, int, grid_height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetTexRef, CUresult, cuParamSetTexRef, CUfunction, hfunc, int, texunit, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetSharedMemConfig, CUresult, cuFuncSetSharedMemConfig, CUfunction, hfunc, CUsharedconfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphCreate, CUresult, cuGraphCreate, CUgraph *, phGraph, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddKernelNode_v2, CUresult, cuGraphAddKernelNode_v2, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetParams_v2, CUresult, cuGraphKernelNodeGetParams_v2, CUgraphNode, hNode, CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetParams_v2, CUresult, cuGraphKernelNodeSetParams_v2, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNode, CUresult, cuGraphAddMemcpyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeGetParams, CUresult, cuGraphMemcpyNodeGetParams, CUgraphNode, hNode, CUDA_MEMCPY3D *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParams, CUresult, cuGraphMemcpyNodeSetParams, CUgraphNode, hNode, const CUDA_MEMCPY3D *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemsetNode, CUresult, cuGraphAddMemsetNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeGetParams, CUresult, cuGraphMemsetNodeGetParams, CUgraphNode, hNode, CUDA_MEMSET_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeSetParams, CUresult, cuGraphMemsetNodeSetParams, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddHostNode, CUresult, cuGraphAddHostNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeGetParams, CUresult, cuGraphHostNodeGetParams, CUgraphNode, hNode, CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeSetParams, CUresult, cuGraphHostNodeSetParams, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddChildGraphNode, CUresult, cuGraphAddChildGraphNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUgraph, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphChildGraphNodeGetGraph, CUresult, cuGraphChildGraphNodeGetGraph, CUgraphNode, hNode, CUgraph *, phGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEmptyNode, CUresult, cuGraphAddEmptyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventRecordNode, CUresult, cuGraphAddEventRecordNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeGetEvent, CUresult, cuGraphEventRecordNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeSetEvent, CUresult, cuGraphEventRecordNodeSetEvent, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventWaitNode, CUresult, cuGraphAddEventWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeGetEvent, CUresult, cuGraphEventWaitNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeSetEvent, CUresult, cuGraphEventWaitNodeSetEvent, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddExternalSemaphoresSignalNode, CUresult, cuGraphAddExternalSemaphoresSignalNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresSignalNodeGetParams, CUresult, cuGraphExternalSemaphoresSignalNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresSignalNodeSetParams, CUresult, cuGraphExternalSemaphoresSignalNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddExternalSemaphoresWaitNode, CUresult, cuGraphAddExternalSemaphoresWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresWaitNodeGetParams, CUresult, cuGraphExternalSemaphoresWaitNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresWaitNodeSetParams, CUresult, cuGraphExternalSemaphoresWaitNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddBatchMemOpNode, CUresult, cuGraphAddBatchMemOpNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphBatchMemOpNodeGetParams, CUresult, cuGraphBatchMemOpNodeGetParams, CUgraphNode, hNode, CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphBatchMemOpNodeSetParams, CUresult, cuGraphBatchMemOpNodeSetParams, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecBatchMemOpNodeSetParams, CUresult, cuGraphExecBatchMemOpNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemAllocNode, CUresult, cuGraphAddMemAllocNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemAllocNodeGetParams, CUresult, cuGraphMemAllocNodeGetParams, CUgraphNode, hNode, CUDA_MEM_ALLOC_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemFreeNode, CUresult, cuGraphAddMemFreeNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemFreeNodeGetParams, CUresult, cuGraphMemFreeNodeGetParams, CUgraphNode, hNode, CUdeviceptr *, dptr_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGraphMemTrim, CUresult, cuDeviceGraphMemTrim, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetGraphMemAttribute, CUresult, cuDeviceGetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetGraphMemAttribute, CUresult, cuDeviceSetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphClone, CUresult, cuGraphClone, CUgraph *, phGraphClone, CUgraph, originalGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeFindInClone, CUresult, cuGraphNodeFindInClone, CUgraphNode *, phNode, CUgraphNode, hOriginalNode, CUgraph, hClonedGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetType, CUresult, cuGraphNodeGetType, CUgraphNode, hNode, CUgraphNodeType *, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetNodes, CUresult, cuGraphGetNodes, CUgraph, hGraph, CUgraphNode *, nodes, size_t *, numNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetRootNodes, CUresult, cuGraphGetRootNodes, CUgraph, hGraph, CUgraphNode *, rootNodes, size_t *, numRootNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetEdges, CUresult, cuGraphGetEdges, CUgraph, hGraph, CUgraphNode *, from, CUgraphNode *, to, size_t *, numEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetEdges_v2, CUresult, cuGraphGetEdges_v2, CUgraph, hGraph, CUgraphNode *, from, CUgraphNode *, to, CUgraphEdgeData *, edgeData, size_t *, numEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependencies, CUresult, cuGraphNodeGetDependencies, CUgraphNode, hNode, CUgraphNode *, dependencies, size_t *, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependencies_v2, CUresult, cuGraphNodeGetDependencies_v2, CUgraphNode, hNode, CUgraphNode *, dependencies, CUgraphEdgeData *, edgeData, size_t *, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependentNodes, CUresult, cuGraphNodeGetDependentNodes, CUgraphNode, hNode, CUgraphNode *, dependentNodes, size_t *, numDependentNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependentNodes_v2, CUresult, cuGraphNodeGetDependentNodes_v2, CUgraphNode, hNode, CUgraphNode *, dependentNodes, CUgraphEdgeData *, edgeData, size_t *, numDependentNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddDependencies, CUresult, cuGraphAddDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddDependencies_v2, CUresult, cuGraphAddDependencies_v2, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, const CUgraphEdgeData *, edgeData, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRemoveDependencies, CUresult, cuGraphRemoveDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRemoveDependencies_v2, CUresult, cuGraphRemoveDependencies_v2, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, const CUgraphEdgeData *, edgeData, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroyNode, CUresult, cuGraphDestroyNode, CUgraphNode, hNode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithFlags, CUresult, cuGraphInstantiateWithFlags, CUgraphExec *, phGraphExec, CUgraph, hGraph, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithParams_ptsz, CUresult, cuGraphInstantiateWithParams_ptsz, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS *, instantiateParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecGetFlags, CUresult, cuGraphExecGetFlags, CUgraphExec, hGraphExec, cuuint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecKernelNodeSetParams_v2, CUresult, cuGraphExecKernelNodeSetParams_v2, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParams, CUresult, cuGraphExecMemcpyNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemsetNodeSetParams, CUresult, cuGraphExecMemsetNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecHostNodeSetParams, CUresult, cuGraphExecHostNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecChildGraphNodeSetParams, CUresult, cuGraphExecChildGraphNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUgraph, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventRecordNodeSetEvent, CUresult, cuGraphExecEventRecordNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventWaitNodeSetEvent, CUresult, cuGraphExecEventWaitNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecExternalSemaphoresSignalNodeSetParams, CUresult, cuGraphExecExternalSemaphoresSignalNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecExternalSemaphoresWaitNodeSetParams, CUresult, cuGraphExecExternalSemaphoresWaitNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeSetEnabled, CUresult, cuGraphNodeSetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetEnabled, CUresult, cuGraphNodeGetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int *, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphUpload_ptsz, CUresult, cuGraphUpload_ptsz, CUgraphExec, hGraphExec, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphLaunch_ptsz, CUresult, cuGraphLaunch_ptsz, CUgraphExec, hGraphExec, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecDestroy, CUresult, cuGraphExecDestroy, CUgraphExec, hGraphExec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroy, CUresult, cuGraphDestroy, CUgraph, hGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecUpdate_v2, CUresult, cuGraphExecUpdate_v2, CUgraphExec, hGraphExec, CUgraph, hGraph, CUgraphExecUpdateResultInfo *, resultInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeCopyAttributes, CUresult, cuGraphKernelNodeCopyAttributes, CUgraphNode, dst, CUgraphNode, src);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetAttribute, CUresult, cuGraphKernelNodeGetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, CUkernelNodeAttrValue *, value_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetAttribute, CUresult, cuGraphKernelNodeSetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, const CUkernelNodeAttrValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDebugDotPrint, CUresult, cuGraphDebugDotPrint, CUgraph, hGraph, const char *, path, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectCreate, CUresult, cuUserObjectCreate, CUuserObject *, object_out, void *, ptr, CUhostFn, destroy, unsigned int, initialRefcount, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRetain, CUresult, cuUserObjectRetain, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRelease, CUresult, cuUserObjectRelease, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRetainUserObject, CUresult, cuGraphRetainUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphReleaseUserObject, CUresult, cuGraphReleaseUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddNode, CUresult, cuGraphAddNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUgraphNodeParams *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddNode_v2, CUresult, cuGraphAddNode_v2, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUgraphNodeParams *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeSetParams, CUresult, cuGraphNodeSetParams, CUgraphNode, hNode, CUgraphNodeParams *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecNodeSetParams, CUresult, cuGraphExecNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUgraphNodeParams *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphConditionalHandleCreate, CUresult, cuGraphConditionalHandleCreate, CUgraphConditionalHandle *, pHandle_out, CUgraph, hGraph, CUcontext, ctx, unsigned int, defaultLaunchValue, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessor, CUresult, cuOccupancyMaxActiveBlocksPerMultiprocessor, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessorWithFlags, CUresult, cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialBlockSize, CUresult, cuOccupancyMaxPotentialBlockSize, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialBlockSizeWithFlags, CUresult, cuOccupancyMaxPotentialBlockSizeWithFlags, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyAvailableDynamicSMemPerBlock, CUresult, cuOccupancyAvailableDynamicSMemPerBlock, size_t *, dynamicSmemSize, CUfunction, func, int, numBlocks, int, blockSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialClusterSize, CUresult, cuOccupancyMaxPotentialClusterSize, int *, clusterSize, CUfunction, func, const CUlaunchConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveClusters, CUresult, cuOccupancyMaxActiveClusters, int *, numClusters, CUfunction, func, const CUlaunchConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetArray, CUresult, cuTexRefSetArray, CUtexref, hTexRef, CUarray, hArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmappedArray, CUresult, cuTexRefSetMipmappedArray, CUtexref, hTexRef, CUmipmappedArray, hMipmappedArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress_v2, CUresult, cuTexRefSetAddress_v2, size_t *, ByteOffset, CUtexref, hTexRef, CUdeviceptr, dptr, size_t, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress2D_v3, CUresult, cuTexRefSetAddress2D_v3, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR *, desc, CUdeviceptr, dptr, size_t, Pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFormat, CUresult, cuTexRefSetFormat, CUtexref, hTexRef, CUarray_format, fmt, int, NumPackedComponents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddressMode, CUresult, cuTexRefSetAddressMode, CUtexref, hTexRef, int, dim, CUaddress_mode, am);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFilterMode, CUresult, cuTexRefSetFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapFilterMode, CUresult, cuTexRefSetMipmapFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelBias, CUresult, cuTexRefSetMipmapLevelBias, CUtexref, hTexRef, float, bias);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelClamp, CUresult, cuTexRefSetMipmapLevelClamp, CUtexref, hTexRef, float, minMipmapLevelClamp, float, maxMipmapLevelClamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMaxAnisotropy, CUresult, cuTexRefSetMaxAnisotropy, CUtexref, hTexRef, unsigned int, maxAniso);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetBorderColor, CUresult, cuTexRefSetBorderColor, CUtexref, hTexRef, float *, pBorderColor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFlags, CUresult, cuTexRefSetFlags, CUtexref, hTexRef, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddress_v2, CUresult, cuTexRefGetAddress_v2, CUdeviceptr *, pdptr, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetArray, CUresult, cuTexRefGetArray, CUarray *, phArray, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmappedArray, CUresult, cuTexRefGetMipmappedArray, CUmipmappedArray *, phMipmappedArray, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddressMode, CUresult, cuTexRefGetAddressMode, CUaddress_mode *, pam, CUtexref, hTexRef, int, dim);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFilterMode, CUresult, cuTexRefGetFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFormat, CUresult, cuTexRefGetFormat, CUarray_format *, pFormat, int *, pNumChannels, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapFilterMode, CUresult, cuTexRefGetMipmapFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelBias, CUresult, cuTexRefGetMipmapLevelBias, float *, pbias, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelClamp, CUresult, cuTexRefGetMipmapLevelClamp, float *, pminMipmapLevelClamp, float *, pmaxMipmapLevelClamp, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMaxAnisotropy, CUresult, cuTexRefGetMaxAnisotropy, int *, pmaxAniso, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetBorderColor, CUresult, cuTexRefGetBorderColor, float *, pBorderColor, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFlags, CUresult, cuTexRefGetFlags, unsigned int *, pFlags, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefCreate, CUresult, cuTexRefCreate, CUtexref *, pTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefDestroy, CUresult, cuTexRefDestroy, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfRefSetArray, CUresult, cuSurfRefSetArray, CUsurfref, hSurfRef, CUarray, hArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfRefGetArray, CUresult, cuSurfRefGetArray, CUarray *, phArray, CUsurfref, hSurfRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectCreate, CUresult, cuTexObjectCreate, CUtexObject *, pTexObject, const CUDA_RESOURCE_DESC *, pResDesc, const CUDA_TEXTURE_DESC *, pTexDesc, const CUDA_RESOURCE_VIEW_DESC *, pResViewDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectDestroy, CUresult, cuTexObjectDestroy, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceDesc, CUresult, cuTexObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetTextureDesc, CUresult, cuTexObjectGetTextureDesc, CUDA_TEXTURE_DESC *, pTexDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceViewDesc, CUresult, cuTexObjectGetResourceViewDesc, CUDA_RESOURCE_VIEW_DESC *, pResViewDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectCreate, CUresult, cuSurfObjectCreate, CUsurfObject *, pSurfObject, const CUDA_RESOURCE_DESC *, pResDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectDestroy, CUresult, cuSurfObjectDestroy, CUsurfObject, surfObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectGetResourceDesc, CUresult, cuSurfObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUsurfObject, surfObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapEncodeTiled, CUresult, cuTensorMapEncodeTiled, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const cuuint32_t *, boxDim, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapEncodeIm2col, CUresult, cuTensorMapEncodeIm2col, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const int *, pixelBoxLowerCorner, const int *, pixelBoxUpperCorner, cuuint32_t, channelsPerPixel, cuuint32_t, pixelsPerColumn, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapEncodeIm2colWide, CUresult, cuTensorMapEncodeIm2colWide, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, int, pixelBoxLowerCornerWidth, int, pixelBoxUpperCornerWidth, cuuint32_t, channelsPerPixel, cuuint32_t, pixelsPerColumn, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapIm2ColWideMode, mode, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapReplaceAddress, CUresult, cuTensorMapReplaceAddress, CUtensorMap *, tensorMap, void *, globalAddress);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceCanAccessPeer, CUresult, cuDeviceCanAccessPeer, int *, canAccessPeer, CUdevice, dev, CUdevice, peerDev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxEnablePeerAccess, CUresult, cuCtxEnablePeerAccess, CUcontext, peerContext, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDisablePeerAccess, CUresult, cuCtxDisablePeerAccess, CUcontext, peerContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetP2PAttribute, CUresult, cuDeviceGetP2PAttribute, int *, value, CUdevice_P2PAttribute, attrib, CUdevice, srcDevice, CUdevice, dstDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnregisterResource, CUresult, cuGraphicsUnregisterResource, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsSubResourceGetMappedArray, CUresult, cuGraphicsSubResourceGetMappedArray, CUarray *, pArray, CUgraphicsResource, resource, unsigned int, arrayIndex, unsigned int, mipLevel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedMipmappedArray, CUresult, cuGraphicsResourceGetMappedMipmappedArray, CUmipmappedArray *, pMipmappedArray, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedPointer_v2, CUresult, cuGraphicsResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, size_t *, pSize, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceSetMapFlags_v2, CUresult, cuGraphicsResourceSetMapFlags_v2, CUgraphicsResource, resource, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsMapResources_ptsz, CUresult, cuGraphicsMapResources_ptsz, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnmapResources_ptsz, CUresult, cuGraphicsUnmapResources_ptsz, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XGetProcAddress_v2, CUresult, cuGetProcAddress_v2, const char *, symbol, void **, pfn, int, cudaVersion, cuuint64_t, flags, CUdriverProcAddressQueryResult *, symbolStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpGetAttribute, CUresult, cuCoredumpGetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpGetAttributeGlobal, CUresult, cuCoredumpGetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpSetAttribute, CUresult, cuCoredumpSetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpSetAttributeGlobal, CUresult, cuCoredumpSetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetExportTable, CUresult, cuGetExportTable, const void **, ppExportTable, const CUuuid *, pExportTableId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxCreate, CUresult, cuGreenCtxCreate, CUgreenCtx *, phCtx, CUdevResourceDesc, desc, CUdevice, dev, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxDestroy, CUresult, cuGreenCtxDestroy, CUgreenCtx, hCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxFromGreenCtx, CUresult, cuCtxFromGreenCtx, CUcontext *, pContext, CUgreenCtx, hCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetDevResource, CUresult, cuDeviceGetDevResource, CUdevice, device, CUdevResource *, resource, CUdevResourceType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetDevResource, CUresult, cuCtxGetDevResource, CUcontext, hCtx, CUdevResource *, resource, CUdevResourceType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxGetDevResource, CUresult, cuGreenCtxGetDevResource, CUgreenCtx, hCtx, CUdevResource *, resource, CUdevResourceType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevSmResourceSplitByCount, CUresult, cuDevSmResourceSplitByCount, CUdevResource *, result, unsigned int *, nbGroups, const CUdevResource *, input, CUdevResource *, remaining, unsigned int, useFlags, unsigned int, minCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevResourceGenerateDesc, CUresult, cuDevResourceGenerateDesc, CUdevResourceDesc *, phDesc, CUdevResource *, resources, unsigned int, nbResources);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxRecordEvent, CUresult, cuGreenCtxRecordEvent, CUgreenCtx, hCtx, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxWaitEvent, CUresult, cuGreenCtxWaitEvent, CUgreenCtx, hCtx, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetGreenCtx, CUresult, cuStreamGetGreenCtx, CUstream, hStream, CUgreenCtx *, phCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GreenCtxStreamCreate, CUresult, cuGreenCtxStreamCreate, CUstream *, phStream, CUgreenCtx, greenCtx, unsigned int, flags, int, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LogsRegisterCallback, CUresult, cuLogsRegisterCallback, CUlogsCallback, callbackFunc, void *, userData, CUlogsCallbackHandle *, callback_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LogsUnregisterCallback, CUresult, cuLogsUnregisterCallback, CUlogsCallbackHandle, callback);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LogsCurrent, CUresult, cuLogsCurrent, CUlogIterator *, iterator_out, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LogsDumpToFile, CUresult, cuLogsDumpToFile, CUlogIterator *, iterator, const char *, pathToFile, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LogsDumpToMemory, CUresult, cuLogsDumpToMemory, CUlogIterator *, iterator, char *, buffer, size_t *, size, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostRegister, CUresult, cuMemHostRegister, void *, p, size_t, bytesize, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceSetMapFlags, CUresult, cuGraphicsResourceSetMapFlags, CUgraphicsResource, resource, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkCreate, CUresult, cuLinkCreate, unsigned int, numOptions, CUjit_option *, options, void **, optionValues, CUlinkState *, stateOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddData, CUresult, cuLinkAddData, CUlinkState, state, CUjitInputType, type, void *, data, size_t, size, const char *, name, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddFile, CUresult, cuLinkAddFile, CUlinkState, state, CUjitInputType, type, const char *, path, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress2D_v2, CUresult, cuTexRefSetAddress2D_v2, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR *, desc, CUdeviceptr, dptr, size_t, Pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceTotalMem, CUresult, cuDeviceTotalMem, unsigned int *, bytes, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate, CUresult, cuCtxCreate, CUcontext *, pctx, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobal, CUresult, cuModuleGetGlobal, CUdeviceptr_v1 *, dptr, unsigned int *, bytes, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetInfo, CUresult, cuMemGetInfo, unsigned int *, free, unsigned int *, total);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAlloc, CUresult, cuMemAlloc, CUdeviceptr_v1 *, dptr, unsigned int, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocPitch, CUresult, cuMemAllocPitch, CUdeviceptr_v1 *, dptr, unsigned int *, pPitch, unsigned int, WidthInBytes, unsigned int, Height, unsigned int, ElementSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFree, CUresult, cuMemFree, CUdeviceptr_v1, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange, CUresult, cuMemGetAddressRange, CUdeviceptr_v1 *, pbase, unsigned int *, psize, CUdeviceptr_v1, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost, CUresult, cuMemAllocHost, void **, pp, unsigned int, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostGetDevicePointer, CUresult, cuMemHostGetDevicePointer, CUdeviceptr_v1 *, pdptr, void *, p, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoD, CUresult, cuMemcpyHtoD, CUdeviceptr_v1, dstDevice, const void *, srcHost, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoH, CUresult, cuMemcpyDtoH, void *, dstHost, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoD, CUresult, cuMemcpyDtoD, CUdeviceptr_v1, dstDevice, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoA, CUresult, cuMemcpyDtoA, CUarray, dstArray, unsigned int, dstOffset, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoD, CUresult, cuMemcpyAtoD, CUdeviceptr_v1, dstDevice, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoA, CUresult, cuMemcpyHtoA, CUarray, dstArray, unsigned int, dstOffset, const void *, srcHost, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoH, CUresult, cuMemcpyAtoH, void *, dstHost, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoA, CUresult, cuMemcpyAtoA, CUarray, dstArray, unsigned int, dstOffset, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoAAsync, CUresult, cuMemcpyHtoAAsync, CUarray, dstArray, unsigned int, dstOffset, const void *, srcHost, unsigned int, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoHAsync, CUresult, cuMemcpyAtoHAsync, void *, dstHost, CUarray, srcArray, unsigned int, srcOffset, unsigned int, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2D, CUresult, cuMemcpy2D, const CUDA_MEMCPY2D_v1 *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DUnaligned, CUresult, cuMemcpy2DUnaligned, const CUDA_MEMCPY2D_v1 *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3D, CUresult, cuMemcpy3D, const CUDA_MEMCPY3D_v1 *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoDAsync, CUresult, cuMemcpyHtoDAsync, CUdeviceptr_v1, dstDevice, const void *, srcHost, unsigned int, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoHAsync, CUresult, cuMemcpyDtoHAsync, void *, dstHost, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoDAsync, CUresult, cuMemcpyDtoDAsync, CUdeviceptr_v1, dstDevice, CUdeviceptr_v1, srcDevice, unsigned int, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DAsync, CUresult, cuMemcpy2DAsync, const CUDA_MEMCPY2D_v1 *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DAsync, CUresult, cuMemcpy3DAsync, const CUDA_MEMCPY3D_v1 *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8, CUresult, cuMemsetD8, CUdeviceptr_v1, dstDevice, unsigned char, uc, unsigned int, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16, CUresult, cuMemsetD16, CUdeviceptr_v1, dstDevice, unsigned short, us, unsigned int, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32, CUresult, cuMemsetD32, CUdeviceptr_v1, dstDevice, unsigned int, ui, unsigned int, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8, CUresult, cuMemsetD2D8, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned char, uc, unsigned int, Width, unsigned int, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16, CUresult, cuMemsetD2D16, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned short, us, unsigned int, Width, unsigned int, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32, CUresult, cuMemsetD2D32, CUdeviceptr_v1, dstDevice, unsigned int, dstPitch, unsigned int, ui, unsigned int, Width, unsigned int, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreate, CUresult, cuArrayCreate, CUarray *, pHandle, const CUDA_ARRAY_DESCRIPTOR_v1 *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetDescriptor, CUresult, cuArrayGetDescriptor, CUDA_ARRAY_DESCRIPTOR_v1 *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DCreate, CUresult, cuArray3DCreate, CUarray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR_v1 *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DGetDescriptor, CUresult, cuArray3DGetDescriptor, CUDA_ARRAY3D_DESCRIPTOR_v1 *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress, CUresult, cuTexRefSetAddress, unsigned int *, ByteOffset, CUtexref, hTexRef, CUdeviceptr_v1, dptr, unsigned int, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress2D, CUresult, cuTexRefSetAddress2D, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR_v1 *, desc, CUdeviceptr_v1, dptr, unsigned int, Pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddress, CUresult, cuTexRefGetAddress, CUdeviceptr_v1 *, pdptr, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedPointer, CUresult, cuGraphicsResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, unsigned int *, pSize, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDestroy, CUresult, cuCtxDestroy, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPopCurrent, CUresult, cuCtxPopCurrent, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPushCurrent, CUresult, cuCtxPushCurrent, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamDestroy, CUresult, cuStreamDestroy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy, CUresult, cuEventDestroy, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRelease, CUresult, cuDevicePrimaryCtxRelease, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxReset, CUresult, cuDevicePrimaryCtxReset, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxSetFlags, CUresult, cuDevicePrimaryCtxSetFlags, CUdevice, dev, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoD_v2, CUresult, cuMemcpyHtoD_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoH_v2, CUresult, cuMemcpyDtoH_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoD_v2, CUresult, cuMemcpyDtoD_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoA_v2, CUresult, cuMemcpyDtoA_v2, CUarray, dstArray, size_t, dstOffset, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoD_v2, CUresult, cuMemcpyAtoD_v2, CUdeviceptr, dstDevice, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoA_v2, CUresult, cuMemcpyHtoA_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoH_v2, CUresult, cuMemcpyAtoH_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoA_v2, CUresult, cuMemcpyAtoA_v2, CUarray, dstArray, size_t, dstOffset, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoAAsync_v2, CUresult, cuMemcpyHtoAAsync_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoHAsync_v2, CUresult, cuMemcpyAtoHAsync_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2D_v2, CUresult, cuMemcpy2D_v2, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DUnaligned_v2, CUresult, cuMemcpy2DUnaligned_v2, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3D_v2, CUresult, cuMemcpy3D_v2, const CUDA_MEMCPY3D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyHtoDAsync_v2, CUresult, cuMemcpyHtoDAsync_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyDtoHAsync_v2, CUresult, cuMemcpyDtoHAsync_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpyDtoDAsync_v2, CUresult, cuMemcpyDtoDAsync_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpy2DAsync_v2, CUresult, cuMemcpy2DAsync_v2, const CUDA_MEMCPY2D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemcpy3DAsync_v2, CUresult, cuMemcpy3DAsync_v2, const CUDA_MEMCPY3D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8_v2, CUresult, cuMemsetD8_v2, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16_v2, CUresult, cuMemsetD16_v2, CUdeviceptr, dstDevice, unsigned short, us, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32_v2, CUresult, cuMemsetD32_v2, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8_v2, CUresult, cuMemsetD2D8_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16_v2, CUresult, cuMemsetD2D16_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32_v2, CUresult, cuMemsetD2D32_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy, CUresult, cuMemcpy, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAsync, CUresult, cuMemcpyAsync, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeer, CUresult, cuMemcpyPeer, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeerAsync, CUresult, cuMemcpyPeerAsync, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeer, CUresult, cuMemcpy3DPeer, const CUDA_MEMCPY3D_PEER *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeerAsync, CUresult, cuMemcpy3DPeerAsync, const CUDA_MEMCPY3D_PEER *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyBatchAsync, CUresult, cuMemcpyBatchAsync, CUdeviceptr *, dsts, CUdeviceptr *, srcs, size_t *, sizes, size_t, count, CUmemcpyAttributes *, attrs, size_t *, attrsIdxs, size_t, numAttrs, size_t *, failIdx, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DBatchAsync, CUresult, cuMemcpy3DBatchAsync, size_t, numOps, CUDA_MEMCPY3D_BATCH_OP *, opList, size_t *, failIdx, unsigned long long, flags, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD8Async, CUresult, cuMemsetD8Async, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD16Async, CUresult, cuMemsetD16Async, CUdeviceptr, dstDevice, unsigned short, us, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD32Async, CUresult, cuMemsetD32Async, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD2D8Async, CUresult, cuMemsetD2D8Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD2D16Async, CUresult, cuMemsetD2D16Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemsetD2D32Async, CUresult, cuMemsetD2D32Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetPriority, CUresult, cuStreamGetPriority, CUstream, hStream, int *, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetId, CUresult, cuStreamGetId, CUstream, hStream, unsigned long long *, streamId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetFlags, CUresult, cuStreamGetFlags, CUstream, hStream, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetDevice, CUresult, cuStreamGetDevice, CUstream, hStream, CUdevice *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCtx, CUresult, cuStreamGetCtx, CUstream, hStream, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCtx_v2, CUresult, cuStreamGetCtx_v2, CUstream, hStream, CUcontext *, pCtx, CUgreenCtx *, pGreenCtx);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamWaitEvent, CUresult, cuStreamWaitEvent, CUstream, hStream, CUevent, hEvent, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAddCallback, CUresult, cuStreamAddCallback, CUstream, hStream, CUstreamCallback, callback, void *, userData, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAttachMemAsync, CUresult, cuStreamAttachMemAsync, CUstream, hStream, CUdeviceptr, dptr, size_t, length, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamQuery, CUresult, cuStreamQuery, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamSynchronize, CUresult, cuStreamSynchronize, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventRecord, CUresult, cuEventRecord, CUevent, hEvent, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventRecordWithFlags, CUresult, cuEventRecordWithFlags, CUevent, hEvent, CUstream, hStream, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XLaunchKernel, CUresult, cuLaunchKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(XLaunchKernelEx, CUresult, cuLaunchKernelEx, const CUlaunchConfig *, config, CUfunction, f, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(XLaunchHostFunc, CUresult, cuLaunchHostFunc, CUstream, hStream, CUhostFn, fn, void *, userData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsMapResources, CUresult, cuGraphicsMapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnmapResources, CUresult, cuGraphicsUnmapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32, CUresult, cuStreamWriteValue32, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32, CUresult, cuStreamWaitValue32, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64, CUresult, cuStreamWriteValue64, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64, CUresult, cuStreamWaitValue64, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBatchMemOp, CUresult, cuStreamBatchMemOp, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32_ptsz, CUresult, cuStreamWriteValue32_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32_ptsz, CUresult, cuStreamWaitValue32_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64_ptsz, CUresult, cuStreamWriteValue64_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64_ptsz, CUresult, cuStreamWaitValue64_ptsz, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBatchMemOp_ptsz, CUresult, cuStreamBatchMemOp_ptsz, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32_v2, CUresult, cuStreamWriteValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32_v2, CUresult, cuStreamWaitValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64_v2, CUresult, cuStreamWriteValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64_v2, CUresult, cuStreamWaitValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBatchMemOp_v2, CUresult, cuStreamBatchMemOp_v2, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync, CUresult, cuMemPrefetchAsync, CUdeviceptr, devPtr, size_t, count, CUdevice, dstDevice, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync_v2, CUresult, cuMemPrefetchAsync_v2, CUdeviceptr, devPtr, size_t, count, CUmemLocation, location, unsigned int, flags, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernel, CUresult, cuLaunchCooperativeKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SignalExternalSemaphoresAsync, CUresult, cuSignalExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WaitExternalSemaphoresAsync, CUresult, cuWaitExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture, CUresult, cuStreamBeginCapture, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture_ptsz, CUresult, cuStreamBeginCapture_ptsz, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture_v2, CUresult, cuStreamBeginCapture_v2, CUstream, hStream, CUstreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCaptureToGraph, CUresult, cuStreamBeginCaptureToGraph, CUstream, hStream, CUgraph, hGraph, const CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, CUstreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamEndCapture, CUresult, cuStreamEndCapture, CUstream, hStream, CUgraph *, phGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamIsCapturing, CUresult, cuStreamIsCapturing, CUstream, hStream, CUstreamCaptureStatus *, captureStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo, CUresult, cuStreamGetCaptureInfo, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_ptsz, CUresult, cuStreamGetCaptureInfo_ptsz, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v2, CUresult, cuStreamGetCaptureInfo_v2, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v3, CUresult, cuStreamGetCaptureInfo_v3, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, const CUgraphEdgeData **, edgeData_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddKernelNode, CUresult, cuGraphAddKernelNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetParams, CUresult, cuGraphKernelNodeGetParams, CUgraphNode, hNode, CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetParams, CUresult, cuGraphKernelNodeSetParams, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecKernelNodeSetParams, CUresult, cuGraphExecKernelNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS_v1 *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithParams, CUresult, cuGraphInstantiateWithParams, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS *, instantiateParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecUpdate, CUresult, cuGraphExecUpdate, CUgraphExec, hGraphExec, CUgraph, hGraph, CUgraphNode *, hErrorNode_out, CUgraphExecUpdateResult *, updateResult_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphUpload, CUresult, cuGraphUpload, CUgraphExec, hGraph, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphLaunch, CUresult, cuGraphLaunch, CUgraphExec, hGraph, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamCopyAttributes, CUresult, cuStreamCopyAttributes, CUstream, dstStream, CUstream, srcStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetAttribute, CUresult, cuStreamGetAttribute, CUstream, hStream, CUstreamAttrID, attr, CUstreamAttrValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamSetAttribute, CUresult, cuStreamSetAttribute, CUstream, hStream, CUstreamAttrID, attr, const CUstreamAttrValue *, param);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenMemHandle, CUresult, cuIpcOpenMemHandle, CUdeviceptr *, pdptr, CUipcMemHandle, handle, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiate, CUresult, cuGraphInstantiate, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUgraphNode *, phErrorNode, char *, logBuffer, size_t, bufferSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiate_v2, CUresult, cuGraphInstantiate_v2, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUgraphNode *, phErrorNode, char *, logBuffer, size_t, bufferSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMapArrayAsync, CUresult, cuMemMapArrayAsync, CUarrayMapInfo *, mapInfoList, unsigned int, count, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemFreeAsync, CUresult, cuMemFreeAsync, CUdeviceptr, dptr, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(XMemAllocAsync, CUresult, cuMemAllocAsync, CUdeviceptr *, dptr, size_t, bytesize, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocFromPoolAsync, CUresult, cuMemAllocFromPoolAsync, CUdeviceptr *, dptr, size_t, bytesize, CUmemoryPool, pool, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies, CUresult, cuStreamUpdateCaptureDependencies, CUstream, hStream, CUgraphNode *, dependencies, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies_v2, CUresult, cuStreamUpdateCaptureDependencies_v2, CUstream, hStream, CUgraphNode *, dependencies, const CUgraphEdgeData *, dependencyData, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemBatchDecompressAsync, CUresult, cuMemBatchDecompressAsync, CUmemDecompressParams *, paramsArray, size_t, count, unsigned int, flags, size_t *, errorIndex, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XGetProcAddress, CUresult, cuGetProcAddress, const char *, symbol, void **, pfn, int, cudaVersion, cuuint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessGetRestoreThreadId, CUresult, cuCheckpointProcessGetRestoreThreadId, int, pid, int *, tid);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessGetState, CUresult, cuCheckpointProcessGetState, int, pid, CUprocessState *, state);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessLock, CUresult, cuCheckpointProcessLock, int, pid, CUcheckpointLockArgs *, args);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessCheckpoint, CUresult, cuCheckpointProcessCheckpoint, int, pid, CUcheckpointCheckpointArgs *, args);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessRestore, CUresult, cuCheckpointProcessRestore, int, pid, CUcheckpointRestoreArgs *, args);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CheckpointProcessUnlock, CUresult, cuCheckpointProcessUnlock, int, pid, CUcheckpointUnlockArgs *, args);

// generated by: python3 tools/autogen/cuda_func_map.py -f platforms/cuda/hal/include/xsched/cuda/hal/common/cuda_pfn.h -I platforms/cuda/hal/include
static const std::unordered_map<std::string, std::map<int, void *>> intercept_funcs = {
    { "cuGetErrorString"                                    , {{  6000, (void *)cuGetErrorString                                    }}},
    { "cuGetErrorName"                                      , {{  6000, (void *)cuGetErrorName                                      }}},
    { "cuInit"                                              , {{  2000, (void *)cuInit                                              }}},
    { "cuDriverGetVersion"                                  , {{  2020, (void *)cuDriverGetVersion                                  }}},
    { "cuDeviceGet"                                         , {{  2000, (void *)cuDeviceGet                                         }}},
    { "cuDeviceGetCount"                                    , {{  2000, (void *)cuDeviceGetCount                                    }}},
    { "cuDeviceGetName"                                     , {{  2000, (void *)cuDeviceGetName                                     }}},
    { "cuDeviceGetUuid"                                     , {{ 11040, (void *)cuDeviceGetUuid                                     }, {  9020, (void *)cuDeviceGetUuid_v2                   }}},
    { "cuDeviceGetLuid"                                     , {{ 10000, (void *)cuDeviceGetLuid                                     }}},
    { "cuDeviceTotalMem"                                    , {{  2000, (void *)cuDeviceTotalMem                                    }, {  3020, (void *)cuDeviceTotalMem_v2                  }}},
    { "cuDeviceGetTexture1DLinearMaxWidth"                  , {{ 11010, (void *)cuDeviceGetTexture1DLinearMaxWidth                  }}},
    { "cuDeviceGetAttribute"                                , {{  2000, (void *)cuDeviceGetAttribute                                }}},
    { "cuDeviceGetNvSciSyncAttributes"                      , {{ 10020, (void *)cuDeviceGetNvSciSyncAttributes                      }}},
    { "cuDeviceSetMemPool"                                  , {{ 11020, (void *)cuDeviceSetMemPool                                  }}},
    { "cuDeviceGetMemPool"                                  , {{ 11020, (void *)cuDeviceGetMemPool                                  }}},
    { "cuDeviceGetDefaultMemPool"                           , {{ 11020, (void *)cuDeviceGetDefaultMemPool                           }}},
    { "cuDeviceGetProperties"                               , {{  2000, (void *)cuDeviceGetProperties                               }}},
    { "cuDeviceComputeCapability"                           , {{  2000, (void *)cuDeviceComputeCapability                           }}},
    { "cuDevicePrimaryCtxRetain"                            , {{  7000, (void *)cuDevicePrimaryCtxRetain                            }}},
    { "cuDevicePrimaryCtxRelease"                           , {{ 11000, (void *)cuDevicePrimaryCtxRelease                           }, {  7000, (void *)cuDevicePrimaryCtxRelease_v2         }}},
    { "cuDevicePrimaryCtxSetFlags"                          , {{ 11000, (void *)cuDevicePrimaryCtxSetFlags                          }, {  7000, (void *)cuDevicePrimaryCtxSetFlags_v2        }}},
    { "cuDevicePrimaryCtxGetState"                          , {{  7000, (void *)cuDevicePrimaryCtxGetState                          }}},
    { "cuDevicePrimaryCtxReset"                             , {{ 11000, (void *)cuDevicePrimaryCtxReset                             }, {  7000, (void *)cuDevicePrimaryCtxReset_v2           }}},
    { "cuDeviceGetExecAffinitySupport"                      , {{ 11040, (void *)cuDeviceGetExecAffinitySupport                      }}},
    { "cuCtxCreate"                                         , {{ 11040, (void *)cuCtxCreate                                         }, { 12050, (void *)cuCtxCreate_v2                       }, {  2000, (void *)cuCtxCreate_v3           }, {  3020, (void *)cuCtxCreate_v4}}},
    { "cuCtxGetId"                                          , {{ 12000, (void *)cuCtxGetId                                          }}},
    { "cuCtxDestroy"                                        , {{  2000, (void *)cuCtxDestroy                                        }, {  4000, (void *)cuCtxDestroy_v2                      }}},
    { "cuCtxPushCurrent"                                    , {{  2000, (void *)cuCtxPushCurrent                                    }, {  4000, (void *)cuCtxPushCurrent_v2                  }}},
    { "cuCtxPopCurrent"                                     , {{  2000, (void *)cuCtxPopCurrent                                     }, {  4000, (void *)cuCtxPopCurrent_v2                   }}},
    { "cuCtxSetCurrent"                                     , {{  4000, (void *)cuCtxSetCurrent                                     }}},
    { "cuCtxGetCurrent"                                     , {{  4000, (void *)cuCtxGetCurrent                                     }}},
    { "cuCtxGetDevice"                                      , {{  2000, (void *)cuCtxGetDevice                                      }}},
    { "cuCtxGetFlags"                                       , {{  7000, (void *)cuCtxGetFlags                                       }}},
    { "cuCtxSetFlags"                                       , {{ 12010, (void *)cuCtxSetFlags                                       }}},
    { "cuCtxSynchronize"                                    , {{  2000, (void *)cuCtxSynchronize                                    }}},
    { "cuCtxSetLimit"                                       , {{  3010, (void *)cuCtxSetLimit                                       }}},
    { "cuCtxGetLimit"                                       , {{  3010, (void *)cuCtxGetLimit                                       }}},
    { "cuCtxGetCacheConfig"                                 , {{  3020, (void *)cuCtxGetCacheConfig                                 }}},
    { "cuCtxSetCacheConfig"                                 , {{  3020, (void *)cuCtxSetCacheConfig                                 }}},
    { "cuCtxGetSharedMemConfig"                             , {{  4020, (void *)cuCtxGetSharedMemConfig                             }}},
    { "cuCtxSetSharedMemConfig"                             , {{  4020, (void *)cuCtxSetSharedMemConfig                             }}},
    { "cuCtxGetApiVersion"                                  , {{  3020, (void *)cuCtxGetApiVersion                                  }}},
    { "cuCtxGetStreamPriorityRange"                         , {{  5050, (void *)cuCtxGetStreamPriorityRange                         }}},
    { "cuCtxResetPersistingL2Cache"                         , {{ 11000, (void *)cuCtxResetPersistingL2Cache                         }}},
    { "cuCtxAttach"                                         , {{  2000, (void *)cuCtxAttach                                         }}},
    { "cuCtxDetach"                                         , {{  2000, (void *)cuCtxDetach                                         }}},
    { "cuCtxGetExecAffinity"                                , {{ 11040, (void *)cuCtxGetExecAffinity                                }}},
    { "cuModuleLoad"                                        , {{  2000, (void *)cuModuleLoad                                        }}},
    { "cuModuleLoadData"                                    , {{  2000, (void *)cuModuleLoadData                                    }}},
    { "cuModuleLoadDataEx"                                  , {{  2010, (void *)cuModuleLoadDataEx                                  }}},
    { "cuModuleLoadFatBinary"                               , {{  2000, (void *)cuModuleLoadFatBinary                               }}},
    { "cuModuleUnload"                                      , {{  2000, (void *)cuModuleUnload                                      }}},
    { "cuModuleGetFunction"                                 , {{  2000, (void *)cuModuleGetFunction                                 }}},
    { "cuModuleGetGlobal"                                   , {{  2000, (void *)cuModuleGetGlobal                                   }, {  3020, (void *)cuModuleGetGlobal_v2                 }}},
    { "cuModuleGetTexRef"                                   , {{  2000, (void *)cuModuleGetTexRef                                   }}},
    { "cuModuleGetSurfRef"                                  , {{  3000, (void *)cuModuleGetSurfRef                                  }}},
    { "cuModuleGetFunctionCount"                            , {{ 12040, (void *)cuModuleGetFunctionCount                            }}},
    { "cuModuleEnumerateFunctions"                          , {{ 12040, (void *)cuModuleEnumerateFunctions                          }}},
    { "cuLinkCreate"                                        , {{  5050, (void *)cuLinkCreate                                        }, {  6050, (void *)cuLinkCreate_v2                      }}},
    { "cuLinkAddData"                                       , {{  5050, (void *)cuLinkAddData                                       }, {  6050, (void *)cuLinkAddData_v2                     }}},
    { "cuLinkAddFile"                                       , {{  5050, (void *)cuLinkAddFile                                       }, {  6050, (void *)cuLinkAddFile_v2                     }}},
    { "cuLinkComplete"                                      , {{  5050, (void *)cuLinkComplete                                      }}},
    { "cuLinkDestroy"                                       , {{  5050, (void *)cuLinkDestroy                                       }}},
    { "cuMemGetInfo"                                        , {{  2000, (void *)cuMemGetInfo                                        }, {  3020, (void *)cuMemGetInfo_v2                      }}},
    { "cuMemAlloc"                                          , {{  2000, (void *)cuMemAlloc                                          }, {  3020, (void *)cuMemAlloc_v2                        }}},
    { "cuMemAllocPitch"                                     , {{  2000, (void *)cuMemAllocPitch                                     }, {  3020, (void *)cuMemAllocPitch_v2                   }}},
    { "cuMemFree"                                           , {{  2000, (void *)cuMemFree                                           }, {  3020, (void *)cuMemFree_v2                         }}},
    { "cuMemGetAddressRange"                                , {{  2000, (void *)cuMemGetAddressRange                                }, {  3020, (void *)cuMemGetAddressRange_v2              }}},
    { "cuMemAllocHost"                                      , {{  2000, (void *)cuMemAllocHost                                      }, {  3020, (void *)cuMemAllocHost_v2                    }}},
    { "cuMemFreeHost"                                       , {{  2000, (void *)cuMemFreeHost                                       }}},
    { "cuMemHostAlloc"                                      , {{  2020, (void *)cuMemHostAlloc                                      }}},
    { "cuMemHostGetDevicePointer"                           , {{  2020, (void *)cuMemHostGetDevicePointer                           }, {  3020, (void *)cuMemHostGetDevicePointer_v2         }}},
    { "cuMemHostGetFlags"                                   , {{  2030, (void *)cuMemHostGetFlags                                   }}},
    { "cuMemAllocManaged"                                   , {{  6000, (void *)cuMemAllocManaged                                   }}},
    { "cuDeviceGetByPCIBusId"                               , {{  4010, (void *)cuDeviceGetByPCIBusId                               }}},
    { "cuDeviceGetPCIBusId"                                 , {{  4010, (void *)cuDeviceGetPCIBusId                                 }}},
    { "cuIpcGetEventHandle"                                 , {{  4010, (void *)cuIpcGetEventHandle                                 }}},
    { "cuIpcOpenEventHandle"                                , {{  4010, (void *)cuIpcOpenEventHandle                                }}},
    { "cuIpcGetMemHandle"                                   , {{  4010, (void *)cuIpcGetMemHandle                                   }}},
    { "cuIpcOpenMemHandle"                                  , {{ 11000, (void *)cuIpcOpenMemHandle                                  }, {  4010, (void *)cuIpcOpenMemHandle_v2                }}},
    { "cuIpcCloseMemHandle"                                 , {{  4010, (void *)cuIpcCloseMemHandle                                 }}},
    { "cuMemHostRegister"                                   , {{  4000, (void *)cuMemHostRegister                                   }, {  6050, (void *)cuMemHostRegister_v2                 }}},
    { "cuMemHostUnregister"                                 , {{  4000, (void *)cuMemHostUnregister                                 }}},
    { "cuArrayCreate"                                       , {{  2000, (void *)cuArrayCreate                                       }, {  3020, (void *)cuArrayCreate_v2                     }}},
    { "cuArrayGetDescriptor"                                , {{  2000, (void *)cuArrayGetDescriptor                                }, {  3020, (void *)cuArrayGetDescriptor_v2              }}},
    { "cuArrayGetSparseProperties"                          , {{ 11010, (void *)cuArrayGetSparseProperties                          }}},
    { "cuMipmappedArrayGetSparseProperties"                 , {{ 11010, (void *)cuMipmappedArrayGetSparseProperties                 }}},
    { "cuArrayGetMemoryRequirements"                        , {{ 11060, (void *)cuArrayGetMemoryRequirements                        }}},
    { "cuMipmappedArrayGetMemoryRequirements"               , {{ 11060, (void *)cuMipmappedArrayGetMemoryRequirements               }}},
    { "cuArrayGetPlane"                                     , {{ 11020, (void *)cuArrayGetPlane                                     }}},
    { "cuArrayDestroy"                                      , {{  2000, (void *)cuArrayDestroy                                      }}},
    { "cuArray3DCreate"                                     , {{  2000, (void *)cuArray3DCreate                                     }, {  3020, (void *)cuArray3DCreate_v2                   }}},
    { "cuArray3DGetDescriptor"                              , {{  2000, (void *)cuArray3DGetDescriptor                              }, {  3020, (void *)cuArray3DGetDescriptor_v2            }}},
    { "cuMipmappedArrayCreate"                              , {{  5000, (void *)cuMipmappedArrayCreate                              }}},
    { "cuMipmappedArrayGetLevel"                            , {{  5000, (void *)cuMipmappedArrayGetLevel                            }}},
    { "cuMipmappedArrayDestroy"                             , {{  5000, (void *)cuMipmappedArrayDestroy                             }}},
    { "cuMemAddressReserve"                                 , {{ 10020, (void *)cuMemAddressReserve                                 }}},
    { "cuMemAddressFree"                                    , {{ 10020, (void *)cuMemAddressFree                                    }}},
    { "cuMemCreate"                                         , {{ 10020, (void *)cuMemCreate                                         }}},
    { "cuMemRelease"                                        , {{ 10020, (void *)cuMemRelease                                        }}},
    { "cuMemMap"                                            , {{ 10020, (void *)cuMemMap                                            }}},
    { "cuMemUnmap"                                          , {{ 10020, (void *)cuMemUnmap                                          }}},
    { "cuMemSetAccess"                                      , {{ 10020, (void *)cuMemSetAccess                                      }}},
    { "cuMemGetAccess"                                      , {{ 10020, (void *)cuMemGetAccess                                      }}},
    { "cuMemExportToShareableHandle"                        , {{ 10020, (void *)cuMemExportToShareableHandle                        }}},
    { "cuMemImportFromShareableHandle"                      , {{ 10020, (void *)cuMemImportFromShareableHandle                      }}},
    { "cuMemGetAllocationGranularity"                       , {{ 10020, (void *)cuMemGetAllocationGranularity                       }}},
    { "cuMemGetAllocationPropertiesFromHandle"              , {{ 10020, (void *)cuMemGetAllocationPropertiesFromHandle              }}},
    { "cuMemRetainAllocationHandle"                         , {{ 11000, (void *)cuMemRetainAllocationHandle                         }}},
    { "cuMemPoolTrimTo"                                     , {{ 11020, (void *)cuMemPoolTrimTo                                     }}},
    { "cuMemPoolSetAttribute"                               , {{ 11020, (void *)cuMemPoolSetAttribute                               }}},
    { "cuMemPoolGetAttribute"                               , {{ 11020, (void *)cuMemPoolGetAttribute                               }}},
    { "cuMemPoolSetAccess"                                  , {{ 11020, (void *)cuMemPoolSetAccess                                  }}},
    { "cuMemPoolGetAccess"                                  , {{ 11020, (void *)cuMemPoolGetAccess                                  }}},
    { "cuMemPoolCreate"                                     , {{ 11020, (void *)cuMemPoolCreate                                     }}},
    { "cuMemPoolDestroy"                                    , {{ 11020, (void *)cuMemPoolDestroy                                    }}},
    { "cuMemPoolExportToShareableHandle"                    , {{ 11020, (void *)cuMemPoolExportToShareableHandle                    }}},
    { "cuMemPoolImportFromShareableHandle"                  , {{ 11020, (void *)cuMemPoolImportFromShareableHandle                  }}},
    { "cuMemPoolExportPointer"                              , {{ 11020, (void *)cuMemPoolExportPointer                              }}},
    { "cuMemPoolImportPointer"                              , {{ 11020, (void *)cuMemPoolImportPointer                              }}},
    { "cuPointerGetAttribute"                               , {{  4000, (void *)cuPointerGetAttribute                               }}},
    { "cuMemAdvise"                                         , {{ 12020, (void *)cuMemAdvise                                         }, {  8000, (void *)cuMemAdvise_v2                       }}},
    { "cuMemRangeGetAttribute"                              , {{  8000, (void *)cuMemRangeGetAttribute                              }}},
    { "cuMemRangeGetAttributes"                             , {{  8000, (void *)cuMemRangeGetAttributes                             }}},
    { "cuMulticastCreate"                                   , {{ 12010, (void *)cuMulticastCreate                                   }}},
    { "cuMulticastAddDevice"                                , {{ 12010, (void *)cuMulticastAddDevice                                }}},
    { "cuMulticastBindMem"                                  , {{ 12010, (void *)cuMulticastBindMem                                  }}},
    { "cuMulticastBindAddr"                                 , {{ 12010, (void *)cuMulticastBindAddr                                 }}},
    { "cuMulticastUnbind"                                   , {{ 12010, (void *)cuMulticastUnbind                                   }}},
    { "cuMulticastGetGranularity"                           , {{ 12010, (void *)cuMulticastGetGranularity                           }}},
    { "cuPointerSetAttribute"                               , {{  6000, (void *)cuPointerSetAttribute                               }}},
    { "cuPointerGetAttributes"                              , {{  7000, (void *)cuPointerGetAttributes                              }}},
    { "cuStreamCreate"                                      , {{  2000, (void *)cuStreamCreate                                      }}},
    { "cuStreamCreateWithPriority"                          , {{  5050, (void *)cuStreamCreateWithPriority                          }}},
    { "cuStreamGetId"                                       , {{ 12000, (void *)cuStreamGetId                                       }}},
    { "cuThreadExchangeStreamCaptureMode"                   , {{ 10010, (void *)cuThreadExchangeStreamCaptureMode                   }}},
    { "cuStreamDestroy"                                     , {{  2000, (void *)cuStreamDestroy                                     }, {  4000, (void *)cuStreamDestroy_v2                   }}},
    { "cuEventCreate"                                       , {{  2000, (void *)cuEventCreate                                       }}},
    { "cuEventQuery"                                        , {{  2000, (void *)cuEventQuery                                        }}},
    { "cuEventSynchronize"                                  , {{  2000, (void *)cuEventSynchronize                                  }}},
    { "cuEventDestroy"                                      , {{  2000, (void *)cuEventDestroy                                      }, {  4000, (void *)cuEventDestroy_v2                    }}},
    { "cuEventElapsedTime"                                  , {{ 12080, (void *)cuEventElapsedTime                                  }, {  2000, (void *)cuEventElapsedTime_v2                }}},
    { "cuImportExternalMemory"                              , {{ 10000, (void *)cuImportExternalMemory                              }}},
    { "cuExternalMemoryGetMappedBuffer"                     , {{ 10000, (void *)cuExternalMemoryGetMappedBuffer                     }}},
    { "cuExternalMemoryGetMappedMipmappedArray"             , {{ 10000, (void *)cuExternalMemoryGetMappedMipmappedArray             }}},
    { "cuDestroyExternalMemory"                             , {{ 10000, (void *)cuDestroyExternalMemory                             }}},
    { "cuImportExternalSemaphore"                           , {{ 10000, (void *)cuImportExternalSemaphore                           }}},
    { "cuDestroyExternalSemaphore"                          , {{ 10000, (void *)cuDestroyExternalSemaphore                          }}},
    { "cuFuncGetAttribute"                                  , {{  2020, (void *)cuFuncGetAttribute                                  }}},
    { "cuFuncSetAttribute"                                  , {{  9000, (void *)cuFuncSetAttribute                                  }}},
    { "cuFuncSetCacheConfig"                                , {{  3000, (void *)cuFuncSetCacheConfig                                }}},
    { "cuFuncSetSharedMemConfig"                            , {{  4020, (void *)cuFuncSetSharedMemConfig                            }}},
    { "cuFuncGetName"                                       , {{ 12030, (void *)cuFuncGetName                                       }}},
    { "cuFuncGetParamInfo"                                  , {{ 12040, (void *)cuFuncGetParamInfo                                  }}},
    { "cuFuncIsLoaded"                                      , {{ 12040, (void *)cuFuncIsLoaded                                      }}},
    { "cuFuncLoad"                                          , {{ 12040, (void *)cuFuncLoad                                          }}},
    { "cuLaunchCooperativeKernelMultiDevice"                , {{  9000, (void *)cuLaunchCooperativeKernelMultiDevice                }}},
    { "cuFuncSetBlockShape"                                 , {{  2000, (void *)cuFuncSetBlockShape                                 }}},
    { "cuFuncSetSharedSize"                                 , {{  2000, (void *)cuFuncSetSharedSize                                 }}},
    { "cuParamSetSize"                                      , {{  2000, (void *)cuParamSetSize                                      }}},
    { "cuParamSeti"                                         , {{  2000, (void *)cuParamSeti                                         }}},
    { "cuParamSetf"                                         , {{  2000, (void *)cuParamSetf                                         }}},
    { "cuParamSetv"                                         , {{  2000, (void *)cuParamSetv                                         }}},
    { "cuLaunch"                                            , {{  2000, (void *)cuLaunch                                            }}},
    { "cuLaunchGrid"                                        , {{  2000, (void *)cuLaunchGrid                                        }}},
    { "cuLaunchGridAsync"                                   , {{  2000, (void *)cuLaunchGridAsync                                   }}},
    { "cuParamSetTexRef"                                    , {{  2000, (void *)cuParamSetTexRef                                    }}},
    { "cuGraphCreate"                                       , {{ 10000, (void *)cuGraphCreate                                       }}},
    { "cuGraphAddKernelNode"                                , {{ 10000, (void *)cuGraphAddKernelNode                                }, { 12000, (void *)cuGraphAddKernelNode_v2              }}},
    { "cuGraphKernelNodeGetParams"                          , {{ 10000, (void *)cuGraphKernelNodeGetParams                          }, { 12000, (void *)cuGraphKernelNodeGetParams_v2        }}},
    { "cuGraphKernelNodeSetParams"                          , {{ 10000, (void *)cuGraphKernelNodeSetParams                          }, { 12000, (void *)cuGraphKernelNodeSetParams_v2        }}},
    { "cuGraphAddMemcpyNode"                                , {{ 10000, (void *)cuGraphAddMemcpyNode                                }}},
    { "cuGraphMemcpyNodeGetParams"                          , {{ 10000, (void *)cuGraphMemcpyNodeGetParams                          }}},
    { "cuGraphMemcpyNodeSetParams"                          , {{ 10000, (void *)cuGraphMemcpyNodeSetParams                          }}},
    { "cuGraphAddMemsetNode"                                , {{ 10000, (void *)cuGraphAddMemsetNode                                }}},
    { "cuGraphMemsetNodeGetParams"                          , {{ 10000, (void *)cuGraphMemsetNodeGetParams                          }}},
    { "cuGraphMemsetNodeSetParams"                          , {{ 10000, (void *)cuGraphMemsetNodeSetParams                          }}},
    { "cuGraphAddHostNode"                                  , {{ 10000, (void *)cuGraphAddHostNode                                  }}},
    { "cuGraphHostNodeGetParams"                            , {{ 10000, (void *)cuGraphHostNodeGetParams                            }}},
    { "cuGraphHostNodeSetParams"                            , {{ 10000, (void *)cuGraphHostNodeSetParams                            }}},
    { "cuGraphAddChildGraphNode"                            , {{ 10000, (void *)cuGraphAddChildGraphNode                            }}},
    { "cuGraphChildGraphNodeGetGraph"                       , {{ 10000, (void *)cuGraphChildGraphNodeGetGraph                       }}},
    { "cuGraphAddEmptyNode"                                 , {{ 10000, (void *)cuGraphAddEmptyNode                                 }}},
    { "cuGraphAddEventRecordNode"                           , {{ 11010, (void *)cuGraphAddEventRecordNode                           }}},
    { "cuGraphEventRecordNodeGetEvent"                      , {{ 11010, (void *)cuGraphEventRecordNodeGetEvent                      }}},
    { "cuGraphEventRecordNodeSetEvent"                      , {{ 11010, (void *)cuGraphEventRecordNodeSetEvent                      }}},
    { "cuGraphAddEventWaitNode"                             , {{ 11010, (void *)cuGraphAddEventWaitNode                             }}},
    { "cuGraphEventWaitNodeGetEvent"                        , {{ 11010, (void *)cuGraphEventWaitNodeGetEvent                        }}},
    { "cuGraphEventWaitNodeSetEvent"                        , {{ 11010, (void *)cuGraphEventWaitNodeSetEvent                        }}},
    { "cuGraphAddExternalSemaphoresSignalNode"              , {{ 11020, (void *)cuGraphAddExternalSemaphoresSignalNode              }}},
    { "cuGraphExternalSemaphoresSignalNodeGetParams"        , {{ 11020, (void *)cuGraphExternalSemaphoresSignalNodeGetParams        }}},
    { "cuGraphExternalSemaphoresSignalNodeSetParams"        , {{ 11020, (void *)cuGraphExternalSemaphoresSignalNodeSetParams        }}},
    { "cuGraphAddExternalSemaphoresWaitNode"                , {{ 11020, (void *)cuGraphAddExternalSemaphoresWaitNode                }}},
    { "cuGraphExternalSemaphoresWaitNodeGetParams"          , {{ 11020, (void *)cuGraphExternalSemaphoresWaitNodeGetParams          }}},
    { "cuGraphExternalSemaphoresWaitNodeSetParams"          , {{ 11020, (void *)cuGraphExternalSemaphoresWaitNodeSetParams          }}},
    { "cuGraphAddBatchMemOpNode"                            , {{ 11070, (void *)cuGraphAddBatchMemOpNode                            }}},
    { "cuGraphBatchMemOpNodeGetParams"                      , {{ 11070, (void *)cuGraphBatchMemOpNodeGetParams                      }}},
    { "cuGraphBatchMemOpNodeSetParams"                      , {{ 11070, (void *)cuGraphBatchMemOpNodeSetParams                      }}},
    { "cuGraphExecBatchMemOpNodeSetParams"                  , {{ 11070, (void *)cuGraphExecBatchMemOpNodeSetParams                  }}},
    { "cuGraphClone"                                        , {{ 10000, (void *)cuGraphClone                                        }}},
    { "cuGraphNodeFindInClone"                              , {{ 10000, (void *)cuGraphNodeFindInClone                              }}},
    { "cuGraphNodeGetType"                                  , {{ 10000, (void *)cuGraphNodeGetType                                  }}},
    { "cuGraphGetNodes"                                     , {{ 10000, (void *)cuGraphGetNodes                                     }}},
    { "cuGraphGetRootNodes"                                 , {{ 10000, (void *)cuGraphGetRootNodes                                 }}},
    { "cuGraphGetEdges"                                     , {{ 10000, (void *)cuGraphGetEdges                                     }, { 12030, (void *)cuGraphGetEdges_v2                   }}},
    { "cuGraphNodeGetDependencies"                          , {{ 10000, (void *)cuGraphNodeGetDependencies                          }, { 12030, (void *)cuGraphNodeGetDependencies_v2        }}},
    { "cuGraphNodeGetDependentNodes"                        , {{ 10000, (void *)cuGraphNodeGetDependentNodes                        }, { 12030, (void *)cuGraphNodeGetDependentNodes_v2      }}},
    { "cuGraphAddDependencies"                              , {{ 10000, (void *)cuGraphAddDependencies                              }, { 12030, (void *)cuGraphAddDependencies_v2            }}},
    { "cuGraphRemoveDependencies"                           , {{ 10000, (void *)cuGraphRemoveDependencies                           }, { 12030, (void *)cuGraphRemoveDependencies_v2         }}},
    { "cuGraphDestroyNode"                                  , {{ 10000, (void *)cuGraphDestroyNode                                  }}},
    { "cuGraphInstantiateWithFlags"                         , {{ 11040, (void *)cuGraphInstantiateWithFlags                         }}},
    { "cuGraphExecGetFlags"                                 , {{ 12000, (void *)cuGraphExecGetFlags                                 }}},
    { "cuGraphExecKernelNodeSetParams"                      , {{ 10010, (void *)cuGraphExecKernelNodeSetParams                      }, { 12000, (void *)cuGraphExecKernelNodeSetParams_v2    }}},
    { "cuGraphExecMemcpyNodeSetParams"                      , {{ 10020, (void *)cuGraphExecMemcpyNodeSetParams                      }}},
    { "cuGraphExecMemsetNodeSetParams"                      , {{ 10020, (void *)cuGraphExecMemsetNodeSetParams                      }}},
    { "cuGraphExecHostNodeSetParams"                        , {{ 10020, (void *)cuGraphExecHostNodeSetParams                        }}},
    { "cuGraphExecChildGraphNodeSetParams"                  , {{ 11010, (void *)cuGraphExecChildGraphNodeSetParams                  }}},
    { "cuGraphExecEventRecordNodeSetEvent"                  , {{ 11010, (void *)cuGraphExecEventRecordNodeSetEvent                  }}},
    { "cuGraphExecEventWaitNodeSetEvent"                    , {{ 11010, (void *)cuGraphExecEventWaitNodeSetEvent                    }}},
    { "cuGraphExecExternalSemaphoresSignalNodeSetParams"    , {{ 11020, (void *)cuGraphExecExternalSemaphoresSignalNodeSetParams    }}},
    { "cuGraphExecExternalSemaphoresWaitNodeSetParams"      , {{ 11020, (void *)cuGraphExecExternalSemaphoresWaitNodeSetParams      }}},
    { "cuGraphExecDestroy"                                  , {{ 10000, (void *)cuGraphExecDestroy                                  }}},
    { "cuGraphDestroy"                                      , {{ 10000, (void *)cuGraphDestroy                                      }}},
    { "cuGraphExecUpdate"                                   , {{ 10020, (void *)cuGraphExecUpdate                                   }, { 12000, (void *)cuGraphExecUpdate_v2                 }}},
    { "cuGraphKernelNodeCopyAttributes"                     , {{ 11000, (void *)cuGraphKernelNodeCopyAttributes                     }}},
    { "cuGraphKernelNodeGetAttribute"                       , {{ 11000, (void *)cuGraphKernelNodeGetAttribute                       }}},
    { "cuGraphKernelNodeSetAttribute"                       , {{ 11000, (void *)cuGraphKernelNodeSetAttribute                       }}},
    { "cuGraphDebugDotPrint"                                , {{ 11030, (void *)cuGraphDebugDotPrint                                }}},
    { "cuGraphAddMemAllocNode"                              , {{ 11040, (void *)cuGraphAddMemAllocNode                              }}},
    { "cuGraphMemAllocNodeGetParams"                        , {{ 11040, (void *)cuGraphMemAllocNodeGetParams                        }}},
    { "cuGraphAddMemFreeNode"                               , {{ 11040, (void *)cuGraphAddMemFreeNode                               }}},
    { "cuGraphMemFreeNodeGetParams"                         , {{ 11040, (void *)cuGraphMemFreeNodeGetParams                         }}},
    { "cuGraphNodeSetEnabled"                               , {{ 11060, (void *)cuGraphNodeSetEnabled                               }}},
    { "cuGraphNodeGetEnabled"                               , {{ 11060, (void *)cuGraphNodeGetEnabled                               }}},
    { "cuGraphAddNode"                                      , {{ 12020, (void *)cuGraphAddNode                                      }, { 12030, (void *)cuGraphAddNode_v2                    }}},
    { "cuGraphNodeSetParams"                                , {{ 12020, (void *)cuGraphNodeSetParams                                }}},
    { "cuGraphExecNodeSetParams"                            , {{ 12020, (void *)cuGraphExecNodeSetParams                            }}},
    { "cuGraphConditionalHandleCreate"                      , {{ 12030, (void *)cuGraphConditionalHandleCreate                      }}},
    { "cuDeviceGraphMemTrim"                                , {{ 11040, (void *)cuDeviceGraphMemTrim                                }}},
    { "cuDeviceGetGraphMemAttribute"                        , {{ 11040, (void *)cuDeviceGetGraphMemAttribute                        }}},
    { "cuDeviceSetGraphMemAttribute"                        , {{ 11040, (void *)cuDeviceSetGraphMemAttribute                        }}},
    { "cuOccupancyMaxActiveBlocksPerMultiprocessor"         , {{  6050, (void *)cuOccupancyMaxActiveBlocksPerMultiprocessor         }}},
    { "cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {{  7000, (void *)cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags}}},
    { "cuOccupancyMaxPotentialBlockSize"                    , {{  6050, (void *)cuOccupancyMaxPotentialBlockSize                    }}},
    { "cuOccupancyMaxPotentialBlockSizeWithFlags"           , {{  7000, (void *)cuOccupancyMaxPotentialBlockSizeWithFlags           }}},
    { "cuOccupancyAvailableDynamicSMemPerBlock"             , {{ 10020, (void *)cuOccupancyAvailableDynamicSMemPerBlock             }}},
    { "cuOccupancyMaxPotentialClusterSize"                  , {{ 11070, (void *)cuOccupancyMaxPotentialClusterSize                  }}},
    { "cuOccupancyMaxActiveClusters"                        , {{ 11070, (void *)cuOccupancyMaxActiveClusters                        }}},
    { "cuTexRefSetArray"                                    , {{  2000, (void *)cuTexRefSetArray                                    }}},
    { "cuTexRefSetMipmappedArray"                           , {{  5000, (void *)cuTexRefSetMipmappedArray                           }}},
    { "cuTexRefSetAddress"                                  , {{  2000, (void *)cuTexRefSetAddress                                  }, {  3020, (void *)cuTexRefSetAddress_v2                }}},
    { "cuTexRefSetAddress2D"                                , {{  2020, (void *)cuTexRefSetAddress2D                                }, {  3020, (void *)cuTexRefSetAddress2D_v2              }, {  4010, (void *)cuTexRefSetAddress2D_v3  }}},
    { "cuTexRefSetFormat"                                   , {{  2000, (void *)cuTexRefSetFormat                                   }}},
    { "cuTexRefSetAddressMode"                              , {{  2000, (void *)cuTexRefSetAddressMode                              }}},
    { "cuTexRefSetFilterMode"                               , {{  2000, (void *)cuTexRefSetFilterMode                               }}},
    { "cuTexRefSetMipmapFilterMode"                         , {{  5000, (void *)cuTexRefSetMipmapFilterMode                         }}},
    { "cuTexRefSetMipmapLevelBias"                          , {{  5000, (void *)cuTexRefSetMipmapLevelBias                          }}},
    { "cuTexRefSetMipmapLevelClamp"                         , {{  5000, (void *)cuTexRefSetMipmapLevelClamp                         }}},
    { "cuTexRefSetMaxAnisotropy"                            , {{  5000, (void *)cuTexRefSetMaxAnisotropy                            }}},
    { "cuTexRefSetBorderColor"                              , {{  8000, (void *)cuTexRefSetBorderColor                              }}},
    { "cuTexRefSetFlags"                                    , {{  2000, (void *)cuTexRefSetFlags                                    }}},
    { "cuTexRefGetAddress"                                  , {{  2000, (void *)cuTexRefGetAddress                                  }, {  3020, (void *)cuTexRefGetAddress_v2                }}},
    { "cuTexRefGetArray"                                    , {{  2000, (void *)cuTexRefGetArray                                    }}},
    { "cuTexRefGetMipmappedArray"                           , {{  5000, (void *)cuTexRefGetMipmappedArray                           }}},
    { "cuTexRefGetAddressMode"                              , {{  2000, (void *)cuTexRefGetAddressMode                              }}},
    { "cuTexRefGetFilterMode"                               , {{  2000, (void *)cuTexRefGetFilterMode                               }}},
    { "cuTexRefGetFormat"                                   , {{  2000, (void *)cuTexRefGetFormat                                   }}},
    { "cuTexRefGetMipmapFilterMode"                         , {{  5000, (void *)cuTexRefGetMipmapFilterMode                         }}},
    { "cuTexRefGetMipmapLevelBias"                          , {{  5000, (void *)cuTexRefGetMipmapLevelBias                          }}},
    { "cuTexRefGetMipmapLevelClamp"                         , {{  5000, (void *)cuTexRefGetMipmapLevelClamp                         }}},
    { "cuTexRefGetMaxAnisotropy"                            , {{  5000, (void *)cuTexRefGetMaxAnisotropy                            }}},
    { "cuTexRefGetBorderColor"                              , {{  8000, (void *)cuTexRefGetBorderColor                              }}},
    { "cuTexRefGetFlags"                                    , {{  2000, (void *)cuTexRefGetFlags                                    }}},
    { "cuTexRefCreate"                                      , {{  2000, (void *)cuTexRefCreate                                      }}},
    { "cuTexRefDestroy"                                     , {{  2000, (void *)cuTexRefDestroy                                     }}},
    { "cuSurfRefSetArray"                                   , {{  3000, (void *)cuSurfRefSetArray                                   }}},
    { "cuSurfRefGetArray"                                   , {{  3000, (void *)cuSurfRefGetArray                                   }}},
    { "cuTexObjectCreate"                                   , {{  5000, (void *)cuTexObjectCreate                                   }}},
    { "cuTexObjectDestroy"                                  , {{  5000, (void *)cuTexObjectDestroy                                  }}},
    { "cuTexObjectGetResourceDesc"                          , {{  5000, (void *)cuTexObjectGetResourceDesc                          }}},
    { "cuTexObjectGetTextureDesc"                           , {{  5000, (void *)cuTexObjectGetTextureDesc                           }}},
    { "cuTexObjectGetResourceViewDesc"                      , {{  5000, (void *)cuTexObjectGetResourceViewDesc                      }}},
    { "cuSurfObjectCreate"                                  , {{  5000, (void *)cuSurfObjectCreate                                  }}},
    { "cuSurfObjectDestroy"                                 , {{  5000, (void *)cuSurfObjectDestroy                                 }}},
    { "cuSurfObjectGetResourceDesc"                         , {{  5000, (void *)cuSurfObjectGetResourceDesc                         }}},
    { "cuTensorMapEncodeTiled"                              , {{ 12000, (void *)cuTensorMapEncodeTiled                              }}},
    { "cuTensorMapEncodeIm2col"                             , {{ 12000, (void *)cuTensorMapEncodeIm2col                             }}},
    { "cuTensorMapReplaceAddress"                           , {{ 12000, (void *)cuTensorMapReplaceAddress                           }}},
    { "cuTensorMapEncodeIm2colWide"                         , {{ 12080, (void *)cuTensorMapEncodeIm2colWide                         }}},
    { "cuDeviceCanAccessPeer"                               , {{  4000, (void *)cuDeviceCanAccessPeer                               }}},
    { "cuCtxEnablePeerAccess"                               , {{  4000, (void *)cuCtxEnablePeerAccess                               }}},
    { "cuCtxDisablePeerAccess"                              , {{  4000, (void *)cuCtxDisablePeerAccess                              }}},
    { "cuDeviceGetP2PAttribute"                             , {{  8000, (void *)cuDeviceGetP2PAttribute                             }}},
    { "cuGraphicsUnregisterResource"                        , {{  3000, (void *)cuGraphicsUnregisterResource                        }}},
    { "cuGraphicsSubResourceGetMappedArray"                 , {{  3000, (void *)cuGraphicsSubResourceGetMappedArray                 }}},
    { "cuGraphicsResourceGetMappedMipmappedArray"           , {{  5000, (void *)cuGraphicsResourceGetMappedMipmappedArray           }}},
    { "cuGraphicsResourceGetMappedPointer"                  , {{  3000, (void *)cuGraphicsResourceGetMappedPointer                  }, {  3020, (void *)cuGraphicsResourceGetMappedPointer_v2}}},
    { "cuGraphicsResourceSetMapFlags"                       , {{  3000, (void *)cuGraphicsResourceSetMapFlags                       }, {  6050, (void *)cuGraphicsResourceSetMapFlags_v2     }}},
    { "cuGetExportTable"                                    , {{  3000, (void *)cuGetExportTable                                    }}},
    { "cuFuncGetModule"                                     , {{ 11000, (void *)cuFuncGetModule                                     }}},
    { "cuGetProcAddress"                                    , {{ 11030, (void *)cuGetProcAddress                                    }, { 12000, (void *)cuGetProcAddress_v2                  }}},
    { "cuMemcpyHtoD"                                        , {{  2000, (void *)cuMemcpyHtoD                                        }, {  3020, (void *)cuMemcpyHtoD_v2                      }}},
    { "cuMemcpyDtoH"                                        , {{  2000, (void *)cuMemcpyDtoH                                        }, {  3020, (void *)cuMemcpyDtoH_v2                      }}},
    { "cuMemcpyDtoD"                                        , {{  2000, (void *)cuMemcpyDtoD                                        }, {  3020, (void *)cuMemcpyDtoD_v2                      }}},
    { "cuMemcpyDtoA"                                        , {{  2000, (void *)cuMemcpyDtoA                                        }, {  3020, (void *)cuMemcpyDtoA_v2                      }}},
    { "cuMemcpyAtoD"                                        , {{  2000, (void *)cuMemcpyAtoD                                        }, {  3020, (void *)cuMemcpyAtoD_v2                      }}},
    { "cuMemcpyHtoA"                                        , {{  2000, (void *)cuMemcpyHtoA                                        }, {  3020, (void *)cuMemcpyHtoA_v2                      }}},
    { "cuMemcpyAtoH"                                        , {{  2000, (void *)cuMemcpyAtoH                                        }, {  3020, (void *)cuMemcpyAtoH_v2                      }}},
    { "cuMemcpyAtoA"                                        , {{  2000, (void *)cuMemcpyAtoA                                        }, {  3020, (void *)cuMemcpyAtoA_v2                      }}},
    { "cuMemcpyHtoAAsync"                                   , {{  2000, (void *)cuMemcpyHtoAAsync                                   }, {  3020, (void *)cuMemcpyHtoAAsync_v2                 }}},
    { "cuMemcpyAtoHAsync"                                   , {{  2000, (void *)cuMemcpyAtoHAsync                                   }, {  3020, (void *)cuMemcpyAtoHAsync_v2                 }}},
    { "cuMemcpy2D"                                          , {{  2000, (void *)cuMemcpy2D                                          }, {  3020, (void *)cuMemcpy2D_v2                        }}},
    { "cuMemcpy2DUnaligned"                                 , {{  2000, (void *)cuMemcpy2DUnaligned                                 }, {  3020, (void *)cuMemcpy2DUnaligned_v2               }}},
    { "cuMemcpy3D"                                          , {{  2000, (void *)cuMemcpy3D                                          }, {  3020, (void *)cuMemcpy3D_v2                        }}},
    { "cuMemcpyHtoDAsync"                                   , {{  2000, (void *)cuMemcpyHtoDAsync                                   }, {  3020, (void *)cuMemcpyHtoDAsync_v2                 }}},
    { "cuMemcpyDtoHAsync"                                   , {{  2000, (void *)cuMemcpyDtoHAsync                                   }, {  3020, (void *)cuMemcpyDtoHAsync_v2                 }}},
    { "cuMemcpyDtoDAsync"                                   , {{  3000, (void *)cuMemcpyDtoDAsync                                   }, {  3020, (void *)cuMemcpyDtoDAsync_v2                 }}},
    { "cuMemcpy2DAsync"                                     , {{  2000, (void *)cuMemcpy2DAsync                                     }, {  3020, (void *)cuMemcpy2DAsync_v2                   }}},
    { "cuMemcpy3DAsync"                                     , {{  2000, (void *)cuMemcpy3DAsync                                     }, {  3020, (void *)cuMemcpy3DAsync_v2                   }}},
    { "cuMemsetD8"                                          , {{  2000, (void *)cuMemsetD8                                          }, {  3020, (void *)cuMemsetD8_v2                        }}},
    { "cuMemsetD16"                                         , {{  2000, (void *)cuMemsetD16                                         }, {  3020, (void *)cuMemsetD16_v2                       }}},
    { "cuMemsetD32"                                         , {{  2000, (void *)cuMemsetD32                                         }, {  3020, (void *)cuMemsetD32_v2                       }}},
    { "cuMemsetD2D8"                                        , {{  2000, (void *)cuMemsetD2D8                                        }, {  3020, (void *)cuMemsetD2D8_v2                      }}},
    { "cuMemsetD2D16"                                       , {{  2000, (void *)cuMemsetD2D16                                       }, {  3020, (void *)cuMemsetD2D16_v2                     }}},
    { "cuMemsetD2D32"                                       , {{  2000, (void *)cuMemsetD2D32                                       }, {  3020, (void *)cuMemsetD2D32_v2                     }}},
    { "cuMemcpy"                                            , {{  4000, (void *)cuMemcpy                                            }}},
    { "cuMemcpyAsync"                                       , {{  4000, (void *)cuMemcpyAsync                                       }}},
    { "cuMemcpyPeer"                                        , {{  4000, (void *)cuMemcpyPeer                                        }}},
    { "cuMemcpyPeerAsync"                                   , {{  4000, (void *)cuMemcpyPeerAsync                                   }}},
    { "cuMemcpy3DPeer"                                      , {{  4000, (void *)cuMemcpy3DPeer                                      }}},
    { "cuMemcpy3DPeerAsync"                                 , {{  4000, (void *)cuMemcpy3DPeerAsync                                 }}},
    { "cuMemcpyBatchAsync"                                  , {{ 12080, (void *)cuMemcpyBatchAsync                                  }}},
    { "cuMemcpy3DBatchAsync"                                , {{ 12080, (void *)cuMemcpy3DBatchAsync                                }}},
    { "cuMemsetD8Async"                                     , {{  3020, (void *)cuMemsetD8Async                                     }}},
    { "cuMemsetD16Async"                                    , {{  3020, (void *)cuMemsetD16Async                                    }}},
    { "cuMemsetD32Async"                                    , {{  3020, (void *)cuMemsetD32Async                                    }}},
    { "cuMemsetD2D8Async"                                   , {{  3020, (void *)cuMemsetD2D8Async                                   }}},
    { "cuMemsetD2D16Async"                                  , {{  3020, (void *)cuMemsetD2D16Async                                  }}},
    { "cuMemsetD2D32Async"                                  , {{  3020, (void *)cuMemsetD2D32Async                                  }}},
    { "cuStreamGetPriority"                                 , {{  5050, (void *)cuStreamGetPriority                                 }}},
    { "cuStreamGetFlags"                                    , {{  5050, (void *)cuStreamGetFlags                                    }}},
    { "cuStreamGetCtx"                                      , {{ 12050, (void *)cuStreamGetCtx                                      }, {  9020, (void *)cuStreamGetCtx_v2                    }}},
    { "cuStreamGetDevice"                                   , {{ 12080, (void *)cuStreamGetDevice                                   }}},
    { "cuStreamWaitEvent"                                   , {{  3020, (void *)cuStreamWaitEvent                                   }}},
    { "cuStreamAddCallback"                                 , {{  5000, (void *)cuStreamAddCallback                                 }}},
    { "cuStreamAttachMemAsync"                              , {{  6000, (void *)cuStreamAttachMemAsync                              }}},
    { "cuStreamQuery"                                       , {{  2000, (void *)cuStreamQuery                                       }}},
    { "cuStreamSynchronize"                                 , {{  2000, (void *)cuStreamSynchronize                                 }}},
    { "cuEventRecord"                                       , {{  2000, (void *)cuEventRecord                                       }}},
    { "cuEventRecordWithFlags"                              , {{ 11010, (void *)cuEventRecordWithFlags                              }}},
    { "cuLaunchKernel"                                      , {{  4000, (void *)cuLaunchKernel                                      }}},
    { "cuLaunchKernelEx"                                    , {{ 11060, (void *)cuLaunchKernelEx                                    }}},
    { "cuLaunchHostFunc"                                    , {{ 10000, (void *)cuLaunchHostFunc                                    }}},
    { "cuGraphicsMapResources"                              , {{  3000, (void *)cuGraphicsMapResources                              }}},
    { "cuGraphicsUnmapResources"                            , {{  3000, (void *)cuGraphicsUnmapResources                            }}},
    { "cuStreamWriteValue32"                                , {{ 11070, (void *)cuStreamWriteValue32                                }, {  8000, (void *)cuStreamWriteValue32_v2              }}},
    { "cuStreamWaitValue32"                                 , {{ 11070, (void *)cuStreamWaitValue32                                 }, {  8000, (void *)cuStreamWaitValue32_v2               }}},
    { "cuStreamWriteValue64"                                , {{ 11070, (void *)cuStreamWriteValue64                                }, {  9000, (void *)cuStreamWriteValue64_v2              }}},
    { "cuStreamWaitValue64"                                 , {{ 11070, (void *)cuStreamWaitValue64                                 }, {  9000, (void *)cuStreamWaitValue64_v2               }}},
    { "cuStreamBatchMemOp"                                  , {{ 11070, (void *)cuStreamBatchMemOp                                  }, {  8000, (void *)cuStreamBatchMemOp_v2                }}},
    { "cuMemPrefetchAsync"                                  , {{ 12020, (void *)cuMemPrefetchAsync                                  }, {  8000, (void *)cuMemPrefetchAsync_v2                }}},
    { "cuLaunchCooperativeKernel"                           , {{  9000, (void *)cuLaunchCooperativeKernel                           }}},
    { "cuSignalExternalSemaphoresAsync"                     , {{ 10000, (void *)cuSignalExternalSemaphoresAsync                     }}},
    { "cuWaitExternalSemaphoresAsync"                       , {{ 10000, (void *)cuWaitExternalSemaphoresAsync                       }}},
    { "cuStreamBeginCapture"                                , {{ 10000, (void *)cuStreamBeginCapture                                }, { 10010, (void *)cuStreamBeginCapture_v2              }}},
    { "cuStreamBeginCaptureToGraph"                         , {{ 12030, (void *)cuStreamBeginCaptureToGraph                         }}},
    { "cuStreamEndCapture"                                  , {{ 10000, (void *)cuStreamEndCapture                                  }}},
    { "cuStreamIsCapturing"                                 , {{ 10000, (void *)cuStreamIsCapturing                                 }}},
    { "cuStreamGetCaptureInfo"                              , {{ 10010, (void *)cuStreamGetCaptureInfo                              }, { 11030, (void *)cuStreamGetCaptureInfo_v2            }, { 12030, (void *)cuStreamGetCaptureInfo_v3}}},
    { "cuStreamUpdateCaptureDependencies"                   , {{ 11030, (void *)cuStreamUpdateCaptureDependencies                   }, { 12030, (void *)cuStreamUpdateCaptureDependencies_v2 }}},
    { "cuGraphInstantiateWithParams"                        , {{ 12000, (void *)cuGraphInstantiateWithParams                        }}},
    { "cuGraphUpload"                                       , {{ 11010, (void *)cuGraphUpload                                       }}},
    { "cuGraphLaunch"                                       , {{ 10000, (void *)cuGraphLaunch                                       }}},
    { "cuStreamCopyAttributes"                              , {{ 11000, (void *)cuStreamCopyAttributes                              }}},
    { "cuStreamGetAttribute"                                , {{ 11000, (void *)cuStreamGetAttribute                                }}},
    { "cuStreamSetAttribute"                                , {{ 11000, (void *)cuStreamSetAttribute                                }}},
    { "cuMemMapArrayAsync"                                  , {{ 11010, (void *)cuMemMapArrayAsync                                  }}},
    { "cuMemFreeAsync"                                      , {{ 11020, (void *)cuMemFreeAsync                                      }}},
    { "cuMemAllocAsync"                                     , {{ 11020, (void *)cuMemAllocAsync                                     }}},
    { "cuMemAllocFromPoolAsync"                             , {{ 11020, (void *)cuMemAllocFromPoolAsync                             }}},
    { "cuFlushGPUDirectRDMAWrites"                          , {{ 11030, (void *)cuFlushGPUDirectRDMAWrites                          }}},
    { "cuUserObjectCreate"                                  , {{ 11030, (void *)cuUserObjectCreate                                  }}},
    { "cuUserObjectRetain"                                  , {{ 11030, (void *)cuUserObjectRetain                                  }}},
    { "cuUserObjectRelease"                                 , {{ 11030, (void *)cuUserObjectRelease                                 }}},
    { "cuGraphRetainUserObject"                             , {{ 11030, (void *)cuGraphRetainUserObject                             }}},
    { "cuGraphReleaseUserObject"                            , {{ 11030, (void *)cuGraphReleaseUserObject                            }}},
    { "cuModuleGetLoadingMode"                              , {{ 11070, (void *)cuModuleGetLoadingMode                              }}},
    { "cuMemGetHandleForAddressRange"                       , {{ 11070, (void *)cuMemGetHandleForAddressRange                       }}},
    { "cuLibraryLoadData"                                   , {{ 12000, (void *)cuLibraryLoadData                                   }}},
    { "cuLibraryLoadFromFile"                               , {{ 12000, (void *)cuLibraryLoadFromFile                               }}},
    { "cuLibraryUnload"                                     , {{ 12000, (void *)cuLibraryUnload                                     }}},
    { "cuLibraryGetKernel"                                  , {{ 12000, (void *)cuLibraryGetKernel                                  }}},
    { "cuLibraryGetModule"                                  , {{ 12000, (void *)cuLibraryGetModule                                  }}},
    { "cuLibraryGetKernelCount"                             , {{ 12040, (void *)cuLibraryGetKernelCount                             }}},
    { "cuLibraryEnumerateKernels"                           , {{ 12040, (void *)cuLibraryEnumerateKernels                           }}},
    { "cuKernelGetFunction"                                 , {{ 12000, (void *)cuKernelGetFunction                                 }}},
    { "cuKernelGetLibrary"                                  , {{ 12050, (void *)cuKernelGetLibrary                                  }}},
    { "cuLibraryGetGlobal"                                  , {{ 12000, (void *)cuLibraryGetGlobal                                  }}},
    { "cuLibraryGetManaged"                                 , {{ 12000, (void *)cuLibraryGetManaged                                 }}},
    { "cuKernelGetAttribute"                                , {{ 12000, (void *)cuKernelGetAttribute                                }}},
    { "cuKernelSetAttribute"                                , {{ 12000, (void *)cuKernelSetAttribute                                }}},
    { "cuKernelSetCacheConfig"                              , {{ 12000, (void *)cuKernelSetCacheConfig                              }}},
    { "cuKernelGetName"                                     , {{ 12030, (void *)cuKernelGetName                                     }}},
    { "cuKernelGetParamInfo"                                , {{ 12040, (void *)cuKernelGetParamInfo                                }}},
    { "cuLibraryGetUnifiedFunction"                         , {{ 12000, (void *)cuLibraryGetUnifiedFunction                         }}},
    { "cuCoredumpGetAttribute"                              , {{ 12010, (void *)cuCoredumpGetAttribute                              }}},
    { "cuCoredumpGetAttributeGlobal"                        , {{ 12010, (void *)cuCoredumpGetAttributeGlobal                        }}},
    { "cuCoredumpSetAttribute"                              , {{ 12010, (void *)cuCoredumpSetAttribute                              }}},
    { "cuCoredumpSetAttributeGlobal"                        , {{ 12010, (void *)cuCoredumpSetAttributeGlobal                        }}},
    { "cuDeviceRegisterAsyncNotification"                   , {{ 12040, (void *)cuDeviceRegisterAsyncNotification                   }}},
    { "cuDeviceUnregisterAsyncNotification"                 , {{ 12040, (void *)cuDeviceUnregisterAsyncNotification                 }}},
    { "cuGreenCtxCreate"                                    , {{ 12040, (void *)cuGreenCtxCreate                                    }}},
    { "cuGreenCtxDestroy"                                   , {{ 12040, (void *)cuGreenCtxDestroy                                   }}},
    { "cuDeviceGetDevResource"                              , {{ 12040, (void *)cuDeviceGetDevResource                              }}},
    { "cuCtxGetDevResource"                                 , {{ 12040, (void *)cuCtxGetDevResource                                 }}},
    { "cuGreenCtxGetDevResource"                            , {{ 12040, (void *)cuGreenCtxGetDevResource                            }}},
    { "cuGreenCtxRecordEvent"                               , {{ 12040, (void *)cuGreenCtxRecordEvent                               }}},
    { "cuGreenCtxWaitEvent"                                 , {{ 12040, (void *)cuGreenCtxWaitEvent                                 }}},
    { "cuDevResourceGenerateDesc"                           , {{ 12040, (void *)cuDevResourceGenerateDesc                           }}},
    { "cuDevSmResourceSplitByCount"                         , {{ 12040, (void *)cuDevSmResourceSplitByCount                         }}},
    { "cuStreamGetGreenCtx"                                 , {{ 12040, (void *)cuStreamGetGreenCtx                                 }}},
    { "cuCtxFromGreenCtx"                                   , {{ 12040, (void *)cuCtxFromGreenCtx                                   }}},
    { "cuCtxRecordEvent"                                    , {{ 12050, (void *)cuCtxRecordEvent                                    }}},
    { "cuCtxWaitEvent"                                      , {{ 12050, (void *)cuCtxWaitEvent                                      }}},
    { "cuGreenCtxStreamCreate"                              , {{ 12050, (void *)cuGreenCtxStreamCreate                              }}},
    { "cuMemBatchDecompressAsync"                           , {{ 12060, (void *)cuMemBatchDecompressAsync                           }}},
    { "cuLogsRegisterCallback"                              , {{ 12090, (void *)cuLogsRegisterCallback                              }}},
    { "cuLogsUnregisterCallback"                            , {{ 12090, (void *)cuLogsUnregisterCallback                            }}},
    { "cuLogsCurrent"                                       , {{ 12090, (void *)cuLogsCurrent                                       }}},
    { "cuLogsDumpToFile"                                    , {{ 12090, (void *)cuLogsDumpToFile                                    }}},
    { "cuLogsDumpToMemory"                                  , {{ 12090, (void *)cuLogsDumpToMemory                                  }}},
    { "cuGraphInstantiate"                                  , {{ 10000, (void *)cuGraphInstantiate                                  }, { 11000, (void *)cuGraphInstantiate_v2                }}},
    { "cuCheckpointProcessGetRestoreThreadId"               , {{ 12080, (void *)cuCheckpointProcessGetRestoreThreadId               }}},
    { "cuCheckpointProcessGetState"                         , {{ 12080, (void *)cuCheckpointProcessGetState                         }}},
    { "cuCheckpointProcessLock"                             , {{ 12080, (void *)cuCheckpointProcessLock                             }}},
    { "cuCheckpointProcessCheckpoint"                       , {{ 12080, (void *)cuCheckpointProcessCheckpoint                       }}},
    { "cuCheckpointProcessRestore"                          , {{ 12080, (void *)cuCheckpointProcessRestore                          }}},
    { "cuCheckpointProcessUnlock"                           , {{ 12080, (void *)cuCheckpointProcessUnlock                           }}},
};

static inline void GetInterceptAddr(const char *symbol, void **pfn, int cuda_version)
{
    auto name_it = intercept_funcs.find(symbol);
    if (name_it == intercept_funcs.end()) return;
    for (auto version_it = name_it->second.rbegin(); version_it != name_it->second.rend(); ++version_it) {
        if (cuda_version >= version_it->first) {
            XDEBG("override func addr: symbol: %s, old: %p, new: %p", symbol, *pfn, version_it->second);
            *pfn = version_it->second;
            return;
        }
    }
}

EXPORT_C_FUNC CUresult XGetProcAddress(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags)
{
    XDEBG("XGetProcAddress(symbol: %s, cudaVersion: %d, flag: 0x" FMT_64X ")", symbol, cudaVersion, flags);
    CUresult res = Driver::GetProcAddress(symbol, pfn, cudaVersion, flags);
    if (res != CUDA_SUCCESS) return res;
    GetInterceptAddr(symbol, pfn, cudaVersion);
    return res;
}

EXPORT_C_FUNC CUresult XGetProcAddress_v2(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags, CUdriverProcAddressQueryResult *symbolStatus)
{
    XDEBG("XGetProcAddress_v2(symbol: %s, cudaVersion: %d, flag: 0x" FMT_64X ")", symbol, cudaVersion, flags);
    CUresult res = Driver::GetProcAddress_v2(symbol, pfn, cudaVersion, flags, symbolStatus);
    if (res != CUDA_SUCCESS) return res;
    GetInterceptAddr(symbol, pfn, cudaVersion);
    return res;
}
