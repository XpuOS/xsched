#if defined(_WIN32)
// This file is auto-generated by command 
// "python tools/autogen/merge_headers.py -d .\platforms\cuda\hal\include\xsched\cuda\hal\windows"
// "python tools/autogen/gen.py --source merged.h --lib C:\Windows\System32\nvcuda.dll --platform cuda --prefix cu"
#include "xsched/utils/function.h"
#include "xsched/cuda/hal/common/driver.h"
#include "xsched/cuda/hal/windows/driver_windows.h"

using namespace xsched::cuda;

DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::ProfilerInitialize, CUresult, cuProfilerInitialize, const char *, configFile, const char *, outputFile, CUoutput_mode, outputMode);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::ProfilerStart, CUresult, cuProfilerStart);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::ProfilerStop, CUresult, cuProfilerStop);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GraphicsGLRegisterBuffer, CUresult, cuGraphicsGLRegisterBuffer, CUgraphicsResource *, pCudaResource, GLuint, buffer, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GraphicsGLRegisterImage, CUresult, cuGraphicsGLRegisterImage, CUgraphicsResource *, pCudaResource, GLuint, image, GLenum, target, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::WGLGetDevice, CUresult, cuWGLGetDevice, CUdevice *, pDevice, HGPUNV, hGpu);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLGetDevices_v2, CUresult, cuGLGetDevices_v2, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, CUGLDeviceList, deviceList);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLCtxCreate_v2, CUresult, cuGLCtxCreate_v2, CUcontext *, pCtx, unsigned int, Flags, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLInit, CUresult, cuGLInit);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLRegisterBufferObject, CUresult, cuGLRegisterBufferObject, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObject_v2_ptds, CUresult, cuGLMapBufferObject_v2_ptds, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLUnmapBufferObject, CUresult, cuGLUnmapBufferObject, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLUnregisterBufferObject, CUresult, cuGLUnregisterBufferObject, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLSetBufferObjectMapFlags, CUresult, cuGLSetBufferObjectMapFlags, GLuint, buffer, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObjectAsync_v2_ptsz, CUresult, cuGLMapBufferObjectAsync_v2_ptsz, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLUnmapBufferObjectAsync, CUresult, cuGLUnmapBufferObjectAsync, GLuint, buffer, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLGetDevices, CUresult, cuGLGetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, CUGLDeviceList, deviceList);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObject_v2, CUresult, cuGLMapBufferObject_v2, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObjectAsync_v2, CUresult, cuGLMapBufferObjectAsync_v2, CUdeviceptr *, dptr, size_t *, size, GLuint, buffer, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLCtxCreate, CUresult, cuGLCtxCreate, CUcontext *, pCtx, unsigned int, Flags, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObject, CUresult, cuGLMapBufferObject, CUdeviceptr_v1 *, dptr, unsigned int *, size, GLuint, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GLMapBufferObjectAsync, CUresult, cuGLMapBufferObjectAsync, CUdeviceptr_v1 *, dptr, unsigned int *, size, GLuint, buffer, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11GetDevice, CUresult, cuD3D11GetDevice, CUdevice *, pCudaDevice, IDXGIAdapter *, pAdapter);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11GetDevices, CUresult, cuD3D11GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, ID3D11Device *, pD3D11Device, CUd3d11DeviceList, deviceList);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GraphicsD3D11RegisterResource, CUresult, cuGraphicsD3D11RegisterResource, CUgraphicsResource *, pCudaResource, ID3D11Resource *, pD3DResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11CtxCreate_v2, CUresult, cuD3D11CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D11Device *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11CtxCreateOnDevice, CUresult, cuD3D11CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, ID3D11Device *, pD3DDevice, CUdevice, cudaDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11GetDirect3DDevice, CUresult, cuD3D11GetDirect3DDevice, ID3D11Device **, ppD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D11CtxCreate, CUresult, cuD3D11CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D11Device *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10GetDevice, CUresult, cuD3D10GetDevice, CUdevice *, pCudaDevice, IDXGIAdapter *, pAdapter);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10GetDevices, CUresult, cuD3D10GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, ID3D10Device *, pD3D10Device, CUd3d10DeviceList, deviceList);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GraphicsD3D10RegisterResource, CUresult, cuGraphicsD3D10RegisterResource, CUgraphicsResource *, pCudaResource, ID3D10Resource *, pD3DResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10CtxCreate_v2, CUresult, cuD3D10CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D10Device *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10CtxCreateOnDevice, CUresult, cuD3D10CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, ID3D10Device *, pD3DDevice, CUdevice, cudaDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10GetDirect3DDevice, CUresult, cuD3D10GetDirect3DDevice, ID3D10Device **, ppD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10RegisterResource, CUresult, cuD3D10RegisterResource, ID3D10Resource *, pResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10UnregisterResource, CUresult, cuD3D10UnregisterResource, ID3D10Resource *, pResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10MapResources, CUresult, cuD3D10MapResources, unsigned int, count, ID3D10Resource **, ppResources);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10UnmapResources, CUresult, cuD3D10UnmapResources, unsigned int, count, ID3D10Resource **, ppResources);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceSetMapFlags, CUresult, cuD3D10ResourceSetMapFlags, ID3D10Resource *, pResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedArray, CUresult, cuD3D10ResourceGetMappedArray, CUarray *, pArray, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedPointer_v2, CUresult, cuD3D10ResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedSize_v2, CUresult, cuD3D10ResourceGetMappedSize_v2, size_t *, pSize, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedPitch_v2, CUresult, cuD3D10ResourceGetMappedPitch_v2, size_t *, pPitch, size_t *, pPitchSlice, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetSurfaceDimensions_v2, CUresult, cuD3D10ResourceGetSurfaceDimensions_v2, size_t *, pWidth, size_t *, pHeight, size_t *, pDepth, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10CtxCreate, CUresult, cuD3D10CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, ID3D10Device *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedPitch, CUresult, cuD3D10ResourceGetMappedPitch, unsigned int *, pPitch, unsigned int *, pPitchSlice, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedPointer, CUresult, cuD3D10ResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetMappedSize, CUresult, cuD3D10ResourceGetMappedSize, unsigned int *, pSize, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D10ResourceGetSurfaceDimensions, CUresult, cuD3D10ResourceGetSurfaceDimensions, unsigned int *, pWidth, unsigned int *, pHeight, unsigned int *, pDepth, ID3D10Resource *, pResource, unsigned int, SubResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9GetDevice, CUresult, cuD3D9GetDevice, CUdevice *, pCudaDevice, const char *, pszAdapterName);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9GetDevices, CUresult, cuD3D9GetDevices, unsigned int *, pCudaDeviceCount, CUdevice *, pCudaDevices, unsigned int, cudaDeviceCount, IDirect3DDevice9 *, pD3D9Device, CUd3d9DeviceList, deviceList);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9CtxCreate_v2, CUresult, cuD3D9CtxCreate_v2, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, IDirect3DDevice9 *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9CtxCreateOnDevice, CUresult, cuD3D9CtxCreateOnDevice, CUcontext *, pCtx, unsigned int, flags, IDirect3DDevice9 *, pD3DDevice, CUdevice, cudaDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9GetDirect3DDevice, CUresult, cuD3D9GetDirect3DDevice, IDirect3DDevice9 **, ppD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::GraphicsD3D9RegisterResource, CUresult, cuGraphicsD3D9RegisterResource, CUgraphicsResource *, pCudaResource, IDirect3DResource9 *, pD3DResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9RegisterResource, CUresult, cuD3D9RegisterResource, IDirect3DResource9 *, pResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9UnregisterResource, CUresult, cuD3D9UnregisterResource, IDirect3DResource9 *, pResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9MapResources, CUresult, cuD3D9MapResources, unsigned int, count, IDirect3DResource9 **, ppResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9UnmapResources, CUresult, cuD3D9UnmapResources, unsigned int, count, IDirect3DResource9 **, ppResource);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceSetMapFlags, CUresult, cuD3D9ResourceSetMapFlags, IDirect3DResource9 *, pResource, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetSurfaceDimensions_v2, CUresult, cuD3D9ResourceGetSurfaceDimensions_v2, size_t *, pWidth, size_t *, pHeight, size_t *, pDepth, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedArray, CUresult, cuD3D9ResourceGetMappedArray, CUarray *, pArray, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedPointer_v2, CUresult, cuD3D9ResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedSize_v2, CUresult, cuD3D9ResourceGetMappedSize_v2, size_t *, pSize, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedPitch_v2, CUresult, cuD3D9ResourceGetMappedPitch_v2, size_t *, pPitch, size_t *, pPitchSlice, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9Begin, CUresult, cuD3D9Begin, IDirect3DDevice9 *, pDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9End, CUresult, cuD3D9End);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9RegisterVertexBuffer, CUresult, cuD3D9RegisterVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9MapVertexBuffer_v2, CUresult, cuD3D9MapVertexBuffer_v2, CUdeviceptr *, pDevPtr, size_t *, pSize, IDirect3DVertexBuffer9 *, pVB);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9UnmapVertexBuffer, CUresult, cuD3D9UnmapVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9UnregisterVertexBuffer, CUresult, cuD3D9UnregisterVertexBuffer, IDirect3DVertexBuffer9 *, pVB);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9CtxCreate, CUresult, cuD3D9CtxCreate, CUcontext *, pCtx, CUdevice *, pCudaDevice, unsigned int, Flags, IDirect3DDevice9 *, pD3DDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetSurfaceDimensions, CUresult, cuD3D9ResourceGetSurfaceDimensions, unsigned int *, pWidth, unsigned int *, pHeight, unsigned int *, pDepth, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedPointer, CUresult, cuD3D9ResourceGetMappedPointer, CUdeviceptr_v1 *, pDevPtr, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedSize, CUresult, cuD3D9ResourceGetMappedSize, unsigned int *, pSize, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9ResourceGetMappedPitch, CUresult, cuD3D9ResourceGetMappedPitch, unsigned int *, pPitch, unsigned int *, pPitchSlice, IDirect3DResource9 *, pResource, unsigned int, Face, unsigned int, Level);
DEFINE_EXPORT_C_REDIRECT_CALL(DriverWindows::D3D9MapVertexBuffer, CUresult, cuD3D9MapVertexBuffer, CUdeviceptr_v1 *, pDevPtr, unsigned int *, pSize, IDirect3DVertexBuffer9 *, pVB);

static const std::unordered_map<std::string, void *> intercept_symbol_map = {
    DLSYM_INTERCEPT_ENTRY(cuProfilerInitialize),
    DLSYM_INTERCEPT_ENTRY(cuProfilerStart),
    DLSYM_INTERCEPT_ENTRY(cuProfilerStop),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsGLRegisterBuffer),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsGLRegisterImage),
    DLSYM_INTERCEPT_ENTRY(cuWGLGetDevice),
    DLSYM_INTERCEPT_ENTRY(cuGLGetDevices_v2),
    DLSYM_INTERCEPT_ENTRY(cuGLCtxCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuGLInit),
    DLSYM_INTERCEPT_ENTRY(cuGLRegisterBufferObject),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObject_v2_ptds),
    DLSYM_INTERCEPT_ENTRY(cuGLUnmapBufferObject),
    DLSYM_INTERCEPT_ENTRY(cuGLUnregisterBufferObject),
    DLSYM_INTERCEPT_ENTRY(cuGLSetBufferObjectMapFlags),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObjectAsync_v2_ptsz),
    DLSYM_INTERCEPT_ENTRY(cuGLUnmapBufferObjectAsync),
    DLSYM_INTERCEPT_ENTRY(cuGLGetDevices),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObject_v2),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObjectAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuGLCtxCreate),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObject),
    DLSYM_INTERCEPT_ENTRY(cuGLMapBufferObjectAsync),
    DLSYM_INTERCEPT_ENTRY(cuD3D9GetDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D9GetDevices),
    DLSYM_INTERCEPT_ENTRY(cuD3D9CtxCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9CtxCreateOnDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D9GetDirect3DDevice),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsD3D9RegisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D9RegisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D9UnregisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D9MapResources),
    DLSYM_INTERCEPT_ENTRY(cuD3D9UnmapResources),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceSetMapFlags),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetSurfaceDimensions_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedArray),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedPointer_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedSize_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedPitch_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9Begin),
    DLSYM_INTERCEPT_ENTRY(cuD3D9End),
    DLSYM_INTERCEPT_ENTRY(cuD3D9RegisterVertexBuffer),
    DLSYM_INTERCEPT_ENTRY(cuD3D9MapVertexBuffer_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D9UnmapVertexBuffer),
    DLSYM_INTERCEPT_ENTRY(cuD3D9UnregisterVertexBuffer),
    DLSYM_INTERCEPT_ENTRY(cuD3D9CtxCreate),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetSurfaceDimensions),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedPointer),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedSize),
    DLSYM_INTERCEPT_ENTRY(cuD3D9ResourceGetMappedPitch),
    DLSYM_INTERCEPT_ENTRY(cuD3D9MapVertexBuffer),
    DLSYM_INTERCEPT_ENTRY(cuD3D11GetDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D11GetDevices),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsD3D11RegisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D11CtxCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D11CtxCreateOnDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D11GetDirect3DDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D11CtxCreate),
    DLSYM_INTERCEPT_ENTRY(cuD3D10GetDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D10GetDevices),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsD3D10RegisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D10CtxCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D10CtxCreateOnDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D10GetDirect3DDevice),
    DLSYM_INTERCEPT_ENTRY(cuD3D10RegisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D10UnregisterResource),
    DLSYM_INTERCEPT_ENTRY(cuD3D10MapResources),
    DLSYM_INTERCEPT_ENTRY(cuD3D10UnmapResources),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceSetMapFlags),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedArray),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedPointer_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedSize_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedPitch_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetSurfaceDimensions_v2),
    DLSYM_INTERCEPT_ENTRY(cuD3D10CtxCreate),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedPitch),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedPointer),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetMappedSize),
    DLSYM_INTERCEPT_ENTRY(cuD3D10ResourceGetSurfaceDimensions),
};

DEFINE_DLSYM_INTERCEPT(intercept_symbol_map);

#endif
