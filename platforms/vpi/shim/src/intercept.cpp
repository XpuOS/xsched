/// This file is auto-generated by command "python3 tools/autogen/gen.py -s platforms/vpi/hal/include/xsched/vpi/hal/vpi.h -f vpi -p vpi"
#include "xsched/utils/function.h"
#include "xsched/vpi/hal/driver.h"
#include "xsched/vpi/shim/shim.h"

using namespace xsched::vpi;

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeSwizzle, VPISwizzle, vpiMakeSwizzle, VPIChannel, x, VPIChannel, y, VPIChannel, z, VPIChannel, w);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SwizzleGetChannels, void, vpiSwizzleGetChannels, VPISwizzle, swizzle, VPIChannel *, channels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SwizzleGetChannelCount, int, vpiSwizzleGetChannelCount, VPISwizzle, swizzle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakePacking, VPIPacking, vpiMakePacking, const VPIPackingParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PackingGetParams, void, vpiPackingGetParams, VPIPacking, packing, VPIPackingParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PackingGetComponentCount, int, vpiPackingGetComponentCount, VPIPacking, packing);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PackingGetBitsPerComponent, void, vpiPackingGetBitsPerComponent, VPIPacking, packing, int32_t *, bits);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PackingGetBitsPerPixel, int, vpiPackingGetBitsPerPixel, VPIPacking, packing);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakePixelType, VPIPixelType, vpiMakePixelType, VPIMemLayout, memLayout, VPIDataType, dataType, VPIPacking, packing);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetPacking, VPIPacking, vpiPixelTypeGetPacking, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetBitsPerPixel, int, vpiPixelTypeGetBitsPerPixel, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetBitsPerChannel, void, vpiPixelTypeGetBitsPerChannel, VPIPixelType, type, int32_t *, bits);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetDataType, VPIDataType, vpiPixelTypeGetDataType, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetMemLayout, VPIMemLayout, vpiPixelTypeGetMemLayout, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeSetMemLayout, VPIPixelType, vpiPixelTypeSetMemLayout, VPIPixelType, type, VPIMemLayout, layout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetChannelCount, int, vpiPixelTypeGetChannelCount, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetName, const char *, vpiPixelTypeGetName, VPIPixelType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PixelTypeGetChannelType, VPIPixelType, vpiPixelTypeGetChannelType, VPIPixelType, type, int, channel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeColorSpec, VPIColorSpec, vpiMakeColorSpec, VPIColorSpace, cspace, VPIYCbCrEncoding, encoding, VPIColorTransferFunction, xferFunc, VPIColorRange, range, VPIChromaLocation, locHoriz, VPIChromaLocation, locVert);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeChromaSubsampling, VPIChromaSubsampling, vpiMakeChromaSubsampling, int, samplesHoriz, int, samplesVert);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ChromaSubsamplingGetSamplesHoriz, int, vpiChromaSubsamplingGetSamplesHoriz, VPIChromaSubsampling, css);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ChromaSubsamplingGetSamplesVert, int, vpiChromaSubsamplingGetSamplesVert, VPIChromaSubsampling, css);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetChromaLocHoriz, VPIChromaLocation, vpiColorSpecGetChromaLocHoriz, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetChromaLocVert, VPIChromaLocation, vpiColorSpecGetChromaLocVert, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecSetChromaLoc, VPIColorSpec, vpiColorSpecSetChromaLoc, VPIColorSpec, cspec, VPIChromaLocation, locHoriz, VPIChromaLocation, locVert);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetSpace, VPIColorSpace, vpiColorSpecGetSpace, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecSetSpace, VPIColorSpec, vpiColorSpecSetSpace, VPIColorSpec, cspec, VPIColorSpace, cspace);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetYCbCrEncoding, VPIYCbCrEncoding, vpiColorSpecGetYCbCrEncoding, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecSetYCbCrEncoding, VPIColorSpec, vpiColorSpecSetYCbCrEncoding, VPIColorSpec, cspec, VPIYCbCrEncoding, encoding);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetTransferFunction, VPIColorTransferFunction, vpiColorSpecGetTransferFunction, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecSetTransferFunction, VPIColorSpec, vpiColorSpecSetTransferFunction, VPIColorSpec, cspec, VPIColorTransferFunction, xferFunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetRange, VPIColorRange, vpiColorSpecGetRange, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecSetRange, VPIColorSpec, vpiColorSpecSetRange, VPIColorSpec, cspec, VPIColorRange, range);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ColorSpecGetName, const char *, vpiColorSpecGetName, VPIColorSpec, cspec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetVersion, int, vpiGetVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StatusGetName, const char *, vpiStatusGetName, VPIStatus, code);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetLastStatus, VPIStatus, vpiGetLastStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetLastStatusMessage, VPIStatus, vpiGetLastStatusMessage, char *, msgBuffer, int32_t, lenBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PeekAtLastStatus, VPIStatus, vpiPeekAtLastStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PeekAtLastStatusMessage, VPIStatus, vpiPeekAtLastStatusMessage, char *, msgBuffer, int32_t, lenBuffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeYCbCrImageFormat, VPIImageFormat, vpiMakeYCbCrImageFormat, VPIColorSpec, colorSpec, VPIChromaSubsampling, chromaSub, VPIMemLayout, memLayout, VPIDataType, dataType, VPISwizzle, swizzle, VPIPacking, packing0, VPIPacking, packing1, VPIPacking, packing2, VPIPacking, packing3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeColorImageFormat, VPIImageFormat, vpiMakeColorImageFormat, VPIColorModel, colorModel, VPIColorSpec, colorSpec, VPIMemLayout, memLayout, VPIDataType, dataType, VPISwizzle, swizzle, VPIPacking, packing0, VPIPacking, packing1, VPIPacking, packing2, VPIPacking, packing3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeNonColorImageFormat, VPIImageFormat, vpiMakeNonColorImageFormat, VPIMemLayout, memLayout, VPIDataType, dataType, VPISwizzle, swizzle, VPIPacking, packing0, VPIPacking, packing1, VPIPacking, packing2, VPIPacking, packing3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeRawImageFormat, VPIImageFormat, vpiMakeRawImageFormat, VPIRawPattern, rawPattern, VPIMemLayout, memLayout, VPIDataType, dataType, VPISwizzle, swizzle, VPIPacking, packing0, VPIPacking, packing1, VPIPacking, packing2, VPIPacking, packing3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeImageFormatFromFourCC, VPIImageFormat, vpiMakeImageFormatFromFourCC, uint32_t, fourcc, VPIColorSpec, colorSpec, VPIMemLayout, memLayout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetFourCC, uint32_t, vpiImageFormatGetFourCC, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlanePacking, VPIPacking, vpiImageFormatGetPlanePacking, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneWidth, int32_t, vpiImageFormatGetPlaneWidth, VPIImageFormat, fmt, int32_t, imgWidth, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneHeight, int32_t, vpiImageFormatGetPlaneHeight, VPIImageFormat, fmt, int32_t, imgHeight, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetSwizzleAndPacking, VPIImageFormat, vpiImageFormatSetSwizzleAndPacking, VPIImageFormat, fmt, VPISwizzle, swizzle, VPIPacking, packing0, VPIPacking, packing1, VPIPacking, packing2, VPIPacking, packing3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneBitsPerPixel, int, vpiImageFormatGetPlaneBitsPerPixel, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetDataType, VPIImageFormat, vpiImageFormatSetDataType, VPIImageFormat, fmt, VPIDataType, dataType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetDataType, VPIDataType, vpiImageFormatGetDataType, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetSwizzle, VPISwizzle, vpiImageFormatGetSwizzle, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneSwizzle, VPISwizzle, vpiImageFormatGetPlaneSwizzle, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetMemLayout, VPIImageFormat, vpiImageFormatSetMemLayout, VPIImageFormat, fmt, VPIMemLayout, memLayout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetMemLayout, VPIMemLayout, vpiImageFormatGetMemLayout, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetColorSpec, VPIImageFormat, vpiImageFormatSetColorSpec, VPIImageFormat, fmt, VPIColorSpec, colorSpec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetColorSpec, VPIColorSpec, vpiImageFormatGetColorSpec, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetColorModel, VPIColorModel, vpiImageFormatGetColorModel, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetChromaSubsampling, VPIImageFormat, vpiImageFormatSetChromaSubsampling, VPIImageFormat, fmt, VPIChromaSubsampling, css);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetChromaSubsampling, VPIChromaSubsampling, vpiImageFormatGetChromaSubsampling, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneChannelCount, int, vpiImageFormatGetPlaneChannelCount, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneCount, int, vpiImageFormatGetPlaneCount, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetChannelCount, int, vpiImageFormatGetChannelCount, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetBitsPerChannel, void, vpiImageFormatGetBitsPerChannel, VPIImageFormat, fmt, int32_t *, bits);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlanePixelType, VPIPixelType, vpiImageFormatGetPlanePixelType, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetPlaneFormat, VPIImageFormat, vpiImageFormatGetPlaneFormat, VPIImageFormat, fmt, int, plane);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MakeImageFormatFromPlanes, VPIImageFormat, vpiMakeImageFormatFromPlanes, VPIImageFormat, plane0, VPIImageFormat, plane1, VPIImageFormat, plane2, VPIImageFormat, plane3);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetName, const char *, vpiImageFormatGetName, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatGetRawPattern, VPIRawPattern, vpiImageFormatGetRawPattern, VPIImageFormat, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatSetRawPattern, VPIImageFormat, vpiImageFormatSetRawPattern, VPIImageFormat, fmt, VPIRawPattern, rawPattern);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageFormatHasSameDataLayout, int, vpiImageFormatHasSameDataLayout, VPIImageFormat, a, VPIImageFormat, b);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreate, VPIStatus, vpiImageCreate, int32_t, width, int32_t, height, VPIImageFormat, fmt, uint64_t, flags, VPIImage *, img);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitImageWrapperParams, VPIStatus, vpiInitImageWrapperParams, VPIImageWrapperParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreateView, VPIStatus, vpiImageCreateView, VPIImage, imgParent, const VPIRectangleI *, clipBounds, uint64_t, flags, VPIImage *, imgView);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageSetView, VPIStatus, vpiImageSetView, VPIImage, view, VPIImage, parent, const VPIRectangleI *, clipBounds);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreateWrapper, VPIStatus, vpiImageCreateWrapper, const VPIImageData *, data, const VPIImageWrapperParams *, params, uint64_t, flags, VPIImage *, img);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageSetWrapper, VPIStatus, vpiImageSetWrapper, VPIImage, img, const VPIImageData *, data);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageDestroy, void, vpiImageDestroy, VPIImage, img);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetSize, VPIStatus, vpiImageGetSize, VPIImage, img, int32_t *, width, int32_t *, height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetFormat, VPIStatus, vpiImageGetFormat, VPIImage, img, VPIImageFormat *, format);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetFlags, VPIStatus, vpiImageGetFlags, VPIImage, img, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageLock, VPIStatus, vpiImageLock, VPIImage, img, VPILockMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageLockData, VPIStatus, vpiImageLockData, VPIImage, img, VPILockMode, mode, VPIImageBufferType, bufType, VPIImageData *, data);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageUnlock, VPIStatus, vpiImageUnlock, VPIImage, img);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayTypeGetName, const char *, vpiArrayTypeGetName, VPIArrayType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayTypeGetSize, int, vpiArrayTypeGetSize, VPIArrayType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WarpMapAllocData, VPIStatus, vpiWarpMapAllocData, VPIWarpMap *, warpMap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WarpMapFreeData, void, vpiWarpMapFreeData, VPIWarpMap *, warpMap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WarpMapGenerateIdentity, VPIStatus, vpiWarpMapGenerateIdentity, VPIWarpMap *, warpMap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitFASTCornerDetectorParams, VPIStatus, vpiInitFASTCornerDetectorParams, VPIFASTCornerDetectorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitFASTCornerDetector, VPIStatus, vpiSubmitFASTCornerDetector, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIArray, outCorners, const VPIFASTCornerDetectorParams *, params, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidCreate, VPIStatus, vpiPyramidCreate, int32_t, width, int32_t, height, VPIImageFormat, fmt, int32_t, numLevels, float, scale, uint64_t, flags, VPIPyramid *, pyr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidDestroy, void, vpiPyramidDestroy, VPIPyramid, pyr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidGetFlags, VPIStatus, vpiPyramidGetFlags, VPIPyramid, pyr, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidGetFormat, VPIStatus, vpiPyramidGetFormat, VPIPyramid, pyr, VPIImageFormat *, fmt);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidGetNumLevels, VPIStatus, vpiPyramidGetNumLevels, VPIPyramid, pyr, int32_t *, numLevels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidGetSize, VPIStatus, vpiPyramidGetSize, VPIPyramid, pyr, int32_t, outSize, int32_t *, outWidth, int32_t *, outHeight);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidGetScale, VPIStatus, vpiPyramidGetScale, VPIPyramid, pyr, float *, scale);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidLock, VPIStatus, vpiPyramidLock, VPIPyramid, pyr, VPILockMode, lock);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidLockData, VPIStatus, vpiPyramidLockData, VPIPyramid, pyr, VPILockMode, lock, VPIImageBufferType, bufType, VPIPyramidData *, out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PyramidUnlock, VPIStatus, vpiPyramidUnlock, VPIPyramid, pyr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreateWrapperPyramidLevel, VPIStatus, vpiImageCreateWrapperPyramidLevel, VPIPyramid, pyr, int32_t, level, VPIImage *, img);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamCreate, VPIStatus, vpiStreamCreate, uint64_t, flags, VPIStream *, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamDestroy, void, vpiStreamDestroy, VPIStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamFlush, VPIStatus, vpiStreamFlush, VPIStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XStreamSync, VPIStatus, vpiStreamSync, VPIStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitEvent, VPIStatus, vpiStreamWaitEvent, VPIStream, stream, VPIEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetThreadHandle, VPIStatus, vpiStreamGetThreadHandle, VPIStream, stream, VPINativeThreadHandle *, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetFlags, VPIStatus, vpiStreamGetFlags, VPIStream, stream, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PayloadGetFlags, VPIStatus, vpiPayloadGetFlags, VPIPayload, payload, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PayloadDestroy, void, vpiPayloadDestroy, VPIPayload, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, VPIStatus, vpiEventCreate, uint64_t, flags, VPIEvent *, event);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy, void, vpiEventDestroy, VPIEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventRecord, VPIStatus, vpiEventRecord, VPIEvent, event, VPIStream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventSync, VPIStatus, vpiEventSync, VPIEvent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQuery, VPIStatus, vpiEventQuery, VPIEvent, event, VPIEventState *, state);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventElapsedTimeMillis, VPIStatus, vpiEventElapsedTimeMillis, VPIEvent, start, VPIEvent, end, float *, msec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetFlags, VPIStatus, vpiEventGetFlags, VPIEvent, event, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreate, VPIStatus, vpiContextCreate, uint64_t, flags, VPIContext *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreateWrapperCUDA, VPIStatus, vpiContextCreateWrapperCUDA, uint64_t, flags, CUcontext, cudaCtx, VPIContext *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextDestroy, void, vpiContextDestroy, VPIContext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextSetParallelFor, VPIStatus, vpiContextSetParallelFor, VPIContext, ctx, const VPIParallelForConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextGetParallelFor, VPIStatus, vpiContextGetParallelFor, VPIContext, ctx, VPIParallelForConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextGetCurrent, VPIStatus, vpiContextGetCurrent, VPIContext *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextSetCurrent, VPIStatus, vpiContextSetCurrent, VPIContext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextPush, VPIStatus, vpiContextPush, VPIContext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextPop, VPIStatus, vpiContextPop, VPIContext *, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextGetFlags, VPIStatus, vpiContextGetFlags, VPIContext, ctx, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreate, VPIStatus, vpiArrayCreate, int32_t, capacity, VPIArrayType, type, uint64_t, flags, VPIArray *, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreateWrapper, VPIStatus, vpiArrayCreateWrapper, const VPIArrayData *, data, uint64_t, flags, VPIArray *, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArraySetWrapper, VPIStatus, vpiArraySetWrapper, VPIArray, array, const VPIArrayData *, data);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayDestroy, void, vpiArrayDestroy, VPIArray, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetSize, VPIStatus, vpiArrayGetSize, VPIArray, array, int32_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArraySetSize, VPIStatus, vpiArraySetSize, VPIArray, array, int32_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetCapacity, VPIStatus, vpiArrayGetCapacity, VPIArray, array, int32_t *, capacity);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetStrideBytes, VPIStatus, vpiArrayGetStrideBytes, VPIArray, array, int32_t *, strideBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetFlags, VPIStatus, vpiArrayGetFlags, VPIArray, array, uint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetType, VPIStatus, vpiArrayGetType, VPIArray, array, VPIArrayType *, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayLock, VPIStatus, vpiArrayLock, VPIArray, array, VPILockMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayLockData, VPIStatus, vpiArrayLockData, VPIArray, array, VPILockMode, mode, VPIArrayBufferType, bufType, VPIArrayData *, data);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayUnlock, VPIStatus, vpiArrayUnlock, VPIArray, array);
DEFINE_EXPORT_C_REDIRECT_CALL(XSubmitRescale, VPIStatus, vpiSubmitRescale, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, VPIInterpolationType, interpolationType, VPIBorderExtension, border, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitHarrisCornerDetectorParams, VPIStatus, vpiInitHarrisCornerDetectorParams, VPIHarrisCornerDetectorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateHarrisCornerDetector, VPIStatus, vpiCreateHarrisCornerDetector, uint64_t, backends, int32_t, inputWidth, int32_t, inputHeight, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitHarrisCornerDetector, VPIStatus, vpiSubmitHarrisCornerDetector, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIArray, outFeatures, VPIArray, outScores, const VPIHarrisCornerDetectorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitKLTFeatureTrackerCreationParams, VPIStatus, vpiInitKLTFeatureTrackerCreationParams, VPIKLTFeatureTrackerCreationParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateKLTFeatureTracker, VPIStatus, vpiCreateKLTFeatureTracker, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIImageFormat, imageFormat, const VPIKLTFeatureTrackerCreationParams *, params, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitKLTFeatureTrackerParams, VPIStatus, vpiInitKLTFeatureTrackerParams, VPIKLTFeatureTrackerParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitKLTFeatureTracker, VPIStatus, vpiSubmitKLTFeatureTracker, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, templateImage, VPIArray, inputBoxList, VPIArray, inputPredictionList, VPIImage, referenceImage, VPIArray, outputBoxList, VPIArray, outputEstimationList, const VPIKLTFeatureTrackerParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateMinMaxLoc, VPIStatus, vpiCreateMinMaxLoc, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIImageFormat, imageFormat, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitMinMaxLoc, VPIStatus, vpiSubmitMinMaxLoc, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIArray, minCoords, VPIArray, maxCoords);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateHistogramEven, VPIStatus, vpiCreateHistogramEven, uint64_t, backends, VPIImageFormat, fmt, float, start, float, end, int32_t, numBins, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitHistogram, VPIStatus, vpiSubmitHistogram, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIArray, output, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(XSubmitGaussianFilter, VPIStatus, vpiSubmitGaussianFilter, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, int32_t, kernelSizeX, int32_t, kernelSizeY, float, sigmaX, float, sigmaY, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitMixChannels, VPIStatus, vpiSubmitMixChannels, VPIStream, stream, uint64_t, backend, VPIImage *, inputs, int, numInputs, VPIImage *, outputs, int, numOutputs, const int *, inMapping, const int *, outMapping, int, numMapping);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitBoxFilter, VPIStatus, vpiSubmitBoxFilter, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, int32_t, kernelWidth, int32_t, kernelHeight, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitStereoDisparityEstimatorCreationParams, VPIStatus, vpiInitStereoDisparityEstimatorCreationParams, VPIStereoDisparityEstimatorCreationParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateStereoDisparityEstimator, VPIStatus, vpiCreateStereoDisparityEstimator, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIImageFormat, inputFormat, const VPIStereoDisparityEstimatorCreationParams *, params, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitStereoDisparityEstimatorParams, VPIStatus, vpiInitStereoDisparityEstimatorParams, VPIStereoDisparityEstimatorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(XSubmitStereoDisparityEstimator, VPIStatus, vpiSubmitStereoDisparityEstimator, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, left, VPIImage, right, VPIImage, disparity, VPIImage, confidenceMap, const VPIStereoDisparityEstimatorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitPerspectiveWarp, VPIStatus, vpiSubmitPerspectiveWarp, VPIStream, stream, uint64_t, backend, VPIImage, input, const VPIPerspectiveTransform, xform, VPIImage, output, const VPIWarpGrid *, grid, VPIInterpolationType, interp, VPIBorderExtension, border, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitORBParams, VPIStatus, vpiInitORBParams, VPIORBParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateORBFeatureDetector, VPIStatus, vpiCreateORBFeatureDetector, uint64_t, backends, int32_t, capacity, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitORBFeatureDetector, VPIStatus, vpiSubmitORBFeatureDetector, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIPyramid, input, VPIArray, outCorners, VPIArray, outDescriptors, const VPIORBParams *, params, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateORBDescriptorExtractor, VPIStatus, vpiCreateORBDescriptorExtractor, uint64_t, backends, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitORBDescriptorExtractor, VPIStatus, vpiSubmitORBDescriptorExtractor, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIArray, inCorners, VPIArray, outDescriptors, uint32_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitOpticalFlowPyrLKParams, VPIStatus, vpiInitOpticalFlowPyrLKParams, VPIOpticalFlowPyrLKParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateOpticalFlowPyrLK, VPIStatus, vpiCreateOpticalFlowPyrLK, uint64_t, backends, int32_t, width, int32_t, height, VPIImageFormat, fmt, int32_t, levels, float, scale, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitOpticalFlowPyrLK, VPIStatus, vpiSubmitOpticalFlowPyrLK, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIPyramid, prevPyr, VPIPyramid, curPyr, VPIArray, prevPts, VPIArray, curPts, VPIArray, trackingStatus, const VPIOpticalFlowPyrLKParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateCannyEdgeDetector, VPIStatus, vpiCreateCannyEdgeDetector, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitCannyEdgeDetectorParams, VPIStatus, vpiInitCannyEdgeDetectorParams, VPICannyEdgeDetectorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitCannyEdgeDetector, VPIStatus, vpiSubmitCannyEdgeDetector, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage, output, float, thresholdStrong, float, thresholdWeak, float, edgeValue, float, nonEdgeValue, const VPICannyEdgeDetectorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitConvertImageFormatParams, VPIStatus, vpiInitConvertImageFormatParams, VPIConvertImageFormatParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(XSubmitConvertImageFormat, VPIStatus, vpiSubmitConvertImageFormat, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, const VPIConvertImageFormatParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitConvertImageFormatPyramid, VPIStatus, vpiSubmitConvertImageFormatPyramid, VPIStream, stream, uint64_t, backend, VPIPyramid, input, VPIPyramid, output, const VPIConvertImageFormatParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitImageStats, VPIStatus, vpiSubmitImageStats, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIArray, statistics, VPIImage, mask, uint32_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitGaussianPyramidGenerator, VPIStatus, vpiSubmitGaussianPyramidGenerator, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIPyramid, output, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitBruteForceMatcher, VPIStatus, vpiSubmitBruteForceMatcher, VPIStream, stream, uint64_t, backend, VPIArray, queryDescriptor, VPIArray, referenceDescriptor, VPINormType, normType, int32_t, maxMatchesPerQuery, VPIArray, matches, uint32_t, algoFlag);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateTransformEstimator, VPIStatus, vpiCreateTransformEstimator, uint64_t, backends, int32_t, maxKeypoints, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitTransformEstimatorParams, VPIStatus, vpiInitTransformEstimatorParams, VPITransformType, type, VPITransformEstimatorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitTransformEstimator, VPIStatus, vpiSubmitTransformEstimator, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIArray, srcKeypoints, VPIArray, tgtKeypoints, VPIArray, matches, VPIArray, outTransform, VPIArray, outInliers, const VPITransformEstimatorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitBackgroundSubtractorParams, VPIStatus, vpiInitBackgroundSubtractorParams, VPIBackgroundSubtractorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateBackgroundSubtractor, VPIStatus, vpiCreateBackgroundSubtractor, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIImageFormat, inputFormat, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitBackgroundSubtractor, VPIStatus, vpiSubmitBackgroundSubtractor, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, inFrame, VPIImage, outFGMask, VPIImage, outBGImage, const VPIBackgroundSubtractorParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateTemporalNoiseReduction, VPIStatus, vpiCreateTemporalNoiseReduction, uint64_t, backends, int32_t, width, int32_t, height, VPIImageFormat, imgFormat, VPITNRVersion, version, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitTemporalNoiseReductionParams, VPIStatus, vpiInitTemporalNoiseReductionParams, VPITNRParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitTemporalNoiseReduction, VPIStatus, vpiSubmitTemporalNoiseReduction, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, prevFrame, VPIImage, curFrame, VPIImage, outFrame, const VPITNRParams *, params);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitBilateralFilter, VPIStatus, vpiSubmitBilateralFilter, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, int32_t, kernelSize, float, sigmaRange, float, sigmaSpace, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateOpticalFlowDense, VPIStatus, vpiCreateOpticalFlowDense, uint64_t, backends, int32_t, width, int32_t, height, VPIImageFormat, inputFmt, const int32_t *, gridSize, int32_t, numLevels, VPIOpticalFlowQuality, quality, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitOpticalFlowDense, VPIStatus, vpiSubmitOpticalFlowDense, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, prevImg, VPIImage, curImg, VPIImage, mvImg);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitOpticalFlowDensePyramid, VPIStatus, vpiSubmitOpticalFlowDensePyramid, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIPyramid, prevPyr, VPIPyramid, curPyr, VPIImage, mvImg);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OpticalFlowDenseGetSGMParams, VPIStatus, vpiOpticalFlowDenseGetSGMParams, VPIPayload, payload, VPIOpticalFlowDenseSGMParams *, sgmParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OpticalFlowDenseSetSGMParams, VPIStatus, vpiOpticalFlowDenseSetSGMParams, VPIPayload, payload, const VPIOpticalFlowDenseSGMParams *, sgmParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitConvolution, VPIStatus, vpiSubmitConvolution, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, const float *, kernelData, int32_t, kernelWidth, int32_t, kernelHeight, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitSeparableConvolution, VPIStatus, vpiSubmitSeparableConvolution, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, const float *, kernelXData, int32_t, kernelXSize, const float *, kernelYData, int32_t, kernelYSize, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateTemplateMatching, VPIStatus, vpiCreateTemplateMatching, uint64_t, backends, int32_t, imageWidth, int32_t, imageHeight, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TemplateMatchingSetSourceImage, VPIStatus, vpiTemplateMatchingSetSourceImage, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, srcImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TemplateMatchingSetTemplateImage, VPIStatus, vpiTemplateMatchingSetTemplateImage, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, templImage, VPIImage, mask);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitTemplateMatching, VPIStatus, vpiSubmitTemplateMatching, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, output, VPITemplateMatchingMethod, method);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitImageFlip, VPIStatus, vpiSubmitImageFlip, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, VPIFlipMode, flipMode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitLaplacianPyramidGenerator, VPIStatus, vpiSubmitLaplacianPyramidGenerator, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIPyramid, output, VPIPyramid, gaussianPyr, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateRemap, VPIStatus, vpiCreateRemap, uint64_t, backends, const VPIWarpMap *, warpMap, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitRemap, VPIStatus, vpiSubmitRemap, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage, output, VPIInterpolationType, interp, VPIBorderExtension, border, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitErode, VPIStatus, vpiSubmitErode, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, const int8_t *, kernelData, int32_t, kernelWidth, int32_t, kernelHeight, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitDilate, VPIStatus, vpiSubmitDilate, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, const int8_t *, kernelData, int32_t, kernelWidth, int32_t, kernelHeight, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateEqualizeHist, VPIStatus, vpiCreateEqualizeHist, uint64_t, backend, VPIImageFormat, fmt, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitEqualizeHist, VPIStatus, vpiSubmitEqualizeHist, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage, output);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateFFT, VPIStatus, vpiCreateFFT, uint64_t, backends, int32_t, inputWidth, int32_t, inputHeight, const VPIImageFormat, inFormat, const VPIImageFormat, outFormat, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitFFT, VPIStatus, vpiSubmitFFT, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage, output, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateIFFT, VPIStatus, vpiCreateIFFT, uint64_t, backends, int32_t, outputWidth, int32_t, outputHeight, const VPIImageFormat, inFormat, const VPIImageFormat, outFormat, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitIFFT, VPIStatus, vpiSubmitIFFT, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage, output, uint64_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitMedianFilter, VPIStatus, vpiSubmitMedianFilter, VPIStream, stream, uint64_t, backend, VPIImage, input, VPIImage, output, int32_t, kernelWidth, int32_t, kernelHeight, const int8_t *, kernelData, VPIBorderExtension, border);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateExtractHOGFeatures, VPIStatus, vpiCreateExtractHOGFeatures, uint64_t, backends, int32_t, width, int32_t, height, int32_t, features, int32_t, cellSize, int32_t, numOrientations, int32_t *, outNumFeatures, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateExtractHOGFeaturesBatch, VPIStatus, vpiCreateExtractHOGFeaturesBatch, uint64_t, backends, int32_t, maxBatchWidth, int32_t, maxBatchHeight, int32_t, imgWidth, int32_t, imgHeight, int32_t, features, int32_t, cellSize, int32_t, numOrientations, int32_t *, outNumFeatures, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitExtractHOGFeatures, VPIStatus, vpiSubmitExtractHOGFeatures, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage *, outFeatures, int32_t, numFeatures);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CreateExtractColorNameFeatures, VPIStatus, vpiCreateExtractColorNameFeatures, uint64_t, backends, VPIImageFormat, outFormat, VPIPayload *, payload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitExtractColorNameFeatures, VPIStatus, vpiSubmitExtractColorNameFeatures, VPIStream, stream, uint64_t, backend, VPIPayload, payload, VPIImage, input, VPIImage *, output, int32_t, numOutputs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WarpMapGenerateFromFisheyeLensDistortionModel, VPIStatus, vpiWarpMapGenerateFromFisheyeLensDistortionModel, const VPICameraIntrinsic, Kin, const VPICameraExtrinsic, X, const VPICameraIntrinsic, Kout, const VPIFisheyeLensDistortionModel *, distModel, VPIWarpMap *, warpMap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WarpMapGenerateFromPolynomialLensDistortionModel, VPIStatus, vpiWarpMapGenerateFromPolynomialLensDistortionModel, const VPICameraIntrinsic, Kin, const VPICameraExtrinsic, X, const VPICameraIntrinsic, Kout, const VPIPolynomialLensDistortionModel *, distModel, VPIWarpMap *, warpMap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitHostFunction, VPIStatus, vpiSubmitHostFunction, VPIStream, stream, VPIHostFunction, hostFunc, void *, hostData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SubmitHostFunctionEx, VPIStatus, vpiSubmitHostFunctionEx, VPIStream, stream, VPIHostFunctionEx, hostFunc, void *, hostData);
