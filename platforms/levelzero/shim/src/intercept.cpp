/// This file is auto-generated by command "python3 tools/autogen/gen.py --source platforms/levelzero/hal/include/xsched/levelzero/hal/ze_api.h --lib /usr/lib/x86_64-linux-gnu/libze_loader.so --platform levelzero --prefix ze -I /usr/lib/gcc/x86_64-linux-gnu/13/include"
#include "xsched/utils/function.h"
#include "xsched/levelzero/hal/driver.h"
#include "xsched/levelzero/shim/shim.h"
using namespace xsched::levelzero;

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Init, ze_result_t, zeInit, ze_init_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGet, ze_result_t, zeDriverGet, uint32_t *, pCount, ze_driver_handle_t *, phDrivers);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitDrivers, ze_result_t, zeInitDrivers, uint32_t *, pCount, ze_driver_handle_t *, phDrivers, ze_init_driver_type_desc_t *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetApiVersion, ze_result_t, zeDriverGetApiVersion, ze_driver_handle_t, hDriver, ze_api_version_t *, version);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetProperties, ze_result_t, zeDriverGetProperties, ze_driver_handle_t, hDriver, ze_driver_properties_t *, pDriverProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetIpcProperties, ze_result_t, zeDriverGetIpcProperties, ze_driver_handle_t, hDriver, ze_driver_ipc_properties_t *, pIpcProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetExtensionProperties, ze_result_t, zeDriverGetExtensionProperties, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_driver_extension_properties_t *, pExtensionProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetExtensionFunctionAddress, ze_result_t, zeDriverGetExtensionFunctionAddress, ze_driver_handle_t, hDriver, const char *, name, void **, ppFunctionAddress);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetLastErrorDescription, ze_result_t, zeDriverGetLastErrorDescription, ze_driver_handle_t, hDriver, const char **, ppString);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGet, ze_result_t, zeDeviceGet, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_device_handle_t *, phDevices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetRootDevice, ze_result_t, zeDeviceGetRootDevice, ze_device_handle_t, hDevice, ze_device_handle_t *, phRootDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetSubDevices, ze_result_t, zeDeviceGetSubDevices, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_handle_t *, phSubdevices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetProperties, ze_result_t, zeDeviceGetProperties, ze_device_handle_t, hDevice, ze_device_properties_t *, pDeviceProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetComputeProperties, ze_result_t, zeDeviceGetComputeProperties, ze_device_handle_t, hDevice, ze_device_compute_properties_t *, pComputeProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetModuleProperties, ze_result_t, zeDeviceGetModuleProperties, ze_device_handle_t, hDevice, ze_device_module_properties_t *, pModuleProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCommandQueueGroupProperties, ze_result_t, zeDeviceGetCommandQueueGroupProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_command_queue_group_properties_t *, pCommandQueueGroupProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemoryProperties, ze_result_t, zeDeviceGetMemoryProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_memory_properties_t *, pMemProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemoryAccessProperties, ze_result_t, zeDeviceGetMemoryAccessProperties, ze_device_handle_t, hDevice, ze_device_memory_access_properties_t *, pMemAccessProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCacheProperties, ze_result_t, zeDeviceGetCacheProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_cache_properties_t *, pCacheProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetImageProperties, ze_result_t, zeDeviceGetImageProperties, ze_device_handle_t, hDevice, ze_device_image_properties_t *, pImageProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetExternalMemoryProperties, ze_result_t, zeDeviceGetExternalMemoryProperties, ze_device_handle_t, hDevice, ze_device_external_memory_properties_t *, pExternalMemoryProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetP2PProperties, ze_result_t, zeDeviceGetP2PProperties, ze_device_handle_t, hDevice, ze_device_handle_t, hPeerDevice, ze_device_p2p_properties_t *, pP2PProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceCanAccessPeer, ze_result_t, zeDeviceCanAccessPeer, ze_device_handle_t, hDevice, ze_device_handle_t, hPeerDevice, ze_bool_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetStatus, ze_result_t, zeDeviceGetStatus, ze_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetGlobalTimestamps, ze_result_t, zeDeviceGetGlobalTimestamps, ze_device_handle_t, hDevice, uint64_t *, hostTimestamp, uint64_t *, deviceTimestamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreate, ze_result_t, zeContextCreate, ze_driver_handle_t, hDriver, const ze_context_desc_t *, desc, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreateEx, ze_result_t, zeContextCreateEx, ze_driver_handle_t, hDriver, const ze_context_desc_t *, desc, uint32_t, numDevices, ze_device_handle_t *, phDevices, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextDestroy, ze_result_t, zeContextDestroy, ze_context_handle_t, hContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextGetStatus, ze_result_t, zeContextGetStatus, ze_context_handle_t, hContext);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueCreate, ze_result_t, zeCommandQueueCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_queue_desc_t *, desc, ze_command_queue_handle_t *, phCommandQueue);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueDestroy, ze_result_t, zeCommandQueueDestroy, ze_command_queue_handle_t, hCommandQueue);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueExecuteCommandLists, ze_result_t, zeCommandQueueExecuteCommandLists, ze_command_queue_handle_t, hCommandQueue, uint32_t, numCommandLists, ze_command_list_handle_t *, phCommandLists, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueSynchronize, ze_result_t, zeCommandQueueSynchronize, ze_command_queue_handle_t, hCommandQueue, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandQueueGetOrdinal, ze_result_t, zeCommandQueueGetOrdinal, ze_command_queue_handle_t, hCommandQueue, uint32_t *, pOrdinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandQueueGetIndex, ze_result_t, zeCommandQueueGetIndex, ze_command_queue_handle_t, hCommandQueue, uint32_t *, pIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListCreate, ze_result_t, zeCommandListCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_list_desc_t *, desc, ze_command_list_handle_t *, phCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListCreateImmediate, ze_result_t, zeCommandListCreateImmediate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_queue_desc_t *, altdesc, ze_command_list_handle_t *, phCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListDestroy, ze_result_t, zeCommandListDestroy, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListClose, ze_result_t, zeCommandListClose, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListReset, ze_result_t, zeCommandListReset, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWriteGlobalTimestamp, ze_result_t, zeCommandListAppendWriteGlobalTimestamp, ze_command_list_handle_t, hCommandList, uint64_t *, dstptr, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListHostSynchronize, ze_result_t, zeCommandListHostSynchronize, ze_command_list_handle_t, hCommandList, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetDeviceHandle, ze_result_t, zeCommandListGetDeviceHandle, ze_command_list_handle_t, hCommandList, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetContextHandle, ze_result_t, zeCommandListGetContextHandle, ze_command_list_handle_t, hCommandList, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetOrdinal, ze_result_t, zeCommandListGetOrdinal, ze_command_list_handle_t, hCommandList, uint32_t *, pOrdinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListImmediateGetIndex, ze_result_t, zeCommandListImmediateGetIndex, ze_command_list_handle_t, hCommandListImmediate, uint32_t *, pIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListIsImmediate, ze_result_t, zeCommandListIsImmediate, ze_command_list_handle_t, hCommandList, ze_bool_t *, pIsImmediate);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendBarrier, ze_result_t, zeCommandListAppendBarrier, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryRangesBarrier, ze_result_t, zeCommandListAppendMemoryRangesBarrier, ze_command_list_handle_t, hCommandList, uint32_t, numRanges, const size_t *, pRangeSizes, const void **, pRanges, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextSystemBarrier, ze_result_t, zeContextSystemBarrier, ze_context_handle_t, hContext, ze_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListAppendMemoryCopy, ze_result_t, zeCommandListAppendMemoryCopy, ze_command_list_handle_t, hCommandList, void *, dstptr, const void *, srcptr, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryFill, ze_result_t, zeCommandListAppendMemoryFill, ze_command_list_handle_t, hCommandList, void *, ptr, const void *, pattern, size_t, pattern_size, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryCopyRegion, ze_result_t, zeCommandListAppendMemoryCopyRegion, ze_command_list_handle_t, hCommandList, void *, dstptr, const ze_copy_region_t *, dstRegion, uint32_t, dstPitch, uint32_t, dstSlicePitch, const void *, srcptr, const ze_copy_region_t *, srcRegion, uint32_t, srcPitch, uint32_t, srcSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryCopyFromContext, ze_result_t, zeCommandListAppendMemoryCopyFromContext, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_context_handle_t, hContextSrc, const void *, srcptr, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopy, ze_result_t, zeCommandListAppendImageCopy, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, ze_image_handle_t, hSrcImage, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyRegion, ze_result_t, zeCommandListAppendImageCopyRegion, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pDstRegion, const ze_image_region_t *, pSrcRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyToMemory, ze_result_t, zeCommandListAppendImageCopyToMemory, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pSrcRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyFromMemory, ze_result_t, zeCommandListAppendImageCopyFromMemory, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, const void *, srcptr, const ze_image_region_t *, pDstRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryPrefetch, ze_result_t, zeCommandListAppendMemoryPrefetch, ze_command_list_handle_t, hCommandList, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemAdvise, ze_result_t, zeCommandListAppendMemAdvise, ze_command_list_handle_t, hCommandList, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_advice_t, advice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolCreate, ze_result_t, zeEventPoolCreate, ze_context_handle_t, hContext, const ze_event_pool_desc_t *, desc, uint32_t, numDevices, ze_device_handle_t *, phDevices, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolDestroy, ze_result_t, zeEventPoolDestroy, ze_event_pool_handle_t, hEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, ze_result_t, zeEventCreate, ze_event_pool_handle_t, hEventPool, const ze_event_desc_t *, desc, ze_event_handle_t *, phEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy, ze_result_t, zeEventDestroy, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetIpcHandle, ze_result_t, zeEventPoolGetIpcHandle, ze_event_pool_handle_t, hEventPool, ze_ipc_event_pool_handle_t *, phIpc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolPutIpcHandle, ze_result_t, zeEventPoolPutIpcHandle, ze_context_handle_t, hContext, ze_ipc_event_pool_handle_t, hIpc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolOpenIpcHandle, ze_result_t, zeEventPoolOpenIpcHandle, ze_context_handle_t, hContext, ze_ipc_event_pool_handle_t, hIpc, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolCloseIpcHandle, ze_result_t, zeEventPoolCloseIpcHandle, ze_event_pool_handle_t, hEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendSignalEvent, ze_result_t, zeCommandListAppendSignalEvent, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWaitOnEvents, ze_result_t, zeCommandListAppendWaitOnEvents, ze_command_list_handle_t, hCommandList, uint32_t, numEvents, ze_event_handle_t *, phEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostSignal, ze_result_t, zeEventHostSignal, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostSynchronize, ze_result_t, zeEventHostSynchronize, ze_event_handle_t, hEvent, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventQueryStatus, ze_result_t, zeEventQueryStatus, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendEventReset, ze_result_t, zeCommandListAppendEventReset, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostReset, ze_result_t, zeEventHostReset, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryKernelTimestamp, ze_result_t, zeEventQueryKernelTimestamp, ze_event_handle_t, hEvent, ze_kernel_timestamp_result_t *, dstptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendQueryKernelTimestamps, ze_result_t, zeCommandListAppendQueryKernelTimestamps, ze_command_list_handle_t, hCommandList, uint32_t, numEvents, ze_event_handle_t *, phEvents, void *, dstptr, const size_t *, pOffsets, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetEventPool, ze_result_t, zeEventGetEventPool, ze_event_handle_t, hEvent, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetSignalScope, ze_result_t, zeEventGetSignalScope, ze_event_handle_t, hEvent, ze_event_scope_flags_t *, pSignalScope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetWaitScope, ze_result_t, zeEventGetWaitScope, ze_event_handle_t, hEvent, ze_event_scope_flags_t *, pWaitScope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetContextHandle, ze_result_t, zeEventPoolGetContextHandle, ze_event_pool_handle_t, hEventPool, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetFlags, ze_result_t, zeEventPoolGetFlags, ze_event_pool_handle_t, hEventPool, ze_event_pool_flags_t *, pFlags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FenceCreate, ze_result_t, zeFenceCreate, ze_command_queue_handle_t, hCommandQueue, const ze_fence_desc_t *, desc, ze_fence_handle_t *, phFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceDestroy, ze_result_t, zeFenceDestroy, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceHostSynchronize, ze_result_t, zeFenceHostSynchronize, ze_fence_handle_t, hFence, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceQueryStatus, ze_result_t, zeFenceQueryStatus, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceReset, ze_result_t, zeFenceReset, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetProperties, ze_result_t, zeImageGetProperties, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_properties_t *, pImageProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreate, ze_result_t, zeImageCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t *, phImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageDestroy, ze_result_t, zeImageDestroy, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocShared, ze_result_t, zeMemAllocShared, ze_context_handle_t, hContext, const ze_device_mem_alloc_desc_t *, device_desc, const ze_host_mem_alloc_desc_t *, host_desc, size_t, size, size_t, alignment, ze_device_handle_t, hDevice, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocDevice, ze_result_t, zeMemAllocDevice, ze_context_handle_t, hContext, const ze_device_mem_alloc_desc_t *, device_desc, size_t, size, size_t, alignment, ze_device_handle_t, hDevice, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost, ze_result_t, zeMemAllocHost, ze_context_handle_t, hContext, const ze_host_mem_alloc_desc_t *, host_desc, size_t, size, size_t, alignment, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFree, ze_result_t, zeMemFree, ze_context_handle_t, hContext, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocProperties, ze_result_t, zeMemGetAllocProperties, ze_context_handle_t, hContext, const void *, ptr, ze_memory_allocation_properties_t *, pMemAllocProperties, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange, ze_result_t, zeMemGetAddressRange, ze_context_handle_t, hContext, const void *, ptr, void **, pBase, size_t *, pSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetIpcHandle, ze_result_t, zeMemGetIpcHandle, ze_context_handle_t, hContext, const void *, ptr, ze_ipc_mem_handle_t *, pIpcHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetIpcHandleFromFileDescriptorExp, ze_result_t, zeMemGetIpcHandleFromFileDescriptorExp, ze_context_handle_t, hContext, uint64_t, handle, ze_ipc_mem_handle_t *, pIpcHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetFileDescriptorFromIpcHandleExp, ze_result_t, zeMemGetFileDescriptorFromIpcHandleExp, ze_context_handle_t, hContext, ze_ipc_mem_handle_t, ipcHandle, uint64_t *, pHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPutIpcHandle, ze_result_t, zeMemPutIpcHandle, ze_context_handle_t, hContext, ze_ipc_mem_handle_t, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemOpenIpcHandle, ze_result_t, zeMemOpenIpcHandle, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_ipc_mem_handle_t, handle, ze_ipc_memory_flags_t, flags, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemCloseIpcHandle, ze_result_t, zeMemCloseIpcHandle, ze_context_handle_t, hContext, const void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemSetAtomicAccessAttributeExp, ze_result_t, zeMemSetAtomicAccessAttributeExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_atomic_attr_exp_flags_t, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAtomicAccessAttributeExp, ze_result_t, zeMemGetAtomicAccessAttributeExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_atomic_attr_exp_flags_t *, pAttr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleCreate, ze_result_t, zeModuleCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_module_desc_t *, desc, ze_module_handle_t *, phModule, ze_module_build_log_handle_t *, phBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleDestroy, ze_result_t, zeModuleDestroy, ze_module_handle_t, hModule);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleDynamicLink, ze_result_t, zeModuleDynamicLink, uint32_t, numModules, ze_module_handle_t *, phModules, ze_module_build_log_handle_t *, phLinkLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleBuildLogDestroy, ze_result_t, zeModuleBuildLogDestroy, ze_module_build_log_handle_t, hModuleBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleBuildLogGetString, ze_result_t, zeModuleBuildLogGetString, ze_module_build_log_handle_t, hModuleBuildLog, size_t *, pSize, char *, pBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetNativeBinary, ze_result_t, zeModuleGetNativeBinary, ze_module_handle_t, hModule, size_t *, pSize, uint8_t *, pModuleNativeBinary);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobalPointer, ze_result_t, zeModuleGetGlobalPointer, ze_module_handle_t, hModule, const char *, pGlobalName, size_t *, pSize, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetKernelNames, ze_result_t, zeModuleGetKernelNames, ze_module_handle_t, hModule, uint32_t *, pCount, const char **, pNames);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetProperties, ze_result_t, zeModuleGetProperties, ze_module_handle_t, hModule, ze_module_properties_t *, pModuleProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelCreate, ze_result_t, zeKernelCreate, ze_module_handle_t, hModule, const ze_kernel_desc_t *, desc, ze_kernel_handle_t *, phKernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelDestroy, ze_result_t, zeKernelDestroy, ze_kernel_handle_t, hKernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunctionPointer, ze_result_t, zeModuleGetFunctionPointer, ze_module_handle_t, hModule, const char *, pFunctionName, void **, pfnFunction);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetGroupSize, ze_result_t, zeKernelSetGroupSize, ze_kernel_handle_t, hKernel, uint32_t, groupSizeX, uint32_t, groupSizeY, uint32_t, groupSizeZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSuggestGroupSize, ze_result_t, zeKernelSuggestGroupSize, ze_kernel_handle_t, hKernel, uint32_t, globalSizeX, uint32_t, globalSizeY, uint32_t, globalSizeZ, uint32_t *, groupSizeX, uint32_t *, groupSizeY, uint32_t *, groupSizeZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSuggestMaxCooperativeGroupCount, ze_result_t, zeKernelSuggestMaxCooperativeGroupCount, ze_kernel_handle_t, hKernel, uint32_t *, totalGroupCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetArgumentValue, ze_result_t, zeKernelSetArgumentValue, ze_kernel_handle_t, hKernel, uint32_t, argIndex, size_t, argSize, const void *, pArgValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetIndirectAccess, ze_result_t, zeKernelSetIndirectAccess, ze_kernel_handle_t, hKernel, ze_kernel_indirect_access_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetIndirectAccess, ze_result_t, zeKernelGetIndirectAccess, ze_kernel_handle_t, hKernel, ze_kernel_indirect_access_flags_t *, pFlags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetSourceAttributes, ze_result_t, zeKernelGetSourceAttributes, ze_kernel_handle_t, hKernel, uint32_t *, pSize, char **, pString);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetCacheConfig, ze_result_t, zeKernelSetCacheConfig, ze_kernel_handle_t, hKernel, ze_cache_config_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetProperties, ze_result_t, zeKernelGetProperties, ze_kernel_handle_t, hKernel, ze_kernel_properties_t *, pKernelProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetName, ze_result_t, zeKernelGetName, ze_kernel_handle_t, hKernel, size_t *, pSize, char *, pName);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListAppendLaunchKernel, ze_result_t, zeCommandListAppendLaunchKernel, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchFuncArgs, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchCooperativeKernel, ze_result_t, zeCommandListAppendLaunchCooperativeKernel, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchFuncArgs, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchKernelIndirect, ze_result_t, zeCommandListAppendLaunchKernelIndirect, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchArgumentsBuffer, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchMultipleKernelsIndirect, ze_result_t, zeCommandListAppendLaunchMultipleKernelsIndirect, ze_command_list_handle_t, hCommandList, uint32_t, numKernels, ze_kernel_handle_t *, phKernels, const uint32_t *, pCountBuffer, const ze_group_count_t *, pLaunchArgumentsBuffer, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextMakeMemoryResident, ze_result_t, zeContextMakeMemoryResident, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextEvictMemory, ze_result_t, zeContextEvictMemory, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextMakeImageResident, ze_result_t, zeContextMakeImageResident, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextEvictImage, ze_result_t, zeContextEvictImage, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SamplerCreate, ze_result_t, zeSamplerCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_sampler_desc_t *, desc, ze_sampler_handle_t *, phSampler);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SamplerDestroy, ze_result_t, zeSamplerDestroy, ze_sampler_handle_t, hSampler);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemReserve, ze_result_t, zeVirtualMemReserve, ze_context_handle_t, hContext, const void *, pStart, size_t, size, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemFree, ze_result_t, zeVirtualMemFree, ze_context_handle_t, hContext, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemQueryPageSize, ze_result_t, zeVirtualMemQueryPageSize, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, size_t, size, size_t *, pagesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PhysicalMemCreate, ze_result_t, zePhysicalMemCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_physical_mem_desc_t *, desc, ze_physical_mem_handle_t *, phPhysicalMemory);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PhysicalMemDestroy, ze_result_t, zePhysicalMemDestroy, ze_context_handle_t, hContext, ze_physical_mem_handle_t, hPhysicalMemory);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemMap, ze_result_t, zeVirtualMemMap, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_physical_mem_handle_t, hPhysicalMemory, size_t, offset, ze_memory_access_attribute_t, access);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemUnmap, ze_result_t, zeVirtualMemUnmap, ze_context_handle_t, hContext, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemSetAccessAttribute, ze_result_t, zeVirtualMemSetAccessAttribute, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_memory_access_attribute_t, access);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemGetAccessAttribute, ze_result_t, zeVirtualMemGetAccessAttribute, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_memory_access_attribute_t *, access, size_t *, outSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetGlobalOffsetExp, ze_result_t, zeKernelSetGlobalOffsetExp, ze_kernel_handle_t, hKernel, uint32_t, offsetX, uint32_t, offsetY, uint32_t, offsetZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetBinaryExp, ze_result_t, zeKernelGetBinaryExp, ze_kernel_handle_t, hKernel, size_t *, pSize, uint8_t *, pKernelBinary);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceImportExternalSemaphoreExt, ze_result_t, zeDeviceImportExternalSemaphoreExt, ze_device_handle_t, hDevice, const ze_external_semaphore_ext_desc_t *, desc, ze_external_semaphore_ext_handle_t *, phSemaphore);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceReleaseExternalSemaphoreExt, ze_result_t, zeDeviceReleaseExternalSemaphoreExt, ze_external_semaphore_ext_handle_t, hSemaphore);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendSignalExternalSemaphoreExt, ze_result_t, zeCommandListAppendSignalExternalSemaphoreExt, ze_command_list_handle_t, hCommandList, uint32_t, numSemaphores, ze_external_semaphore_ext_handle_t *, phSemaphores, ze_external_semaphore_signal_params_ext_t *, signalParams, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWaitExternalSemaphoreExt, ze_result_t, zeCommandListAppendWaitExternalSemaphoreExt, ze_command_list_handle_t, hCommandList, uint32_t, numSemaphores, ze_external_semaphore_ext_handle_t *, phSemaphores, ze_external_semaphore_wait_params_ext_t *, waitParams, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceReserveCacheExt, ze_result_t, zeDeviceReserveCacheExt, ze_device_handle_t, hDevice, size_t, cacheLevel, size_t, cacheReservationSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetCacheAdviceExt, ze_result_t, zeDeviceSetCacheAdviceExt, ze_device_handle_t, hDevice, void *, ptr, size_t, regionSize, ze_cache_ext_region_t, cacheRegion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryTimestampsExp, ze_result_t, zeEventQueryTimestampsExp, ze_event_handle_t, hEvent, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_kernel_timestamp_result_t *, pTimestamps);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetMemoryPropertiesExp, ze_result_t, zeImageGetMemoryPropertiesExp, ze_image_handle_t, hImage, ze_image_memory_properties_exp_t *, pMemoryProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageViewCreateExt, ze_result_t, zeImageViewCreateExt, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t, hImage, ze_image_handle_t *, phImageView);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageViewCreateExp, ze_result_t, zeImageViewCreateExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t, hImage, ze_image_handle_t *, phImageView);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSchedulingHintExp, ze_result_t, zeKernelSchedulingHintExp, ze_kernel_handle_t, hKernel, ze_scheduling_hint_exp_desc_t *, pHint);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePciGetPropertiesExt, ze_result_t, zeDevicePciGetPropertiesExt, ze_device_handle_t, hDevice, ze_pci_ext_properties_t *, pPciProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyToMemoryExt, ze_result_t, zeCommandListAppendImageCopyToMemoryExt, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pSrcRegion, uint32_t, destRowPitch, uint32_t, destSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyFromMemoryExt, ze_result_t, zeCommandListAppendImageCopyFromMemoryExt, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, const void *, srcptr, const ze_image_region_t *, pDstRegion, uint32_t, srcRowPitch, uint32_t, srcSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetAllocPropertiesExt, ze_result_t, zeImageGetAllocPropertiesExt, ze_context_handle_t, hContext, ze_image_handle_t, hImage, ze_image_allocation_ext_properties_t *, pImageAllocProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleInspectLinkageExt, ze_result_t, zeModuleInspectLinkageExt, ze_linkage_inspection_ext_desc_t *, pInspectDesc, uint32_t, numModules, ze_module_handle_t *, phModules, ze_module_build_log_handle_t *, phLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeExt, ze_result_t, zeMemFreeExt, ze_context_handle_t, hContext, const ze_memory_free_ext_desc_t *, pMemFreeDesc, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetExp, ze_result_t, zeFabricVertexGetExp, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_fabric_vertex_handle_t *, phVertices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetSubVerticesExp, ze_result_t, zeFabricVertexGetSubVerticesExp, ze_fabric_vertex_handle_t, hVertex, uint32_t *, pCount, ze_fabric_vertex_handle_t *, phSubvertices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetPropertiesExp, ze_result_t, zeFabricVertexGetPropertiesExp, ze_fabric_vertex_handle_t, hVertex, ze_fabric_vertex_exp_properties_t *, pVertexProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetDeviceExp, ze_result_t, zeFabricVertexGetDeviceExp, ze_fabric_vertex_handle_t, hVertex, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetFabricVertexExp, ze_result_t, zeDeviceGetFabricVertexExp, ze_device_handle_t, hDevice, ze_fabric_vertex_handle_t *, phVertex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetExp, ze_result_t, zeFabricEdgeGetExp, ze_fabric_vertex_handle_t, hVertexA, ze_fabric_vertex_handle_t, hVertexB, uint32_t *, pCount, ze_fabric_edge_handle_t *, phEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetVerticesExp, ze_result_t, zeFabricEdgeGetVerticesExp, ze_fabric_edge_handle_t, hEdge, ze_fabric_vertex_handle_t *, phVertexA, ze_fabric_vertex_handle_t *, phVertexB);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetPropertiesExp, ze_result_t, zeFabricEdgeGetPropertiesExp, ze_fabric_edge_handle_t, hEdge, ze_fabric_edge_exp_properties_t *, pEdgeProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryKernelTimestampsExt, ze_result_t, zeEventQueryKernelTimestampsExt, ze_event_handle_t, hEvent, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_event_query_kernel_timestamps_results_ext_properties_t *, pResults);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderCreateExp, ze_result_t, zeRTASBuilderCreateExp, ze_driver_handle_t, hDriver, const ze_rtas_builder_exp_desc_t *, pDescriptor, ze_rtas_builder_exp_handle_t *, phBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderGetBuildPropertiesExp, ze_result_t, zeRTASBuilderGetBuildPropertiesExp, ze_rtas_builder_exp_handle_t, hBuilder, const ze_rtas_builder_build_op_exp_desc_t *, pBuildOpDescriptor, ze_rtas_builder_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverRTASFormatCompatibilityCheckExp, ze_result_t, zeDriverRTASFormatCompatibilityCheckExp, ze_driver_handle_t, hDriver, ze_rtas_format_exp_t, rtasFormatA, ze_rtas_format_exp_t, rtasFormatB);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderBuildExp, ze_result_t, zeRTASBuilderBuildExp, ze_rtas_builder_exp_handle_t, hBuilder, const ze_rtas_builder_build_op_exp_desc_t *, pBuildOpDescriptor, void *, pScratchBuffer, size_t, scratchBufferSizeBytes, void *, pRtasBuffer, size_t, rtasBufferSizeBytes, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation, void *, pBuildUserPtr, ze_rtas_aabb_exp_t *, pBounds, size_t *, pRtasBufferSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderDestroyExp, ze_result_t, zeRTASBuilderDestroyExp, ze_rtas_builder_exp_handle_t, hBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationCreateExp, ze_result_t, zeRTASParallelOperationCreateExp, ze_driver_handle_t, hDriver, ze_rtas_parallel_operation_exp_handle_t *, phParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationGetPropertiesExp, ze_result_t, zeRTASParallelOperationGetPropertiesExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation, ze_rtas_parallel_operation_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationJoinExp, ze_result_t, zeRTASParallelOperationJoinExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationDestroyExp, ze_result_t, zeRTASParallelOperationDestroyExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetPitchFor2dImage, ze_result_t, zeMemGetPitchFor2dImage, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, size_t, imageWidth, size_t, imageHeight, unsigned int, elementSizeInBytes, size_t *, rowPitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetDeviceOffsetExp, ze_result_t, zeImageGetDeviceOffsetExp, ze_image_handle_t, hImage, uint64_t *, pDeviceOffset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListCreateCloneExp, ze_result_t, zeCommandListCreateCloneExp, ze_command_list_handle_t, hCommandList, ze_command_list_handle_t *, phClonedCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListImmediateAppendCommandListsExp, ze_result_t, zeCommandListImmediateAppendCommandListsExp, ze_command_list_handle_t, hCommandListImmediate, uint32_t, numCommandLists, ze_command_list_handle_t *, phCommandLists, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetNextCommandIdExp, ze_result_t, zeCommandListGetNextCommandIdExp, ze_command_list_handle_t, hCommandList, const ze_mutable_command_id_exp_desc_t *, desc, uint64_t *, pCommandId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetNextCommandIdWithKernelsExp, ze_result_t, zeCommandListGetNextCommandIdWithKernelsExp, ze_command_list_handle_t, hCommandList, const ze_mutable_command_id_exp_desc_t *, desc, uint32_t, numKernels, ze_kernel_handle_t *, phKernels, uint64_t *, pCommandId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandsExp, ze_result_t, zeCommandListUpdateMutableCommandsExp, ze_command_list_handle_t, hCommandList, const ze_mutable_commands_exp_desc_t *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandSignalEventExp, ze_result_t, zeCommandListUpdateMutableCommandSignalEventExp, ze_command_list_handle_t, hCommandList, uint64_t, commandId, ze_event_handle_t, hSignalEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandWaitEventsExp, ze_result_t, zeCommandListUpdateMutableCommandWaitEventsExp, ze_command_list_handle_t, hCommandList, uint64_t, commandId, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandKernelsExp, ze_result_t, zeCommandListUpdateMutableCommandKernelsExp, ze_command_list_handle_t, hCommandList, uint32_t, numKernels, uint64_t *, pCommandId, ze_kernel_handle_t *, phKernels);

static const std::unordered_map<std::string, void *> intercept_symbol_map = {
    DLSYM_INTERCEPT_ENTRY(zeInit),
    DLSYM_INTERCEPT_ENTRY(zeDriverGet),
    DLSYM_INTERCEPT_ENTRY(zeInitDrivers),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetApiVersion),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetIpcProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetExtensionProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetExtensionFunctionAddress),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetLastErrorDescription),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGet),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetRootDevice),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetSubDevices),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetComputeProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetModuleProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetCommandQueueGroupProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetMemoryProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetMemoryAccessProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetCacheProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetImageProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetExternalMemoryProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetP2PProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceCanAccessPeer),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetStatus),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetGlobalTimestamps),
    DLSYM_INTERCEPT_ENTRY(zeContextCreate),
    DLSYM_INTERCEPT_ENTRY(zeContextCreateEx),
    DLSYM_INTERCEPT_ENTRY(zeContextDestroy),
    DLSYM_INTERCEPT_ENTRY(zeContextGetStatus),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueCreate),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueDestroy),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueExecuteCommandLists),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueGetOrdinal),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueGetIndex),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreateImmediate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListDestroy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListClose),
    DLSYM_INTERCEPT_ENTRY(zeCommandListReset),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWriteGlobalTimestamp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetDeviceHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetContextHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetOrdinal),
    DLSYM_INTERCEPT_ENTRY(zeCommandListImmediateGetIndex),
    DLSYM_INTERCEPT_ENTRY(zeCommandListIsImmediate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendBarrier),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryRangesBarrier),
    DLSYM_INTERCEPT_ENTRY(zeContextSystemBarrier),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryFill),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopyRegion),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopyFromContext),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyRegion),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyToMemory),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyFromMemory),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryPrefetch),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemAdvise),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolCreate),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolDestroy),
    DLSYM_INTERCEPT_ENTRY(zeEventCreate),
    DLSYM_INTERCEPT_ENTRY(zeEventDestroy),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolPutIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolOpenIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolCloseIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendSignalEvent),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWaitOnEvents),
    DLSYM_INTERCEPT_ENTRY(zeEventHostSignal),
    DLSYM_INTERCEPT_ENTRY(zeEventHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryStatus),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendEventReset),
    DLSYM_INTERCEPT_ENTRY(zeEventHostReset),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryKernelTimestamp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendQueryKernelTimestamps),
    DLSYM_INTERCEPT_ENTRY(zeEventGetEventPool),
    DLSYM_INTERCEPT_ENTRY(zeEventGetSignalScope),
    DLSYM_INTERCEPT_ENTRY(zeEventGetWaitScope),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetContextHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetFlags),
    DLSYM_INTERCEPT_ENTRY(zeFenceCreate),
    DLSYM_INTERCEPT_ENTRY(zeFenceDestroy),
    DLSYM_INTERCEPT_ENTRY(zeFenceHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeFenceQueryStatus),
    DLSYM_INTERCEPT_ENTRY(zeFenceReset),
    DLSYM_INTERCEPT_ENTRY(zeImageGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeImageCreate),
    DLSYM_INTERCEPT_ENTRY(zeImageDestroy),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocShared),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocDevice),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocHost),
    DLSYM_INTERCEPT_ENTRY(zeMemFree),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAllocProperties),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAddressRange),
    DLSYM_INTERCEPT_ENTRY(zeMemGetIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemGetIpcHandleFromFileDescriptorExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetFileDescriptorFromIpcHandleExp),
    DLSYM_INTERCEPT_ENTRY(zeMemPutIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemOpenIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemCloseIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemSetAtomicAccessAttributeExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAtomicAccessAttributeExp),
    DLSYM_INTERCEPT_ENTRY(zeModuleCreate),
    DLSYM_INTERCEPT_ENTRY(zeModuleDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleDynamicLink),
    DLSYM_INTERCEPT_ENTRY(zeModuleBuildLogDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleBuildLogGetString),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetNativeBinary),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetGlobalPointer),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetKernelNames),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeKernelCreate),
    DLSYM_INTERCEPT_ENTRY(zeKernelDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetFunctionPointer),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetGroupSize),
    DLSYM_INTERCEPT_ENTRY(zeKernelSuggestGroupSize),
    DLSYM_INTERCEPT_ENTRY(zeKernelSuggestMaxCooperativeGroupCount),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetArgumentValue),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetIndirectAccess),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetIndirectAccess),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetSourceAttributes),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetName),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchKernel),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchCooperativeKernel),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchKernelIndirect),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchMultipleKernelsIndirect),
    DLSYM_INTERCEPT_ENTRY(zeContextMakeMemoryResident),
    DLSYM_INTERCEPT_ENTRY(zeContextEvictMemory),
    DLSYM_INTERCEPT_ENTRY(zeContextMakeImageResident),
    DLSYM_INTERCEPT_ENTRY(zeContextEvictImage),
    DLSYM_INTERCEPT_ENTRY(zeSamplerCreate),
    DLSYM_INTERCEPT_ENTRY(zeSamplerDestroy),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemReserve),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemFree),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemQueryPageSize),
    DLSYM_INTERCEPT_ENTRY(zePhysicalMemCreate),
    DLSYM_INTERCEPT_ENTRY(zePhysicalMemDestroy),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemMap),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemUnmap),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemSetAccessAttribute),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemGetAccessAttribute),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetGlobalOffsetExp),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetBinaryExp),
    DLSYM_INTERCEPT_ENTRY(zeDeviceImportExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceReleaseExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendSignalExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWaitExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceReserveCacheExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceSetCacheAdviceExt),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryTimestampsExp),
    DLSYM_INTERCEPT_ENTRY(zeImageGetMemoryPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeImageViewCreateExt),
    DLSYM_INTERCEPT_ENTRY(zeImageViewCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeKernelSchedulingHintExp),
    DLSYM_INTERCEPT_ENTRY(zeDevicePciGetPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyToMemoryExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyFromMemoryExt),
    DLSYM_INTERCEPT_ENTRY(zeImageGetAllocPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeModuleInspectLinkageExt),
    DLSYM_INTERCEPT_ENTRY(zeMemFreeExt),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetSubVerticesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetDeviceExp),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetFabricVertexExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetVerticesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryKernelTimestampsExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderGetBuildPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeDriverRTASFormatCompatibilityCheckExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderBuildExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationJoinExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetPitchFor2dImage),
    DLSYM_INTERCEPT_ENTRY(zeImageGetDeviceOffsetExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreateCloneExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListImmediateAppendCommandListsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetNextCommandIdExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetNextCommandIdWithKernelsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandSignalEventExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandWaitEventsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandKernelsExp),
};

DEFINE_DLSYM_INTERCEPT(intercept_symbol_map);
