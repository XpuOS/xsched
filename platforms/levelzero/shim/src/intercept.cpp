/// This file is auto-generated by command
// "python tools/autogen/merge_headers.py -d C:\Programs\LevelZero-1.22.4\include\level_zero -I C:\Programs\LevelZero-1.22.4\include\level_zero\layers -I C:\Programs\LevelZero-1.22.4\include\level_zero\loader"
// "python3 tools/autogen/gen.py --source merged.h --lib C:\Windows\System32\ze_loader.dll --platform levelzero --prefix ze"
#include "xsched/utils/function.h"
#include "xsched/levelzero/hal/driver.h"
#include "xsched/levelzero/shim/shim.h"
using namespace xsched::levelzero;

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Init, ze_result_t, zeInit, ze_init_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGet, ze_result_t, zeDriverGet, uint32_t *, pCount, ze_driver_handle_t *, phDrivers);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::InitDrivers, ze_result_t, zeInitDrivers, uint32_t *, pCount, ze_driver_handle_t *, phDrivers, ze_init_driver_type_desc_t *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetApiVersion, ze_result_t, zeDriverGetApiVersion, ze_driver_handle_t, hDriver, ze_api_version_t *, version);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetProperties, ze_result_t, zeDriverGetProperties, ze_driver_handle_t, hDriver, ze_driver_properties_t *, pDriverProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetIpcProperties, ze_result_t, zeDriverGetIpcProperties, ze_driver_handle_t, hDriver, ze_driver_ipc_properties_t *, pIpcProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetExtensionProperties, ze_result_t, zeDriverGetExtensionProperties, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_driver_extension_properties_t *, pExtensionProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetExtensionFunctionAddress, ze_result_t, zeDriverGetExtensionFunctionAddress, ze_driver_handle_t, hDriver, const char *, name, void **, ppFunctionAddress);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetLastErrorDescription, ze_result_t, zeDriverGetLastErrorDescription, ze_driver_handle_t, hDriver, const char **, ppString);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGet, ze_result_t, zeDeviceGet, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_device_handle_t *, phDevices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetRootDevice, ze_result_t, zeDeviceGetRootDevice, ze_device_handle_t, hDevice, ze_device_handle_t *, phRootDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetSubDevices, ze_result_t, zeDeviceGetSubDevices, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_handle_t *, phSubdevices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetProperties, ze_result_t, zeDeviceGetProperties, ze_device_handle_t, hDevice, ze_device_properties_t *, pDeviceProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetComputeProperties, ze_result_t, zeDeviceGetComputeProperties, ze_device_handle_t, hDevice, ze_device_compute_properties_t *, pComputeProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetModuleProperties, ze_result_t, zeDeviceGetModuleProperties, ze_device_handle_t, hDevice, ze_device_module_properties_t *, pModuleProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCommandQueueGroupProperties, ze_result_t, zeDeviceGetCommandQueueGroupProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_command_queue_group_properties_t *, pCommandQueueGroupProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemoryProperties, ze_result_t, zeDeviceGetMemoryProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_memory_properties_t *, pMemProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemoryAccessProperties, ze_result_t, zeDeviceGetMemoryAccessProperties, ze_device_handle_t, hDevice, ze_device_memory_access_properties_t *, pMemAccessProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCacheProperties, ze_result_t, zeDeviceGetCacheProperties, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_cache_properties_t *, pCacheProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetImageProperties, ze_result_t, zeDeviceGetImageProperties, ze_device_handle_t, hDevice, ze_device_image_properties_t *, pImageProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetExternalMemoryProperties, ze_result_t, zeDeviceGetExternalMemoryProperties, ze_device_handle_t, hDevice, ze_device_external_memory_properties_t *, pExternalMemoryProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetP2PProperties, ze_result_t, zeDeviceGetP2PProperties, ze_device_handle_t, hDevice, ze_device_handle_t, hPeerDevice, ze_device_p2p_properties_t *, pP2PProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceCanAccessPeer, ze_result_t, zeDeviceCanAccessPeer, ze_device_handle_t, hDevice, ze_device_handle_t, hPeerDevice, ze_bool_t *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetStatus, ze_result_t, zeDeviceGetStatus, ze_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetGlobalTimestamps, ze_result_t, zeDeviceGetGlobalTimestamps, ze_device_handle_t, hDevice, uint64_t *, hostTimestamp, uint64_t *, deviceTimestamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreate, ze_result_t, zeContextCreate, ze_driver_handle_t, hDriver, const ze_context_desc_t *, desc, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextCreateEx, ze_result_t, zeContextCreateEx, ze_driver_handle_t, hDriver, const ze_context_desc_t *, desc, uint32_t, numDevices, ze_device_handle_t *, phDevices, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextDestroy, ze_result_t, zeContextDestroy, ze_context_handle_t, hContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextGetStatus, ze_result_t, zeContextGetStatus, ze_context_handle_t, hContext);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueCreate, ze_result_t, zeCommandQueueCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_queue_desc_t *, desc, ze_command_queue_handle_t *, phCommandQueue);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueDestroy, ze_result_t, zeCommandQueueDestroy, ze_command_queue_handle_t, hCommandQueue);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueExecuteCommandLists, ze_result_t, zeCommandQueueExecuteCommandLists, ze_command_queue_handle_t, hCommandQueue, uint32_t, numCommandLists, ze_command_list_handle_t *, phCommandLists, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandQueueSynchronize, ze_result_t, zeCommandQueueSynchronize, ze_command_queue_handle_t, hCommandQueue, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandQueueGetOrdinal, ze_result_t, zeCommandQueueGetOrdinal, ze_command_queue_handle_t, hCommandQueue, uint32_t *, pOrdinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandQueueGetIndex, ze_result_t, zeCommandQueueGetIndex, ze_command_queue_handle_t, hCommandQueue, uint32_t *, pIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListCreate, ze_result_t, zeCommandListCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_list_desc_t *, desc, ze_command_list_handle_t *, phCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListCreateImmediate, ze_result_t, zeCommandListCreateImmediate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_command_queue_desc_t *, altdesc, ze_command_list_handle_t *, phCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListDestroy, ze_result_t, zeCommandListDestroy, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListClose, ze_result_t, zeCommandListClose, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListReset, ze_result_t, zeCommandListReset, ze_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWriteGlobalTimestamp, ze_result_t, zeCommandListAppendWriteGlobalTimestamp, ze_command_list_handle_t, hCommandList, uint64_t *, dstptr, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListHostSynchronize, ze_result_t, zeCommandListHostSynchronize, ze_command_list_handle_t, hCommandList, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetDeviceHandle, ze_result_t, zeCommandListGetDeviceHandle, ze_command_list_handle_t, hCommandList, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetContextHandle, ze_result_t, zeCommandListGetContextHandle, ze_command_list_handle_t, hCommandList, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetOrdinal, ze_result_t, zeCommandListGetOrdinal, ze_command_list_handle_t, hCommandList, uint32_t *, pOrdinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListImmediateGetIndex, ze_result_t, zeCommandListImmediateGetIndex, ze_command_list_handle_t, hCommandListImmediate, uint32_t *, pIndex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListIsImmediate, ze_result_t, zeCommandListIsImmediate, ze_command_list_handle_t, hCommandList, ze_bool_t *, pIsImmediate);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendBarrier, ze_result_t, zeCommandListAppendBarrier, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryRangesBarrier, ze_result_t, zeCommandListAppendMemoryRangesBarrier, ze_command_list_handle_t, hCommandList, uint32_t, numRanges, const size_t *, pRangeSizes, const void **, pRanges, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextSystemBarrier, ze_result_t, zeContextSystemBarrier, ze_context_handle_t, hContext, ze_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryCopy, ze_result_t, zeCommandListAppendMemoryCopy, ze_command_list_handle_t, hCommandList, void *, dstptr, const void *, srcptr, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryFill, ze_result_t, zeCommandListAppendMemoryFill, ze_command_list_handle_t, hCommandList, void *, ptr, const void *, pattern, size_t, pattern_size, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryCopyRegion, ze_result_t, zeCommandListAppendMemoryCopyRegion, ze_command_list_handle_t, hCommandList, void *, dstptr, const ze_copy_region_t *, dstRegion, uint32_t, dstPitch, uint32_t, dstSlicePitch, const void *, srcptr, const ze_copy_region_t *, srcRegion, uint32_t, srcPitch, uint32_t, srcSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryCopyFromContext, ze_result_t, zeCommandListAppendMemoryCopyFromContext, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_context_handle_t, hContextSrc, const void *, srcptr, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopy, ze_result_t, zeCommandListAppendImageCopy, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, ze_image_handle_t, hSrcImage, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyRegion, ze_result_t, zeCommandListAppendImageCopyRegion, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pDstRegion, const ze_image_region_t *, pSrcRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyToMemory, ze_result_t, zeCommandListAppendImageCopyToMemory, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pSrcRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyFromMemory, ze_result_t, zeCommandListAppendImageCopyFromMemory, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, const void *, srcptr, const ze_image_region_t *, pDstRegion, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemoryPrefetch, ze_result_t, zeCommandListAppendMemoryPrefetch, ze_command_list_handle_t, hCommandList, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendMemAdvise, ze_result_t, zeCommandListAppendMemAdvise, ze_command_list_handle_t, hCommandList, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_advice_t, advice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolCreate, ze_result_t, zeEventPoolCreate, ze_context_handle_t, hContext, const ze_event_pool_desc_t *, desc, uint32_t, numDevices, ze_device_handle_t *, phDevices, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolDestroy, ze_result_t, zeEventPoolDestroy, ze_event_pool_handle_t, hEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, ze_result_t, zeEventCreate, ze_event_pool_handle_t, hEventPool, const ze_event_desc_t *, desc, ze_event_handle_t *, phEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventDestroy, ze_result_t, zeEventDestroy, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetIpcHandle, ze_result_t, zeEventPoolGetIpcHandle, ze_event_pool_handle_t, hEventPool, ze_ipc_event_pool_handle_t *, phIpc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolPutIpcHandle, ze_result_t, zeEventPoolPutIpcHandle, ze_context_handle_t, hContext, ze_ipc_event_pool_handle_t, hIpc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolOpenIpcHandle, ze_result_t, zeEventPoolOpenIpcHandle, ze_context_handle_t, hContext, ze_ipc_event_pool_handle_t, hIpc, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolCloseIpcHandle, ze_result_t, zeEventPoolCloseIpcHandle, ze_event_pool_handle_t, hEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendSignalEvent, ze_result_t, zeCommandListAppendSignalEvent, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWaitOnEvents, ze_result_t, zeCommandListAppendWaitOnEvents, ze_command_list_handle_t, hCommandList, uint32_t, numEvents, ze_event_handle_t *, phEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostSignal, ze_result_t, zeEventHostSignal, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostSynchronize, ze_result_t, zeEventHostSynchronize, ze_event_handle_t, hEvent, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventQueryStatus, ze_result_t, zeEventQueryStatus, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendEventReset, ze_result_t, zeCommandListAppendEventReset, ze_command_list_handle_t, hCommandList, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(XEventHostReset, ze_result_t, zeEventHostReset, ze_event_handle_t, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryKernelTimestamp, ze_result_t, zeEventQueryKernelTimestamp, ze_event_handle_t, hEvent, ze_kernel_timestamp_result_t *, dstptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendQueryKernelTimestamps, ze_result_t, zeCommandListAppendQueryKernelTimestamps, ze_command_list_handle_t, hCommandList, uint32_t, numEvents, ze_event_handle_t *, phEvents, void *, dstptr, const size_t *, pOffsets, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetEventPool, ze_result_t, zeEventGetEventPool, ze_event_handle_t, hEvent, ze_event_pool_handle_t *, phEventPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetSignalScope, ze_result_t, zeEventGetSignalScope, ze_event_handle_t, hEvent, ze_event_scope_flags_t *, pSignalScope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventGetWaitScope, ze_result_t, zeEventGetWaitScope, ze_event_handle_t, hEvent, ze_event_scope_flags_t *, pWaitScope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetContextHandle, ze_result_t, zeEventPoolGetContextHandle, ze_event_pool_handle_t, hEventPool, ze_context_handle_t *, phContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventPoolGetFlags, ze_result_t, zeEventPoolGetFlags, ze_event_pool_handle_t, hEventPool, ze_event_pool_flags_t *, pFlags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FenceCreate, ze_result_t, zeFenceCreate, ze_command_queue_handle_t, hCommandQueue, const ze_fence_desc_t *, desc, ze_fence_handle_t *, phFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceDestroy, ze_result_t, zeFenceDestroy, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceHostSynchronize, ze_result_t, zeFenceHostSynchronize, ze_fence_handle_t, hFence, uint64_t, timeout);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceQueryStatus, ze_result_t, zeFenceQueryStatus, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(XFenceReset, ze_result_t, zeFenceReset, ze_fence_handle_t, hFence);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetProperties, ze_result_t, zeImageGetProperties, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_properties_t *, pImageProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageCreate, ze_result_t, zeImageCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t *, phImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageDestroy, ze_result_t, zeImageDestroy, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocShared, ze_result_t, zeMemAllocShared, ze_context_handle_t, hContext, const ze_device_mem_alloc_desc_t *, device_desc, const ze_host_mem_alloc_desc_t *, host_desc, size_t, size, size_t, alignment, ze_device_handle_t, hDevice, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocDevice, ze_result_t, zeMemAllocDevice, ze_context_handle_t, hContext, const ze_device_mem_alloc_desc_t *, device_desc, size_t, size, size_t, alignment, ze_device_handle_t, hDevice, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost, ze_result_t, zeMemAllocHost, ze_context_handle_t, hContext, const ze_host_mem_alloc_desc_t *, host_desc, size_t, size, size_t, alignment, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFree, ze_result_t, zeMemFree, ze_context_handle_t, hContext, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocProperties, ze_result_t, zeMemGetAllocProperties, ze_context_handle_t, hContext, const void *, ptr, ze_memory_allocation_properties_t *, pMemAllocProperties, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange, ze_result_t, zeMemGetAddressRange, ze_context_handle_t, hContext, const void *, ptr, void **, pBase, size_t *, pSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetIpcHandle, ze_result_t, zeMemGetIpcHandle, ze_context_handle_t, hContext, const void *, ptr, ze_ipc_mem_handle_t *, pIpcHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetIpcHandleFromFileDescriptorExp, ze_result_t, zeMemGetIpcHandleFromFileDescriptorExp, ze_context_handle_t, hContext, uint64_t, handle, ze_ipc_mem_handle_t *, pIpcHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetFileDescriptorFromIpcHandleExp, ze_result_t, zeMemGetFileDescriptorFromIpcHandleExp, ze_context_handle_t, hContext, ze_ipc_mem_handle_t, ipcHandle, uint64_t *, pHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPutIpcHandle, ze_result_t, zeMemPutIpcHandle, ze_context_handle_t, hContext, ze_ipc_mem_handle_t, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemOpenIpcHandle, ze_result_t, zeMemOpenIpcHandle, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_ipc_mem_handle_t, handle, ze_ipc_memory_flags_t, flags, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemCloseIpcHandle, ze_result_t, zeMemCloseIpcHandle, ze_context_handle_t, hContext, const void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemSetAtomicAccessAttributeExp, ze_result_t, zeMemSetAtomicAccessAttributeExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_atomic_attr_exp_flags_t, attr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAtomicAccessAttributeExp, ze_result_t, zeMemGetAtomicAccessAttributeExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const void *, ptr, size_t, size, ze_memory_atomic_attr_exp_flags_t *, pAttr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleCreate, ze_result_t, zeModuleCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_module_desc_t *, desc, ze_module_handle_t *, phModule, ze_module_build_log_handle_t *, phBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleDestroy, ze_result_t, zeModuleDestroy, ze_module_handle_t, hModule);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleDynamicLink, ze_result_t, zeModuleDynamicLink, uint32_t, numModules, ze_module_handle_t *, phModules, ze_module_build_log_handle_t *, phLinkLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleBuildLogDestroy, ze_result_t, zeModuleBuildLogDestroy, ze_module_build_log_handle_t, hModuleBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleBuildLogGetString, ze_result_t, zeModuleBuildLogGetString, ze_module_build_log_handle_t, hModuleBuildLog, size_t *, pSize, char *, pBuildLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetNativeBinary, ze_result_t, zeModuleGetNativeBinary, ze_module_handle_t, hModule, size_t *, pSize, uint8_t *, pModuleNativeBinary);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobalPointer, ze_result_t, zeModuleGetGlobalPointer, ze_module_handle_t, hModule, const char *, pGlobalName, size_t *, pSize, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetKernelNames, ze_result_t, zeModuleGetKernelNames, ze_module_handle_t, hModule, uint32_t *, pCount, const char **, pNames);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetProperties, ze_result_t, zeModuleGetProperties, ze_module_handle_t, hModule, ze_module_properties_t *, pModuleProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelCreate, ze_result_t, zeKernelCreate, ze_module_handle_t, hModule, const ze_kernel_desc_t *, desc, ze_kernel_handle_t *, phKernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelDestroy, ze_result_t, zeKernelDestroy, ze_kernel_handle_t, hKernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunctionPointer, ze_result_t, zeModuleGetFunctionPointer, ze_module_handle_t, hModule, const char *, pFunctionName, void **, pfnFunction);
DEFINE_EXPORT_C_REDIRECT_CALL(XKernelSetGroupSize, ze_result_t, zeKernelSetGroupSize, ze_kernel_handle_t, hKernel, uint32_t, groupSizeX, uint32_t, groupSizeY, uint32_t, groupSizeZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSuggestGroupSize, ze_result_t, zeKernelSuggestGroupSize, ze_kernel_handle_t, hKernel, uint32_t, globalSizeX, uint32_t, globalSizeY, uint32_t, globalSizeZ, uint32_t *, groupSizeX, uint32_t *, groupSizeY, uint32_t *, groupSizeZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSuggestMaxCooperativeGroupCount, ze_result_t, zeKernelSuggestMaxCooperativeGroupCount, ze_kernel_handle_t, hKernel, uint32_t *, totalGroupCount);
DEFINE_EXPORT_C_REDIRECT_CALL(XKernelSetArgumentValue, ze_result_t, zeKernelSetArgumentValue, ze_kernel_handle_t, hKernel, uint32_t, argIndex, size_t, argSize, const void *, pArgValue);
DEFINE_EXPORT_C_REDIRECT_CALL(XKernelSetIndirectAccess, ze_result_t, zeKernelSetIndirectAccess, ze_kernel_handle_t, hKernel, ze_kernel_indirect_access_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetIndirectAccess, ze_result_t, zeKernelGetIndirectAccess, ze_kernel_handle_t, hKernel, ze_kernel_indirect_access_flags_t *, pFlags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetSourceAttributes, ze_result_t, zeKernelGetSourceAttributes, ze_kernel_handle_t, hKernel, uint32_t *, pSize, char **, pString);
DEFINE_EXPORT_C_REDIRECT_CALL(XKernelSetCacheConfig, ze_result_t, zeKernelSetCacheConfig, ze_kernel_handle_t, hKernel, ze_cache_config_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetProperties, ze_result_t, zeKernelGetProperties, ze_kernel_handle_t, hKernel, ze_kernel_properties_t *, pKernelProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetName, ze_result_t, zeKernelGetName, ze_kernel_handle_t, hKernel, size_t *, pSize, char *, pName);
DEFINE_EXPORT_C_REDIRECT_CALL(XCommandListAppendLaunchKernel, ze_result_t, zeCommandListAppendLaunchKernel, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchFuncArgs, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchCooperativeKernel, ze_result_t, zeCommandListAppendLaunchCooperativeKernel, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchFuncArgs, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchKernelIndirect, ze_result_t, zeCommandListAppendLaunchKernelIndirect, ze_command_list_handle_t, hCommandList, ze_kernel_handle_t, hKernel, const ze_group_count_t *, pLaunchArgumentsBuffer, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendLaunchMultipleKernelsIndirect, ze_result_t, zeCommandListAppendLaunchMultipleKernelsIndirect, ze_command_list_handle_t, hCommandList, uint32_t, numKernels, ze_kernel_handle_t *, phKernels, const uint32_t *, pCountBuffer, const ze_group_count_t *, pLaunchArgumentsBuffer, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextMakeMemoryResident, ze_result_t, zeContextMakeMemoryResident, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextEvictMemory, ze_result_t, zeContextEvictMemory, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextMakeImageResident, ze_result_t, zeContextMakeImageResident, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ContextEvictImage, ze_result_t, zeContextEvictImage, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_image_handle_t, hImage);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SamplerCreate, ze_result_t, zeSamplerCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_sampler_desc_t *, desc, ze_sampler_handle_t *, phSampler);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SamplerDestroy, ze_result_t, zeSamplerDestroy, ze_sampler_handle_t, hSampler);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemReserve, ze_result_t, zeVirtualMemReserve, ze_context_handle_t, hContext, const void *, pStart, size_t, size, void **, pptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemFree, ze_result_t, zeVirtualMemFree, ze_context_handle_t, hContext, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemQueryPageSize, ze_result_t, zeVirtualMemQueryPageSize, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, size_t, size, size_t *, pagesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PhysicalMemCreate, ze_result_t, zePhysicalMemCreate, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, ze_physical_mem_desc_t *, desc, ze_physical_mem_handle_t *, phPhysicalMemory);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PhysicalMemDestroy, ze_result_t, zePhysicalMemDestroy, ze_context_handle_t, hContext, ze_physical_mem_handle_t, hPhysicalMemory);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemMap, ze_result_t, zeVirtualMemMap, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_physical_mem_handle_t, hPhysicalMemory, size_t, offset, ze_memory_access_attribute_t, access);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemUnmap, ze_result_t, zeVirtualMemUnmap, ze_context_handle_t, hContext, const void *, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemSetAccessAttribute, ze_result_t, zeVirtualMemSetAccessAttribute, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_memory_access_attribute_t, access);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::VirtualMemGetAccessAttribute, ze_result_t, zeVirtualMemGetAccessAttribute, ze_context_handle_t, hContext, const void *, ptr, size_t, size, ze_memory_access_attribute_t *, access, size_t *, outSize);
DEFINE_EXPORT_C_REDIRECT_CALL(XKernelSetGlobalOffsetExp, ze_result_t, zeKernelSetGlobalOffsetExp, ze_kernel_handle_t, hKernel, uint32_t, offsetX, uint32_t, offsetY, uint32_t, offsetZ);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetBinaryExp, ze_result_t, zeKernelGetBinaryExp, ze_kernel_handle_t, hKernel, size_t *, pSize, uint8_t *, pKernelBinary);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceImportExternalSemaphoreExt, ze_result_t, zeDeviceImportExternalSemaphoreExt, ze_device_handle_t, hDevice, const ze_external_semaphore_ext_desc_t *, desc, ze_external_semaphore_ext_handle_t *, phSemaphore);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceReleaseExternalSemaphoreExt, ze_result_t, zeDeviceReleaseExternalSemaphoreExt, ze_external_semaphore_ext_handle_t, hSemaphore);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendSignalExternalSemaphoreExt, ze_result_t, zeCommandListAppendSignalExternalSemaphoreExt, ze_command_list_handle_t, hCommandList, uint32_t, numSemaphores, ze_external_semaphore_ext_handle_t *, phSemaphores, ze_external_semaphore_signal_params_ext_t *, signalParams, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendWaitExternalSemaphoreExt, ze_result_t, zeCommandListAppendWaitExternalSemaphoreExt, ze_command_list_handle_t, hCommandList, uint32_t, numSemaphores, ze_external_semaphore_ext_handle_t *, phSemaphores, ze_external_semaphore_wait_params_ext_t *, waitParams, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderCreateExt, ze_result_t, zeRTASBuilderCreateExt, ze_driver_handle_t, hDriver, const ze_rtas_builder_ext_desc_t *, pDescriptor, ze_rtas_builder_ext_handle_t *, phBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderGetBuildPropertiesExt, ze_result_t, zeRTASBuilderGetBuildPropertiesExt, ze_rtas_builder_ext_handle_t, hBuilder, const ze_rtas_builder_build_op_ext_desc_t *, pBuildOpDescriptor, ze_rtas_builder_ext_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverRTASFormatCompatibilityCheckExt, ze_result_t, zeDriverRTASFormatCompatibilityCheckExt, ze_driver_handle_t, hDriver, ze_rtas_format_ext_t, rtasFormatA, ze_rtas_format_ext_t, rtasFormatB);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderBuildExt, ze_result_t, zeRTASBuilderBuildExt, ze_rtas_builder_ext_handle_t, hBuilder, const ze_rtas_builder_build_op_ext_desc_t *, pBuildOpDescriptor, void *, pScratchBuffer, size_t, scratchBufferSizeBytes, void *, pRtasBuffer, size_t, rtasBufferSizeBytes, ze_rtas_parallel_operation_ext_handle_t, hParallelOperation, void *, pBuildUserPtr, ze_rtas_aabb_ext_t *, pBounds, size_t *, pRtasBufferSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderCommandListAppendCopyExt, ze_result_t, zeRTASBuilderCommandListAppendCopyExt, ze_command_list_handle_t, hCommandList, void *, dstptr, const void *, srcptr, size_t, size, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderDestroyExt, ze_result_t, zeRTASBuilderDestroyExt, ze_rtas_builder_ext_handle_t, hBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationCreateExt, ze_result_t, zeRTASParallelOperationCreateExt, ze_driver_handle_t, hDriver, ze_rtas_parallel_operation_ext_handle_t *, phParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationGetPropertiesExt, ze_result_t, zeRTASParallelOperationGetPropertiesExt, ze_rtas_parallel_operation_ext_handle_t, hParallelOperation, ze_rtas_parallel_operation_ext_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationJoinExt, ze_result_t, zeRTASParallelOperationJoinExt, ze_rtas_parallel_operation_ext_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationDestroyExt, ze_result_t, zeRTASParallelOperationDestroyExt, ze_rtas_parallel_operation_ext_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetVectorWidthPropertiesExt, ze_result_t, zeDeviceGetVectorWidthPropertiesExt, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_device_vector_width_properties_ext_t *, pVectorWidthProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceReserveCacheExt, ze_result_t, zeDeviceReserveCacheExt, ze_device_handle_t, hDevice, size_t, cacheLevel, size_t, cacheReservationSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetCacheAdviceExt, ze_result_t, zeDeviceSetCacheAdviceExt, ze_device_handle_t, hDevice, void *, ptr, size_t, regionSize, ze_cache_ext_region_t, cacheRegion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryTimestampsExp, ze_result_t, zeEventQueryTimestampsExp, ze_event_handle_t, hEvent, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_kernel_timestamp_result_t *, pTimestamps);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetMemoryPropertiesExp, ze_result_t, zeImageGetMemoryPropertiesExp, ze_image_handle_t, hImage, ze_image_memory_properties_exp_t *, pMemoryProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageViewCreateExt, ze_result_t, zeImageViewCreateExt, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t, hImage, ze_image_handle_t *, phImageView);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageViewCreateExp, ze_result_t, zeImageViewCreateExp, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, const ze_image_desc_t *, desc, ze_image_handle_t, hImage, ze_image_handle_t *, phImageView);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSchedulingHintExp, ze_result_t, zeKernelSchedulingHintExp, ze_kernel_handle_t, hKernel, ze_scheduling_hint_exp_desc_t *, pHint);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePciGetPropertiesExt, ze_result_t, zeDevicePciGetPropertiesExt, ze_device_handle_t, hDevice, ze_pci_ext_properties_t *, pPciProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyToMemoryExt, ze_result_t, zeCommandListAppendImageCopyToMemoryExt, ze_command_list_handle_t, hCommandList, void *, dstptr, ze_image_handle_t, hSrcImage, const ze_image_region_t *, pSrcRegion, uint32_t, destRowPitch, uint32_t, destSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListAppendImageCopyFromMemoryExt, ze_result_t, zeCommandListAppendImageCopyFromMemoryExt, ze_command_list_handle_t, hCommandList, ze_image_handle_t, hDstImage, const void *, srcptr, const ze_image_region_t *, pDstRegion, uint32_t, srcRowPitch, uint32_t, srcSlicePitch, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetAllocPropertiesExt, ze_result_t, zeImageGetAllocPropertiesExt, ze_context_handle_t, hContext, ze_image_handle_t, hImage, ze_image_allocation_ext_properties_t *, pImageAllocProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleInspectLinkageExt, ze_result_t, zeModuleInspectLinkageExt, ze_linkage_inspection_ext_desc_t *, pInspectDesc, uint32_t, numModules, ze_module_handle_t *, phModules, ze_module_build_log_handle_t *, phLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeExt, ze_result_t, zeMemFreeExt, ze_context_handle_t, hContext, const ze_memory_free_ext_desc_t *, pMemFreeDesc, void *, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetExp, ze_result_t, zeFabricVertexGetExp, ze_driver_handle_t, hDriver, uint32_t *, pCount, ze_fabric_vertex_handle_t *, phVertices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetSubVerticesExp, ze_result_t, zeFabricVertexGetSubVerticesExp, ze_fabric_vertex_handle_t, hVertex, uint32_t *, pCount, ze_fabric_vertex_handle_t *, phSubvertices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetPropertiesExp, ze_result_t, zeFabricVertexGetPropertiesExp, ze_fabric_vertex_handle_t, hVertex, ze_fabric_vertex_exp_properties_t *, pVertexProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricVertexGetDeviceExp, ze_result_t, zeFabricVertexGetDeviceExp, ze_fabric_vertex_handle_t, hVertex, ze_device_handle_t *, phDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetFabricVertexExp, ze_result_t, zeDeviceGetFabricVertexExp, ze_device_handle_t, hDevice, ze_fabric_vertex_handle_t *, phVertex);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetExp, ze_result_t, zeFabricEdgeGetExp, ze_fabric_vertex_handle_t, hVertexA, ze_fabric_vertex_handle_t, hVertexB, uint32_t *, pCount, ze_fabric_edge_handle_t *, phEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetVerticesExp, ze_result_t, zeFabricEdgeGetVerticesExp, ze_fabric_edge_handle_t, hEdge, ze_fabric_vertex_handle_t *, phVertexA, ze_fabric_vertex_handle_t *, phVertexB);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FabricEdgeGetPropertiesExp, ze_result_t, zeFabricEdgeGetPropertiesExp, ze_fabric_edge_handle_t, hEdge, ze_fabric_edge_exp_properties_t *, pEdgeProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQueryKernelTimestampsExt, ze_result_t, zeEventQueryKernelTimestampsExt, ze_event_handle_t, hEvent, ze_device_handle_t, hDevice, uint32_t *, pCount, ze_event_query_kernel_timestamps_results_ext_properties_t *, pResults);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderCreateExp, ze_result_t, zeRTASBuilderCreateExp, ze_driver_handle_t, hDriver, const ze_rtas_builder_exp_desc_t *, pDescriptor, ze_rtas_builder_exp_handle_t *, phBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderGetBuildPropertiesExp, ze_result_t, zeRTASBuilderGetBuildPropertiesExp, ze_rtas_builder_exp_handle_t, hBuilder, const ze_rtas_builder_build_op_exp_desc_t *, pBuildOpDescriptor, ze_rtas_builder_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverRTASFormatCompatibilityCheckExp, ze_result_t, zeDriverRTASFormatCompatibilityCheckExp, ze_driver_handle_t, hDriver, ze_rtas_format_exp_t, rtasFormatA, ze_rtas_format_exp_t, rtasFormatB);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderBuildExp, ze_result_t, zeRTASBuilderBuildExp, ze_rtas_builder_exp_handle_t, hBuilder, const ze_rtas_builder_build_op_exp_desc_t *, pBuildOpDescriptor, void *, pScratchBuffer, size_t, scratchBufferSizeBytes, void *, pRtasBuffer, size_t, rtasBufferSizeBytes, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation, void *, pBuildUserPtr, ze_rtas_aabb_exp_t *, pBounds, size_t *, pRtasBufferSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASBuilderDestroyExp, ze_result_t, zeRTASBuilderDestroyExp, ze_rtas_builder_exp_handle_t, hBuilder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationCreateExp, ze_result_t, zeRTASParallelOperationCreateExp, ze_driver_handle_t, hDriver, ze_rtas_parallel_operation_exp_handle_t *, phParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationGetPropertiesExp, ze_result_t, zeRTASParallelOperationGetPropertiesExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation, ze_rtas_parallel_operation_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationJoinExp, ze_result_t, zeRTASParallelOperationJoinExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::RTASParallelOperationDestroyExp, ze_result_t, zeRTASParallelOperationDestroyExp, ze_rtas_parallel_operation_exp_handle_t, hParallelOperation);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetPitchFor2dImage, ze_result_t, zeMemGetPitchFor2dImage, ze_context_handle_t, hContext, ze_device_handle_t, hDevice, size_t, imageWidth, size_t, imageHeight, unsigned int, elementSizeInBytes, size_t *, rowPitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImageGetDeviceOffsetExp, ze_result_t, zeImageGetDeviceOffsetExp, ze_image_handle_t, hImage, uint64_t *, pDeviceOffset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListCreateCloneExp, ze_result_t, zeCommandListCreateCloneExp, ze_command_list_handle_t, hCommandList, ze_command_list_handle_t *, phClonedCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListImmediateAppendCommandListsExp, ze_result_t, zeCommandListImmediateAppendCommandListsExp, ze_command_list_handle_t, hCommandListImmediate, uint32_t, numCommandLists, ze_command_list_handle_t *, phCommandLists, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetNextCommandIdExp, ze_result_t, zeCommandListGetNextCommandIdExp, ze_command_list_handle_t, hCommandList, const ze_mutable_command_id_exp_desc_t *, desc, uint64_t *, pCommandId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListGetNextCommandIdWithKernelsExp, ze_result_t, zeCommandListGetNextCommandIdWithKernelsExp, ze_command_list_handle_t, hCommandList, const ze_mutable_command_id_exp_desc_t *, desc, uint32_t, numKernels, ze_kernel_handle_t *, phKernels, uint64_t *, pCommandId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandsExp, ze_result_t, zeCommandListUpdateMutableCommandsExp, ze_command_list_handle_t, hCommandList, const ze_mutable_commands_exp_desc_t *, desc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandSignalEventExp, ze_result_t, zeCommandListUpdateMutableCommandSignalEventExp, ze_command_list_handle_t, hCommandList, uint64_t, commandId, ze_event_handle_t, hSignalEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandWaitEventsExp, ze_result_t, zeCommandListUpdateMutableCommandWaitEventsExp, ze_command_list_handle_t, hCommandList, uint64_t, commandId, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CommandListUpdateMutableCommandKernelsExp, ze_result_t, zeCommandListUpdateMutableCommandKernelsExp, ze_command_list_handle_t, hCommandList, uint32_t, numKernels, uint64_t *, pCommandId, ze_kernel_handle_t *, phKernels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sInit, ze_result_t, zesInit, zes_init_flags_t, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverGet, ze_result_t, zesDriverGet, uint32_t *, pCount, zes_driver_handle_t *, phDrivers);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverGetExtensionProperties, ze_result_t, zesDriverGetExtensionProperties, zes_driver_handle_t, hDriver, uint32_t *, pCount, zes_driver_extension_properties_t *, pExtensionProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverGetExtensionFunctionAddress, ze_result_t, zesDriverGetExtensionFunctionAddress, zes_driver_handle_t, hDriver, const char *, name, void **, ppFunctionAddress);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGet, ze_result_t, zesDeviceGet, zes_driver_handle_t, hDriver, uint32_t *, pCount, zes_device_handle_t *, phDevices);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetProperties, ze_result_t, zesDeviceGetProperties, zes_device_handle_t, hDevice, zes_device_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetState, ze_result_t, zesDeviceGetState, zes_device_handle_t, hDevice, zes_device_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceReset, ze_result_t, zesDeviceReset, zes_device_handle_t, hDevice, ze_bool_t, force);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceResetExt, ze_result_t, zesDeviceResetExt, zes_device_handle_t, hDevice, zes_reset_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceProcessesGetState, ze_result_t, zesDeviceProcessesGetState, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_process_state_t *, pProcesses);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDevicePciGetProperties, ze_result_t, zesDevicePciGetProperties, zes_device_handle_t, hDevice, zes_pci_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDevicePciGetState, ze_result_t, zesDevicePciGetState, zes_device_handle_t, hDevice, zes_pci_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDevicePciGetBars, ze_result_t, zesDevicePciGetBars, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_pci_bar_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDevicePciGetStats, ze_result_t, zesDevicePciGetStats, zes_device_handle_t, hDevice, zes_pci_stats_t *, pStats);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceSetOverclockWaiver, ze_result_t, zesDeviceSetOverclockWaiver, zes_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetOverclockDomains, ze_result_t, zesDeviceGetOverclockDomains, zes_device_handle_t, hDevice, uint32_t *, pOverclockDomains);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetOverclockControls, ze_result_t, zesDeviceGetOverclockControls, zes_device_handle_t, hDevice, zes_overclock_domain_t, domainType, uint32_t *, pAvailableControls);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceResetOverclockSettings, ze_result_t, zesDeviceResetOverclockSettings, zes_device_handle_t, hDevice, ze_bool_t, onShippedState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceReadOverclockState, ze_result_t, zesDeviceReadOverclockState, zes_device_handle_t, hDevice, zes_overclock_mode_t *, pOverclockMode, ze_bool_t *, pWaiverSetting, ze_bool_t *, pOverclockState, zes_pending_action_t *, pPendingAction, ze_bool_t *, pPendingReset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumOverclockDomains, ze_result_t, zesDeviceEnumOverclockDomains, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_overclock_handle_t *, phDomainHandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetDomainProperties, ze_result_t, zesOverclockGetDomainProperties, zes_overclock_handle_t, hDomainHandle, zes_overclock_properties_t *, pDomainProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetDomainVFProperties, ze_result_t, zesOverclockGetDomainVFProperties, zes_overclock_handle_t, hDomainHandle, zes_vf_property_t *, pVFProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetDomainControlProperties, ze_result_t, zesOverclockGetDomainControlProperties, zes_overclock_handle_t, hDomainHandle, zes_overclock_control_t, DomainControl, zes_control_property_t *, pControlProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetControlCurrentValue, ze_result_t, zesOverclockGetControlCurrentValue, zes_overclock_handle_t, hDomainHandle, zes_overclock_control_t, DomainControl, double *, pValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetControlPendingValue, ze_result_t, zesOverclockGetControlPendingValue, zes_overclock_handle_t, hDomainHandle, zes_overclock_control_t, DomainControl, double *, pValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockSetControlUserValue, ze_result_t, zesOverclockSetControlUserValue, zes_overclock_handle_t, hDomainHandle, zes_overclock_control_t, DomainControl, double, pValue, zes_pending_action_t *, pPendingAction);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetControlState, ze_result_t, zesOverclockGetControlState, zes_overclock_handle_t, hDomainHandle, zes_overclock_control_t, DomainControl, zes_control_state_t *, pControlState, zes_pending_action_t *, pPendingAction);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockGetVFPointValues, ze_result_t, zesOverclockGetVFPointValues, zes_overclock_handle_t, hDomainHandle, zes_vf_type_t, VFType, zes_vf_array_type_t, VFArrayType, uint32_t, PointIndex, uint32_t *, PointValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sOverclockSetVFPointValues, ze_result_t, zesOverclockSetVFPointValues, zes_overclock_handle_t, hDomainHandle, zes_vf_type_t, VFType, uint32_t, PointIndex, uint32_t, PointValue);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumDiagnosticTestSuites, ze_result_t, zesDeviceEnumDiagnosticTestSuites, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_diag_handle_t *, phDiagnostics);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDiagnosticsGetProperties, ze_result_t, zesDiagnosticsGetProperties, zes_diag_handle_t, hDiagnostics, zes_diag_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDiagnosticsGetTests, ze_result_t, zesDiagnosticsGetTests, zes_diag_handle_t, hDiagnostics, uint32_t *, pCount, zes_diag_test_t *, pTests);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDiagnosticsRunTests, ze_result_t, zesDiagnosticsRunTests, zes_diag_handle_t, hDiagnostics, uint32_t, startIndex, uint32_t, endIndex, zes_diag_result_t *, pResult);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEccAvailable, ze_result_t, zesDeviceEccAvailable, zes_device_handle_t, hDevice, ze_bool_t *, pAvailable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEccConfigurable, ze_result_t, zesDeviceEccConfigurable, zes_device_handle_t, hDevice, ze_bool_t *, pConfigurable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetEccState, ze_result_t, zesDeviceGetEccState, zes_device_handle_t, hDevice, zes_device_ecc_properties_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceSetEccState, ze_result_t, zesDeviceSetEccState, zes_device_handle_t, hDevice, const zes_device_ecc_desc_t *, newState, zes_device_ecc_properties_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumEngineGroups, ze_result_t, zesDeviceEnumEngineGroups, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_engine_handle_t *, phEngine);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sEngineGetProperties, ze_result_t, zesEngineGetProperties, zes_engine_handle_t, hEngine, zes_engine_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sEngineGetActivity, ze_result_t, zesEngineGetActivity, zes_engine_handle_t, hEngine, zes_engine_stats_t *, pStats);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEventRegister, ze_result_t, zesDeviceEventRegister, zes_device_handle_t, hDevice, zes_event_type_flags_t, events);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverEventListen, ze_result_t, zesDriverEventListen, ze_driver_handle_t, hDriver, uint32_t, timeout, uint32_t, count, zes_device_handle_t *, phDevices, uint32_t *, pNumDeviceEvents, zes_event_type_flags_t *, pEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverEventListenEx, ze_result_t, zesDriverEventListenEx, ze_driver_handle_t, hDriver, uint64_t, timeout, uint32_t, count, zes_device_handle_t *, phDevices, uint32_t *, pNumDeviceEvents, zes_event_type_flags_t *, pEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumFabricPorts, ze_result_t, zesDeviceEnumFabricPorts, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_fabric_port_handle_t *, phPort);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetProperties, ze_result_t, zesFabricPortGetProperties, zes_fabric_port_handle_t, hPort, zes_fabric_port_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetLinkType, ze_result_t, zesFabricPortGetLinkType, zes_fabric_port_handle_t, hPort, zes_fabric_link_type_t *, pLinkType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetConfig, ze_result_t, zesFabricPortGetConfig, zes_fabric_port_handle_t, hPort, zes_fabric_port_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortSetConfig, ze_result_t, zesFabricPortSetConfig, zes_fabric_port_handle_t, hPort, const zes_fabric_port_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetState, ze_result_t, zesFabricPortGetState, zes_fabric_port_handle_t, hPort, zes_fabric_port_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetThroughput, ze_result_t, zesFabricPortGetThroughput, zes_fabric_port_handle_t, hPort, zes_fabric_port_throughput_t *, pThroughput);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetFabricErrorCounters, ze_result_t, zesFabricPortGetFabricErrorCounters, zes_fabric_port_handle_t, hPort, zes_fabric_port_error_counters_t *, pErrors);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFabricPortGetMultiPortThroughput, ze_result_t, zesFabricPortGetMultiPortThroughput, zes_device_handle_t, hDevice, uint32_t, numPorts, zes_fabric_port_handle_t *, phPort, zes_fabric_port_throughput_t **, pThroughput);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumFans, ze_result_t, zesDeviceEnumFans, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_fan_handle_t *, phFan);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanGetProperties, ze_result_t, zesFanGetProperties, zes_fan_handle_t, hFan, zes_fan_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanGetConfig, ze_result_t, zesFanGetConfig, zes_fan_handle_t, hFan, zes_fan_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanSetDefaultMode, ze_result_t, zesFanSetDefaultMode, zes_fan_handle_t, hFan);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanSetFixedSpeedMode, ze_result_t, zesFanSetFixedSpeedMode, zes_fan_handle_t, hFan, const zes_fan_speed_t *, speed);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanSetSpeedTableMode, ze_result_t, zesFanSetSpeedTableMode, zes_fan_handle_t, hFan, const zes_fan_speed_table_t *, speedTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFanGetState, ze_result_t, zesFanGetState, zes_fan_handle_t, hFan, zes_fan_speed_units_t, units, int32_t *, pSpeed);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumFirmwares, ze_result_t, zesDeviceEnumFirmwares, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_firmware_handle_t *, phFirmware);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareGetProperties, ze_result_t, zesFirmwareGetProperties, zes_firmware_handle_t, hFirmware, zes_firmware_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareFlash, ze_result_t, zesFirmwareFlash, zes_firmware_handle_t, hFirmware, void *, pImage, uint32_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareGetFlashProgress, ze_result_t, zesFirmwareGetFlashProgress, zes_firmware_handle_t, hFirmware, uint32_t *, pCompletionPercent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareGetConsoleLogs, ze_result_t, zesFirmwareGetConsoleLogs, zes_firmware_handle_t, hFirmware, size_t *, pSize, char *, pFirmwareLog);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumFrequencyDomains, ze_result_t, zesDeviceEnumFrequencyDomains, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_freq_handle_t *, phFrequency);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyGetProperties, ze_result_t, zesFrequencyGetProperties, zes_freq_handle_t, hFrequency, zes_freq_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyGetAvailableClocks, ze_result_t, zesFrequencyGetAvailableClocks, zes_freq_handle_t, hFrequency, uint32_t *, pCount, double *, phFrequency);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyGetRange, ze_result_t, zesFrequencyGetRange, zes_freq_handle_t, hFrequency, zes_freq_range_t *, pLimits);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencySetRange, ze_result_t, zesFrequencySetRange, zes_freq_handle_t, hFrequency, const zes_freq_range_t *, pLimits);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyGetState, ze_result_t, zesFrequencyGetState, zes_freq_handle_t, hFrequency, zes_freq_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyGetThrottleTime, ze_result_t, zesFrequencyGetThrottleTime, zes_freq_handle_t, hFrequency, zes_freq_throttle_time_t *, pThrottleTime);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetCapabilities, ze_result_t, zesFrequencyOcGetCapabilities, zes_freq_handle_t, hFrequency, zes_oc_capabilities_t *, pOcCapabilities);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetFrequencyTarget, ze_result_t, zesFrequencyOcGetFrequencyTarget, zes_freq_handle_t, hFrequency, double *, pCurrentOcFrequency);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcSetFrequencyTarget, ze_result_t, zesFrequencyOcSetFrequencyTarget, zes_freq_handle_t, hFrequency, double, CurrentOcFrequency);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetVoltageTarget, ze_result_t, zesFrequencyOcGetVoltageTarget, zes_freq_handle_t, hFrequency, double *, pCurrentVoltageTarget, double *, pCurrentVoltageOffset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcSetVoltageTarget, ze_result_t, zesFrequencyOcSetVoltageTarget, zes_freq_handle_t, hFrequency, double, CurrentVoltageTarget, double, CurrentVoltageOffset);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcSetMode, ze_result_t, zesFrequencyOcSetMode, zes_freq_handle_t, hFrequency, zes_oc_mode_t, CurrentOcMode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetMode, ze_result_t, zesFrequencyOcGetMode, zes_freq_handle_t, hFrequency, zes_oc_mode_t *, pCurrentOcMode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetIccMax, ze_result_t, zesFrequencyOcGetIccMax, zes_freq_handle_t, hFrequency, double *, pOcIccMax);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcSetIccMax, ze_result_t, zesFrequencyOcSetIccMax, zes_freq_handle_t, hFrequency, double, ocIccMax);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcGetTjMax, ze_result_t, zesFrequencyOcGetTjMax, zes_freq_handle_t, hFrequency, double *, pOcTjMax);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFrequencyOcSetTjMax, ze_result_t, zesFrequencyOcSetTjMax, zes_freq_handle_t, hFrequency, double, ocTjMax);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumLeds, ze_result_t, zesDeviceEnumLeds, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_led_handle_t *, phLed);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sLedGetProperties, ze_result_t, zesLedGetProperties, zes_led_handle_t, hLed, zes_led_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sLedGetState, ze_result_t, zesLedGetState, zes_led_handle_t, hLed, zes_led_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sLedSetState, ze_result_t, zesLedSetState, zes_led_handle_t, hLed, ze_bool_t, enable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sLedSetColor, ze_result_t, zesLedSetColor, zes_led_handle_t, hLed, const zes_led_color_t *, pColor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumMemoryModules, ze_result_t, zesDeviceEnumMemoryModules, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_mem_handle_t *, phMemory);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sMemoryGetProperties, ze_result_t, zesMemoryGetProperties, zes_mem_handle_t, hMemory, zes_mem_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sMemoryGetState, ze_result_t, zesMemoryGetState, zes_mem_handle_t, hMemory, zes_mem_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sMemoryGetBandwidth, ze_result_t, zesMemoryGetBandwidth, zes_mem_handle_t, hMemory, zes_mem_bandwidth_t *, pBandwidth);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumPerformanceFactorDomains, ze_result_t, zesDeviceEnumPerformanceFactorDomains, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_perf_handle_t *, phPerf);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPerformanceFactorGetProperties, ze_result_t, zesPerformanceFactorGetProperties, zes_perf_handle_t, hPerf, zes_perf_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPerformanceFactorGetConfig, ze_result_t, zesPerformanceFactorGetConfig, zes_perf_handle_t, hPerf, double *, pFactor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPerformanceFactorSetConfig, ze_result_t, zesPerformanceFactorSetConfig, zes_perf_handle_t, hPerf, double, factor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumPowerDomains, ze_result_t, zesDeviceEnumPowerDomains, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_pwr_handle_t *, phPower);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetCardPowerDomain, ze_result_t, zesDeviceGetCardPowerDomain, zes_device_handle_t, hDevice, zes_pwr_handle_t *, phPower);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerGetProperties, ze_result_t, zesPowerGetProperties, zes_pwr_handle_t, hPower, zes_power_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerGetEnergyCounter, ze_result_t, zesPowerGetEnergyCounter, zes_pwr_handle_t, hPower, zes_power_energy_counter_t *, pEnergy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerGetLimits, ze_result_t, zesPowerGetLimits, zes_pwr_handle_t, hPower, zes_power_sustained_limit_t *, pSustained, zes_power_burst_limit_t *, pBurst, zes_power_peak_limit_t *, pPeak);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerSetLimits, ze_result_t, zesPowerSetLimits, zes_pwr_handle_t, hPower, const zes_power_sustained_limit_t *, pSustained, const zes_power_burst_limit_t *, pBurst, const zes_power_peak_limit_t *, pPeak);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerGetEnergyThreshold, ze_result_t, zesPowerGetEnergyThreshold, zes_pwr_handle_t, hPower, zes_energy_threshold_t *, pThreshold);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerSetEnergyThreshold, ze_result_t, zesPowerSetEnergyThreshold, zes_pwr_handle_t, hPower, double, threshold);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumPsus, ze_result_t, zesDeviceEnumPsus, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_psu_handle_t *, phPsu);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPsuGetProperties, ze_result_t, zesPsuGetProperties, zes_psu_handle_t, hPsu, zes_psu_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPsuGetState, ze_result_t, zesPsuGetState, zes_psu_handle_t, hPsu, zes_psu_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumRasErrorSets, ze_result_t, zesDeviceEnumRasErrorSets, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_ras_handle_t *, phRas);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasGetProperties, ze_result_t, zesRasGetProperties, zes_ras_handle_t, hRas, zes_ras_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasGetConfig, ze_result_t, zesRasGetConfig, zes_ras_handle_t, hRas, zes_ras_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasSetConfig, ze_result_t, zesRasSetConfig, zes_ras_handle_t, hRas, const zes_ras_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasGetState, ze_result_t, zesRasGetState, zes_ras_handle_t, hRas, ze_bool_t, clear, zes_ras_state_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumSchedulers, ze_result_t, zesDeviceEnumSchedulers, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_sched_handle_t *, phScheduler);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerGetProperties, ze_result_t, zesSchedulerGetProperties, zes_sched_handle_t, hScheduler, zes_sched_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerGetCurrentMode, ze_result_t, zesSchedulerGetCurrentMode, zes_sched_handle_t, hScheduler, zes_sched_mode_t *, pMode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerGetTimeoutModeProperties, ze_result_t, zesSchedulerGetTimeoutModeProperties, zes_sched_handle_t, hScheduler, ze_bool_t, getDefaults, zes_sched_timeout_properties_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerGetTimesliceModeProperties, ze_result_t, zesSchedulerGetTimesliceModeProperties, zes_sched_handle_t, hScheduler, ze_bool_t, getDefaults, zes_sched_timeslice_properties_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerSetTimeoutMode, ze_result_t, zesSchedulerSetTimeoutMode, zes_sched_handle_t, hScheduler, zes_sched_timeout_properties_t *, pProperties, ze_bool_t *, pNeedReload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerSetTimesliceMode, ze_result_t, zesSchedulerSetTimesliceMode, zes_sched_handle_t, hScheduler, zes_sched_timeslice_properties_t *, pProperties, ze_bool_t *, pNeedReload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerSetExclusiveMode, ze_result_t, zesSchedulerSetExclusiveMode, zes_sched_handle_t, hScheduler, ze_bool_t *, pNeedReload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sSchedulerSetComputeUnitDebugMode, ze_result_t, zesSchedulerSetComputeUnitDebugMode, zes_sched_handle_t, hScheduler, ze_bool_t *, pNeedReload);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumStandbyDomains, ze_result_t, zesDeviceEnumStandbyDomains, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_standby_handle_t *, phStandby);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sStandbyGetProperties, ze_result_t, zesStandbyGetProperties, zes_standby_handle_t, hStandby, zes_standby_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sStandbyGetMode, ze_result_t, zesStandbyGetMode, zes_standby_handle_t, hStandby, zes_standby_promo_mode_t *, pMode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sStandbySetMode, ze_result_t, zesStandbySetMode, zes_standby_handle_t, hStandby, zes_standby_promo_mode_t, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumTemperatureSensors, ze_result_t, zesDeviceEnumTemperatureSensors, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_temp_handle_t *, phTemperature);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sTemperatureGetProperties, ze_result_t, zesTemperatureGetProperties, zes_temp_handle_t, hTemperature, zes_temp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sTemperatureGetConfig, ze_result_t, zesTemperatureGetConfig, zes_temp_handle_t, hTemperature, zes_temp_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sTemperatureSetConfig, ze_result_t, zesTemperatureSetConfig, zes_temp_handle_t, hTemperature, const zes_temp_config_t *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sTemperatureGetState, ze_result_t, zesTemperatureGetState, zes_temp_handle_t, hTemperature, double *, pTemperature);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerGetLimitsExt, ze_result_t, zesPowerGetLimitsExt, zes_pwr_handle_t, hPower, uint32_t *, pCount, zes_power_limit_ext_desc_t *, pSustained);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sPowerSetLimitsExt, ze_result_t, zesPowerSetLimitsExt, zes_pwr_handle_t, hPower, uint32_t *, pCount, zes_power_limit_ext_desc_t *, pSustained);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sEngineGetActivityExt, ze_result_t, zesEngineGetActivityExt, zes_engine_handle_t, hEngine, uint32_t *, pCount, zes_engine_stats_t *, pStats);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasGetStateExp, ze_result_t, zesRasGetStateExp, zes_ras_handle_t, hRas, uint32_t *, pCount, zes_ras_state_exp_t *, pState);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sRasClearStateExp, ze_result_t, zesRasClearStateExp, zes_ras_handle_t, hRas, zes_ras_error_category_exp_t, category);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareGetSecurityVersionExp, ze_result_t, zesFirmwareGetSecurityVersionExp, zes_firmware_handle_t, hFirmware, char *, pVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sFirmwareSetSecurityVersionExp, ze_result_t, zesFirmwareSetSecurityVersionExp, zes_firmware_handle_t, hFirmware);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceGetSubDevicePropertiesExp, ze_result_t, zesDeviceGetSubDevicePropertiesExp, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_subdevice_exp_properties_t *, pSubdeviceProps);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDriverGetDeviceByUuidExp, ze_result_t, zesDriverGetDeviceByUuidExp, zes_driver_handle_t, hDriver, zes_uuid_t, uuid, zes_device_handle_t *, phDevice, ze_bool_t *, onSubdevice, uint32_t *, subdeviceId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumActiveVFExp, ze_result_t, zesDeviceEnumActiveVFExp, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_vf_handle_t *, phVFhandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFPropertiesExp, ze_result_t, zesVFManagementGetVFPropertiesExp, zes_vf_handle_t, hVFhandle, zes_vf_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFMemoryUtilizationExp, ze_result_t, zesVFManagementGetVFMemoryUtilizationExp, zes_vf_handle_t, hVFhandle, uint32_t *, pCount, zes_vf_util_mem_exp_t *, pMemUtil);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFEngineUtilizationExp, ze_result_t, zesVFManagementGetVFEngineUtilizationExp, zes_vf_handle_t, hVFhandle, uint32_t *, pCount, zes_vf_util_engine_exp_t *, pEngineUtil);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementSetVFTelemetryModeExp, ze_result_t, zesVFManagementSetVFTelemetryModeExp, zes_vf_handle_t, hVFhandle, zes_vf_info_util_exp_flags_t, flags, ze_bool_t, enable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementSetVFTelemetrySamplingIntervalExp, ze_result_t, zesVFManagementSetVFTelemetrySamplingIntervalExp, zes_vf_handle_t, hVFhandle, zes_vf_info_util_exp_flags_t, flag, uint64_t, samplingInterval);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sDeviceEnumEnabledVFExp, ze_result_t, zesDeviceEnumEnabledVFExp, zes_device_handle_t, hDevice, uint32_t *, pCount, zes_vf_handle_t *, phVFhandle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFCapabilitiesExp, ze_result_t, zesVFManagementGetVFCapabilitiesExp, zes_vf_handle_t, hVFhandle, zes_vf_exp_capabilities_t *, pCapability);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFMemoryUtilizationExp2, ze_result_t, zesVFManagementGetVFMemoryUtilizationExp2, zes_vf_handle_t, hVFhandle, uint32_t *, pCount, zes_vf_util_mem_exp2_t *, pMemUtil);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFEngineUtilizationExp2, ze_result_t, zesVFManagementGetVFEngineUtilizationExp2, zes_vf_handle_t, hVFhandle, uint32_t *, pCount, zes_vf_util_engine_exp2_t *, pEngineUtil);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sVFManagementGetVFCapabilitiesExp2, ze_result_t, zesVFManagementGetVFCapabilitiesExp2, zes_vf_handle_t, hVFhandle, zes_vf_exp2_capabilities_t *, pCapability);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tModuleGetDebugInfo, ze_result_t, zetModuleGetDebugInfo, zet_module_handle_t, hModule, zet_module_debug_info_format_t, format, size_t *, pSize, uint8_t *, pDebugInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDeviceGetDebugProperties, ze_result_t, zetDeviceGetDebugProperties, zet_device_handle_t, hDevice, zet_device_debug_properties_t *, pDebugProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugAttach, ze_result_t, zetDebugAttach, zet_device_handle_t, hDevice, const zet_debug_config_t *, config, zet_debug_session_handle_t *, phDebug);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugDetach, ze_result_t, zetDebugDetach, zet_debug_session_handle_t, hDebug);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugReadEvent, ze_result_t, zetDebugReadEvent, zet_debug_session_handle_t, hDebug, uint64_t, timeout, zet_debug_event_t *, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugAcknowledgeEvent, ze_result_t, zetDebugAcknowledgeEvent, zet_debug_session_handle_t, hDebug, const zet_debug_event_t *, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugInterrupt, ze_result_t, zetDebugInterrupt, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugResume, ze_result_t, zetDebugResume, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugReadMemory, ze_result_t, zetDebugReadMemory, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread, const zet_debug_memory_space_desc_t *, desc, size_t, size, void *, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugWriteMemory, ze_result_t, zetDebugWriteMemory, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread, const zet_debug_memory_space_desc_t *, desc, size_t, size, const void *, buffer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugGetRegisterSetProperties, ze_result_t, zetDebugGetRegisterSetProperties, zet_device_handle_t, hDevice, uint32_t *, pCount, zet_debug_regset_properties_t *, pRegisterSetProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugGetThreadRegisterSetProperties, ze_result_t, zetDebugGetThreadRegisterSetProperties, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread, uint32_t *, pCount, zet_debug_regset_properties_t *, pRegisterSetProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugReadRegisters, ze_result_t, zetDebugReadRegisters, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread, uint32_t, type, uint32_t, start, uint32_t, count, void *, pRegisterValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDebugWriteRegisters, ze_result_t, zetDebugWriteRegisters, zet_debug_session_handle_t, hDebug, ze_device_thread_t, thread, uint32_t, type, uint32_t, start, uint32_t, count, void *, pRegisterValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupGet, ze_result_t, zetMetricGroupGet, zet_device_handle_t, hDevice, uint32_t *, pCount, zet_metric_group_handle_t *, phMetricGroups);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupGetProperties, ze_result_t, zetMetricGroupGetProperties, zet_metric_group_handle_t, hMetricGroup, zet_metric_group_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupCalculateMetricValues, ze_result_t, zetMetricGroupCalculateMetricValues, zet_metric_group_handle_t, hMetricGroup, zet_metric_group_calculation_type_t, type, size_t, rawDataSize, const uint8_t *, pRawData, uint32_t *, pMetricValueCount, zet_typed_value_t *, pMetricValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGet, ze_result_t, zetMetricGet, zet_metric_group_handle_t, hMetricGroup, uint32_t *, pCount, zet_metric_handle_t *, phMetrics);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGetProperties, ze_result_t, zetMetricGetProperties, zet_metric_handle_t, hMetric, zet_metric_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tContextActivateMetricGroups, ze_result_t, zetContextActivateMetricGroups, zet_context_handle_t, hContext, zet_device_handle_t, hDevice, uint32_t, count, zet_metric_group_handle_t *, phMetricGroups);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricStreamerOpen, ze_result_t, zetMetricStreamerOpen, zet_context_handle_t, hContext, zet_device_handle_t, hDevice, zet_metric_group_handle_t, hMetricGroup, zet_metric_streamer_desc_t *, desc, ze_event_handle_t, hNotificationEvent, zet_metric_streamer_handle_t *, phMetricStreamer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tCommandListAppendMetricStreamerMarker, ze_result_t, zetCommandListAppendMetricStreamerMarker, zet_command_list_handle_t, hCommandList, zet_metric_streamer_handle_t, hMetricStreamer, uint32_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricStreamerClose, ze_result_t, zetMetricStreamerClose, zet_metric_streamer_handle_t, hMetricStreamer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricStreamerReadData, ze_result_t, zetMetricStreamerReadData, zet_metric_streamer_handle_t, hMetricStreamer, uint32_t, maxReportCount, size_t *, pRawDataSize, uint8_t *, pRawData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryPoolCreate, ze_result_t, zetMetricQueryPoolCreate, zet_context_handle_t, hContext, zet_device_handle_t, hDevice, zet_metric_group_handle_t, hMetricGroup, const zet_metric_query_pool_desc_t *, desc, zet_metric_query_pool_handle_t *, phMetricQueryPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryPoolDestroy, ze_result_t, zetMetricQueryPoolDestroy, zet_metric_query_pool_handle_t, hMetricQueryPool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryCreate, ze_result_t, zetMetricQueryCreate, zet_metric_query_pool_handle_t, hMetricQueryPool, uint32_t, index, zet_metric_query_handle_t *, phMetricQuery);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryDestroy, ze_result_t, zetMetricQueryDestroy, zet_metric_query_handle_t, hMetricQuery);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryReset, ze_result_t, zetMetricQueryReset, zet_metric_query_handle_t, hMetricQuery);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tCommandListAppendMetricQueryBegin, ze_result_t, zetCommandListAppendMetricQueryBegin, zet_command_list_handle_t, hCommandList, zet_metric_query_handle_t, hMetricQuery);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tCommandListAppendMetricQueryEnd, ze_result_t, zetCommandListAppendMetricQueryEnd, zet_command_list_handle_t, hCommandList, zet_metric_query_handle_t, hMetricQuery, ze_event_handle_t, hSignalEvent, uint32_t, numWaitEvents, ze_event_handle_t *, phWaitEvents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tCommandListAppendMetricMemoryBarrier, ze_result_t, zetCommandListAppendMetricMemoryBarrier, zet_command_list_handle_t, hCommandList);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricQueryGetData, ze_result_t, zetMetricQueryGetData, zet_metric_query_handle_t, hMetricQuery, size_t *, pRawDataSize, uint8_t *, pRawData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tKernelGetProfileInfo, ze_result_t, zetKernelGetProfileInfo, zet_kernel_handle_t, hKernel, zet_profile_properties_t *, pProfileProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tTracerExpCreate, ze_result_t, zetTracerExpCreate, zet_context_handle_t, hContext, const zet_tracer_exp_desc_t *, desc, zet_tracer_exp_handle_t *, phTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tTracerExpDestroy, ze_result_t, zetTracerExpDestroy, zet_tracer_exp_handle_t, hTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tTracerExpSetPrologues, ze_result_t, zetTracerExpSetPrologues, zet_tracer_exp_handle_t, hTracer, zet_core_callbacks_t *, pCoreCbs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tTracerExpSetEpilogues, ze_result_t, zetTracerExpSetEpilogues, zet_tracer_exp_handle_t, hTracer, zet_core_callbacks_t *, pCoreCbs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tTracerExpSetEnabled, ze_result_t, zetTracerExpSetEnabled, zet_tracer_exp_handle_t, hTracer, ze_bool_t, enable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDeviceGetConcurrentMetricGroupsExp, ze_result_t, zetDeviceGetConcurrentMetricGroupsExp, zet_device_handle_t, hDevice, uint32_t, metricGroupCount, zet_metric_group_handle_t *, phMetricGroups, uint32_t *, pMetricGroupsCountPerConcurrentGroup, uint32_t *, pConcurrentGroupCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerCreateExp, ze_result_t, zetMetricTracerCreateExp, zet_context_handle_t, hContext, zet_device_handle_t, hDevice, uint32_t, metricGroupCount, zet_metric_group_handle_t *, phMetricGroups, zet_metric_tracer_exp_desc_t *, desc, ze_event_handle_t, hNotificationEvent, zet_metric_tracer_exp_handle_t *, phMetricTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerDestroyExp, ze_result_t, zetMetricTracerDestroyExp, zet_metric_tracer_exp_handle_t, hMetricTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerEnableExp, ze_result_t, zetMetricTracerEnableExp, zet_metric_tracer_exp_handle_t, hMetricTracer, ze_bool_t, synchronous);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerDisableExp, ze_result_t, zetMetricTracerDisableExp, zet_metric_tracer_exp_handle_t, hMetricTracer, ze_bool_t, synchronous);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerReadDataExp, ze_result_t, zetMetricTracerReadDataExp, zet_metric_tracer_exp_handle_t, hMetricTracer, size_t *, pRawDataSize, uint8_t *, pRawData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricDecoderCreateExp, ze_result_t, zetMetricDecoderCreateExp, zet_metric_tracer_exp_handle_t, hMetricTracer, zet_metric_decoder_exp_handle_t *, phMetricDecoder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricDecoderDestroyExp, ze_result_t, zetMetricDecoderDestroyExp, zet_metric_decoder_exp_handle_t, phMetricDecoder);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricDecoderGetDecodableMetricsExp, ze_result_t, zetMetricDecoderGetDecodableMetricsExp, zet_metric_decoder_exp_handle_t, hMetricDecoder, uint32_t *, pCount, zet_metric_handle_t *, phMetrics);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricTracerDecodeExp, ze_result_t, zetMetricTracerDecodeExp, zet_metric_decoder_exp_handle_t, phMetricDecoder, size_t *, pRawDataSize, uint8_t *, pRawData, uint32_t, metricsCount, zet_metric_handle_t *, phMetrics, uint32_t *, pSetCount, uint32_t *, pMetricEntriesCountPerSet, uint32_t *, pMetricEntriesCount, zet_metric_entry_exp_t *, pMetricEntries);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tCommandListAppendMarkerExp, ze_result_t, zetCommandListAppendMarkerExp, zet_command_list_handle_t, hCommandList, zet_metric_group_handle_t, hMetricGroup, uint32_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDeviceEnableMetricsExp, ze_result_t, zetDeviceEnableMetricsExp, zet_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDeviceDisableMetricsExp, ze_result_t, zetDeviceDisableMetricsExp, zet_device_handle_t, hDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupCalculateMultipleMetricValuesExp, ze_result_t, zetMetricGroupCalculateMultipleMetricValuesExp, zet_metric_group_handle_t, hMetricGroup, zet_metric_group_calculation_type_t, type, size_t, rawDataSize, const uint8_t *, pRawData, uint32_t *, pSetCount, uint32_t *, pTotalMetricValueCount, uint32_t *, pMetricCounts, zet_typed_value_t *, pMetricValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupGetGlobalTimestampsExp, ze_result_t, zetMetricGroupGetGlobalTimestampsExp, zet_metric_group_handle_t, hMetricGroup, ze_bool_t, synchronizedWithHost, uint64_t *, globalTimestamp, uint64_t *, metricTimestamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupGetExportDataExp, ze_result_t, zetMetricGroupGetExportDataExp, zet_metric_group_handle_t, hMetricGroup, const uint8_t *, pRawData, size_t, rawDataSize, size_t *, pExportDataSize, uint8_t *, pExportData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupCalculateMetricExportDataExp, ze_result_t, zetMetricGroupCalculateMetricExportDataExp, ze_driver_handle_t, hDriver, zet_metric_group_calculation_type_t, type, size_t, exportDataSize, const uint8_t *, pExportData, zet_metric_calculate_exp_desc_t *, pCalculateDescriptor, uint32_t *, pSetCount, uint32_t *, pTotalMetricValueCount, uint32_t *, pMetricCounts, zet_typed_value_t *, pMetricValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricProgrammableGetExp, ze_result_t, zetMetricProgrammableGetExp, zet_device_handle_t, hDevice, uint32_t *, pCount, zet_metric_programmable_exp_handle_t *, phMetricProgrammables);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricProgrammableGetPropertiesExp, ze_result_t, zetMetricProgrammableGetPropertiesExp, zet_metric_programmable_exp_handle_t, hMetricProgrammable, zet_metric_programmable_exp_properties_t *, pProperties);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricProgrammableGetParamInfoExp, ze_result_t, zetMetricProgrammableGetParamInfoExp, zet_metric_programmable_exp_handle_t, hMetricProgrammable, uint32_t *, pParameterCount, zet_metric_programmable_param_info_exp_t *, pParameterInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricProgrammableGetParamValueInfoExp, ze_result_t, zetMetricProgrammableGetParamValueInfoExp, zet_metric_programmable_exp_handle_t, hMetricProgrammable, uint32_t, parameterOrdinal, uint32_t *, pValueInfoCount, zet_metric_programmable_param_value_info_exp_t *, pValueInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricCreateFromProgrammableExp2, ze_result_t, zetMetricCreateFromProgrammableExp2, zet_metric_programmable_exp_handle_t, hMetricProgrammable, uint32_t, parameterCount, zet_metric_programmable_param_value_exp_t *, pParameterValues, const char *, pName, const char *, pDescription, uint32_t *, pMetricHandleCount, zet_metric_handle_t *, phMetricHandles);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricCreateFromProgrammableExp, ze_result_t, zetMetricCreateFromProgrammableExp, zet_metric_programmable_exp_handle_t, hMetricProgrammable, zet_metric_programmable_param_value_exp_t *, pParameterValues, uint32_t, parameterCount, const char *, pName, const char *, pDescription, uint32_t *, pMetricHandleCount, zet_metric_handle_t *, phMetricHandles);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tDeviceCreateMetricGroupsFromMetricsExp, ze_result_t, zetDeviceCreateMetricGroupsFromMetricsExp, zet_device_handle_t, hDevice, uint32_t, metricCount, zet_metric_handle_t *, phMetrics, const char *, pMetricGroupNamePrefix, const char *, pDescription, uint32_t *, pMetricGroupCount, zet_metric_group_handle_t *, phMetricGroup);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupCreateExp, ze_result_t, zetMetricGroupCreateExp, zet_device_handle_t, hDevice, const char *, pName, const char *, pDescription, zet_metric_group_sampling_type_flags_t, samplingType, zet_metric_group_handle_t *, phMetricGroup);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupAddMetricExp, ze_result_t, zetMetricGroupAddMetricExp, zet_metric_group_handle_t, hMetricGroup, zet_metric_handle_t, hMetric, size_t *, pErrorStringSize, char *, pErrorString);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupRemoveMetricExp, ze_result_t, zetMetricGroupRemoveMetricExp, zet_metric_group_handle_t, hMetricGroup, zet_metric_handle_t, hMetric);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupCloseExp, ze_result_t, zetMetricGroupCloseExp, zet_metric_group_handle_t, hMetricGroup);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricGroupDestroyExp, ze_result_t, zetMetricGroupDestroyExp, zet_metric_group_handle_t, hMetricGroup);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tMetricDestroyExp, ze_result_t, zetMetricDestroyExp, zet_metric_handle_t, hMetric);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCreate, ze_result_t, zelTracerCreate, const zel_tracer_desc_t *, desc, zel_tracer_handle_t *, phTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDestroy, ze_result_t, zelTracerDestroy, zel_tracer_handle_t, hTracer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerSetPrologues, ze_result_t, zelTracerSetPrologues, zel_tracer_handle_t, hTracer, zel_core_callbacks_t *, pCoreCbs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerSetEpilogues, ze_result_t, zelTracerSetEpilogues, zel_tracer_handle_t, hTracer, zel_core_callbacks_t *, pCoreCbs);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerSetEnabled, ze_result_t, zelTracerSetEnabled, zel_tracer_handle_t, hTracer, ze_bool_t, enable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetGlobalProcAddrTable, ze_result_t, zesGetGlobalProcAddrTable, ze_api_version_t, version, zes_global_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetDeviceProcAddrTable, ze_result_t, zesGetDeviceProcAddrTable, ze_api_version_t, version, zes_device_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetDeviceExpProcAddrTable, ze_result_t, zesGetDeviceExpProcAddrTable, ze_api_version_t, version, zes_device_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetDriverProcAddrTable, ze_result_t, zesGetDriverProcAddrTable, ze_api_version_t, version, zes_driver_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetDriverExpProcAddrTable, ze_result_t, zesGetDriverExpProcAddrTable, ze_api_version_t, version, zes_driver_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetOverclockProcAddrTable, ze_result_t, zesGetOverclockProcAddrTable, ze_api_version_t, version, zes_overclock_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetSchedulerProcAddrTable, ze_result_t, zesGetSchedulerProcAddrTable, ze_api_version_t, version, zes_scheduler_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetPerformanceFactorProcAddrTable, ze_result_t, zesGetPerformanceFactorProcAddrTable, ze_api_version_t, version, zes_performance_factor_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetPowerProcAddrTable, ze_result_t, zesGetPowerProcAddrTable, ze_api_version_t, version, zes_power_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetFrequencyProcAddrTable, ze_result_t, zesGetFrequencyProcAddrTable, ze_api_version_t, version, zes_frequency_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetEngineProcAddrTable, ze_result_t, zesGetEngineProcAddrTable, ze_api_version_t, version, zes_engine_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetStandbyProcAddrTable, ze_result_t, zesGetStandbyProcAddrTable, ze_api_version_t, version, zes_standby_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetFirmwareProcAddrTable, ze_result_t, zesGetFirmwareProcAddrTable, ze_api_version_t, version, zes_firmware_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetFirmwareExpProcAddrTable, ze_result_t, zesGetFirmwareExpProcAddrTable, ze_api_version_t, version, zes_firmware_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetMemoryProcAddrTable, ze_result_t, zesGetMemoryProcAddrTable, ze_api_version_t, version, zes_memory_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetFabricPortProcAddrTable, ze_result_t, zesGetFabricPortProcAddrTable, ze_api_version_t, version, zes_fabric_port_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetTemperatureProcAddrTable, ze_result_t, zesGetTemperatureProcAddrTable, ze_api_version_t, version, zes_temperature_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetPsuProcAddrTable, ze_result_t, zesGetPsuProcAddrTable, ze_api_version_t, version, zes_psu_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetFanProcAddrTable, ze_result_t, zesGetFanProcAddrTable, ze_api_version_t, version, zes_fan_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetLedProcAddrTable, ze_result_t, zesGetLedProcAddrTable, ze_api_version_t, version, zes_led_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetRasProcAddrTable, ze_result_t, zesGetRasProcAddrTable, ze_api_version_t, version, zes_ras_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetRasExpProcAddrTable, ze_result_t, zesGetRasExpProcAddrTable, ze_api_version_t, version, zes_ras_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetDiagnosticsProcAddrTable, ze_result_t, zesGetDiagnosticsProcAddrTable, ze_api_version_t, version, zes_diagnostics_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::sGetVFManagementExpProcAddrTable, ze_result_t, zesGetVFManagementExpProcAddrTable, ze_api_version_t, version, zes_vf_management_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricProgrammableExpProcAddrTable, ze_result_t, zetGetMetricProgrammableExpProcAddrTable, ze_api_version_t, version, zet_metric_programmable_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricTracerExpProcAddrTable, ze_result_t, zetGetMetricTracerExpProcAddrTable, ze_api_version_t, version, zet_metric_tracer_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricDecoderExpProcAddrTable, ze_result_t, zetGetMetricDecoderExpProcAddrTable, ze_api_version_t, version, zet_metric_decoder_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetDeviceProcAddrTable, ze_result_t, zetGetDeviceProcAddrTable, ze_api_version_t, version, zet_device_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetDeviceExpProcAddrTable, ze_result_t, zetGetDeviceExpProcAddrTable, ze_api_version_t, version, zet_device_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetContextProcAddrTable, ze_result_t, zetGetContextProcAddrTable, ze_api_version_t, version, zet_context_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetCommandListProcAddrTable, ze_result_t, zetGetCommandListProcAddrTable, ze_api_version_t, version, zet_command_list_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetCommandListExpProcAddrTable, ze_result_t, zetGetCommandListExpProcAddrTable, ze_api_version_t, version, zet_command_list_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetModuleProcAddrTable, ze_result_t, zetGetModuleProcAddrTable, ze_api_version_t, version, zet_module_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetKernelProcAddrTable, ze_result_t, zetGetKernelProcAddrTable, ze_api_version_t, version, zet_kernel_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricProcAddrTable, ze_result_t, zetGetMetricProcAddrTable, ze_api_version_t, version, zet_metric_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricExpProcAddrTable, ze_result_t, zetGetMetricExpProcAddrTable, ze_api_version_t, version, zet_metric_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricGroupProcAddrTable, ze_result_t, zetGetMetricGroupProcAddrTable, ze_api_version_t, version, zet_metric_group_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricGroupExpProcAddrTable, ze_result_t, zetGetMetricGroupExpProcAddrTable, ze_api_version_t, version, zet_metric_group_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricStreamerProcAddrTable, ze_result_t, zetGetMetricStreamerProcAddrTable, ze_api_version_t, version, zet_metric_streamer_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricQueryPoolProcAddrTable, ze_result_t, zetGetMetricQueryPoolProcAddrTable, ze_api_version_t, version, zet_metric_query_pool_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetMetricQueryProcAddrTable, ze_result_t, zetGetMetricQueryProcAddrTable, ze_api_version_t, version, zet_metric_query_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetTracerExpProcAddrTable, ze_result_t, zetGetTracerExpProcAddrTable, ze_api_version_t, version, zet_tracer_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::tGetDebugProcAddrTable, ze_result_t, zetGetDebugProcAddrTable, ze_api_version_t, version, zet_debug_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetRTASBuilderProcAddrTable, ze_result_t, zeGetRTASBuilderProcAddrTable, ze_api_version_t, version, ze_rtas_builder_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetRTASBuilderExpProcAddrTable, ze_result_t, zeGetRTASBuilderExpProcAddrTable, ze_api_version_t, version, ze_rtas_builder_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetRTASParallelOperationProcAddrTable, ze_result_t, zeGetRTASParallelOperationProcAddrTable, ze_api_version_t, version, ze_rtas_parallel_operation_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetRTASParallelOperationExpProcAddrTable, ze_result_t, zeGetRTASParallelOperationExpProcAddrTable, ze_api_version_t, version, ze_rtas_parallel_operation_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetGlobalProcAddrTable, ze_result_t, zeGetGlobalProcAddrTable, ze_api_version_t, version, ze_global_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDriverProcAddrTable, ze_result_t, zeGetDriverProcAddrTable, ze_api_version_t, version, ze_driver_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDriverExpProcAddrTable, ze_result_t, zeGetDriverExpProcAddrTable, ze_api_version_t, version, ze_driver_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceProcAddrTable, ze_result_t, zeGetDeviceProcAddrTable, ze_api_version_t, version, ze_device_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetDeviceExpProcAddrTable, ze_result_t, zeGetDeviceExpProcAddrTable, ze_api_version_t, version, ze_device_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetContextProcAddrTable, ze_result_t, zeGetContextProcAddrTable, ze_api_version_t, version, ze_context_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetCommandQueueProcAddrTable, ze_result_t, zeGetCommandQueueProcAddrTable, ze_api_version_t, version, ze_command_queue_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetCommandListProcAddrTable, ze_result_t, zeGetCommandListProcAddrTable, ze_api_version_t, version, ze_command_list_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetCommandListExpProcAddrTable, ze_result_t, zeGetCommandListExpProcAddrTable, ze_api_version_t, version, ze_command_list_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetImageProcAddrTable, ze_result_t, zeGetImageProcAddrTable, ze_api_version_t, version, ze_image_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetImageExpProcAddrTable, ze_result_t, zeGetImageExpProcAddrTable, ze_api_version_t, version, ze_image_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetMemProcAddrTable, ze_result_t, zeGetMemProcAddrTable, ze_api_version_t, version, ze_mem_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetMemExpProcAddrTable, ze_result_t, zeGetMemExpProcAddrTable, ze_api_version_t, version, ze_mem_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetFenceProcAddrTable, ze_result_t, zeGetFenceProcAddrTable, ze_api_version_t, version, ze_fence_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetEventPoolProcAddrTable, ze_result_t, zeGetEventPoolProcAddrTable, ze_api_version_t, version, ze_event_pool_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetEventProcAddrTable, ze_result_t, zeGetEventProcAddrTable, ze_api_version_t, version, ze_event_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetEventExpProcAddrTable, ze_result_t, zeGetEventExpProcAddrTable, ze_api_version_t, version, ze_event_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetModuleProcAddrTable, ze_result_t, zeGetModuleProcAddrTable, ze_api_version_t, version, ze_module_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetModuleBuildLogProcAddrTable, ze_result_t, zeGetModuleBuildLogProcAddrTable, ze_api_version_t, version, ze_module_build_log_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetKernelProcAddrTable, ze_result_t, zeGetKernelProcAddrTable, ze_api_version_t, version, ze_kernel_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetKernelExpProcAddrTable, ze_result_t, zeGetKernelExpProcAddrTable, ze_api_version_t, version, ze_kernel_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetSamplerProcAddrTable, ze_result_t, zeGetSamplerProcAddrTable, ze_api_version_t, version, ze_sampler_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetPhysicalMemProcAddrTable, ze_result_t, zeGetPhysicalMemProcAddrTable, ze_api_version_t, version, ze_physical_mem_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetVirtualMemProcAddrTable, ze_result_t, zeGetVirtualMemProcAddrTable, ze_api_version_t, version, ze_virtual_mem_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetFabricVertexExpProcAddrTable, ze_result_t, zeGetFabricVertexExpProcAddrTable, ze_api_version_t, version, ze_fabric_vertex_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetFabricEdgeExpProcAddrTable, ze_result_t, zeGetFabricEdgeExpProcAddrTable, ze_api_version_t, version, ze_fabric_edge_exp_dditable_t *, pDdiTable);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lLoaderGetVersions, ze_result_t, zelLoaderGetVersions, size_t *, num_elems, zel_component_version_t *, versions);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lLoaderTranslateHandle, ze_result_t, zelLoaderTranslateHandle, zel_handle_type_t, handleType, void *, handleIn, void **, handleOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lSetDriverTeardown, ze_result_t, zelSetDriverTeardown);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lSetDelayLoaderContextTeardown, void, zelSetDelayLoaderContextTeardown);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lLoaderContextTeardown, void, zelLoaderContextTeardown);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lEnableTracingLayer, ze_result_t, zelEnableTracingLayer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lCheckIsLoaderInTearDown, bool, zelCheckIsLoaderInTearDown);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lRegisterTeardownCallback, ze_result_t, zelRegisterTeardownCallback, zel_loader_teardown_callback_t, application_callback, zel_application_teardown_callback_t *, loader_callback, uint32_t *, index);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lDisableTracingLayer, ze_result_t, zelDisableTracingLayer);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerInitRegisterCallback, ze_result_t, zelTracerInitRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnInitCb_t, pfnInitCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetRegisterCallback, ze_result_t, zelTracerDriverGetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetCb_t, pfnGetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerInitDriversRegisterCallback, ze_result_t, zelTracerInitDriversRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnInitDriversCb_t, pfnInitDriversCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetApiVersionRegisterCallback, ze_result_t, zelTracerDriverGetApiVersionRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetApiVersionCb_t, pfnGetApiVersionCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetPropertiesRegisterCallback, ze_result_t, zelTracerDriverGetPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetPropertiesCb_t, pfnGetPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetIpcPropertiesRegisterCallback, ze_result_t, zelTracerDriverGetIpcPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetIpcPropertiesCb_t, pfnGetIpcPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetExtensionPropertiesRegisterCallback, ze_result_t, zelTracerDriverGetExtensionPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetExtensionPropertiesCb_t, pfnGetExtensionPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetExtensionFunctionAddressRegisterCallback, ze_result_t, zelTracerDriverGetExtensionFunctionAddressRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetExtensionFunctionAddressCb_t, pfnGetExtensionFunctionAddressCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverGetLastErrorDescriptionRegisterCallback, ze_result_t, zelTracerDriverGetLastErrorDescriptionRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverGetLastErrorDescriptionCb_t, pfnGetLastErrorDescriptionCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetRegisterCallback, ze_result_t, zelTracerDeviceGetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetCb_t, pfnGetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetRootDeviceRegisterCallback, ze_result_t, zelTracerDeviceGetRootDeviceRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetRootDeviceCb_t, pfnGetRootDeviceCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetSubDevicesRegisterCallback, ze_result_t, zelTracerDeviceGetSubDevicesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetSubDevicesCb_t, pfnGetSubDevicesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetPropertiesCb_t, pfnGetPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetComputePropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetComputePropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetComputePropertiesCb_t, pfnGetComputePropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetModulePropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetModulePropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetModulePropertiesCb_t, pfnGetModulePropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetCommandQueueGroupPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetCommandQueueGroupPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetCommandQueueGroupPropertiesCb_t, pfnGetCommandQueueGroupPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetMemoryPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetMemoryPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetMemoryPropertiesCb_t, pfnGetMemoryPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetMemoryAccessPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetMemoryAccessPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetMemoryAccessPropertiesCb_t, pfnGetMemoryAccessPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetCachePropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetCachePropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetCachePropertiesCb_t, pfnGetCachePropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetImagePropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetImagePropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetImagePropertiesCb_t, pfnGetImagePropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetExternalMemoryPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetExternalMemoryPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetExternalMemoryPropertiesCb_t, pfnGetExternalMemoryPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetP2PPropertiesRegisterCallback, ze_result_t, zelTracerDeviceGetP2PPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetP2PPropertiesCb_t, pfnGetP2PPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceCanAccessPeerRegisterCallback, ze_result_t, zelTracerDeviceCanAccessPeerRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceCanAccessPeerCb_t, pfnCanAccessPeerCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetStatusRegisterCallback, ze_result_t, zelTracerDeviceGetStatusRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetStatusCb_t, pfnGetStatusCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetGlobalTimestampsRegisterCallback, ze_result_t, zelTracerDeviceGetGlobalTimestampsRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetGlobalTimestampsCb_t, pfnGetGlobalTimestampsCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextCreateRegisterCallback, ze_result_t, zelTracerContextCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextCreateExRegisterCallback, ze_result_t, zelTracerContextCreateExRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextCreateExCb_t, pfnCreateExCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextDestroyRegisterCallback, ze_result_t, zelTracerContextDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextGetStatusRegisterCallback, ze_result_t, zelTracerContextGetStatusRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextGetStatusCb_t, pfnGetStatusCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueCreateRegisterCallback, ze_result_t, zelTracerCommandQueueCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueDestroyRegisterCallback, ze_result_t, zelTracerCommandQueueDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueExecuteCommandListsRegisterCallback, ze_result_t, zelTracerCommandQueueExecuteCommandListsRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueExecuteCommandListsCb_t, pfnExecuteCommandListsCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueSynchronizeRegisterCallback, ze_result_t, zelTracerCommandQueueSynchronizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueSynchronizeCb_t, pfnSynchronizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueGetOrdinalRegisterCallback, ze_result_t, zelTracerCommandQueueGetOrdinalRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueGetOrdinalCb_t, pfnGetOrdinalCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandQueueGetIndexRegisterCallback, ze_result_t, zelTracerCommandQueueGetIndexRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandQueueGetIndexCb_t, pfnGetIndexCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListCreateRegisterCallback, ze_result_t, zelTracerCommandListCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListCreateImmediateRegisterCallback, ze_result_t, zelTracerCommandListCreateImmediateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListCreateImmediateCb_t, pfnCreateImmediateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListDestroyRegisterCallback, ze_result_t, zelTracerCommandListDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListCloseRegisterCallback, ze_result_t, zelTracerCommandListCloseRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListCloseCb_t, pfnCloseCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListResetRegisterCallback, ze_result_t, zelTracerCommandListResetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListResetCb_t, pfnResetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendWriteGlobalTimestampRegisterCallback, ze_result_t, zelTracerCommandListAppendWriteGlobalTimestampRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendWriteGlobalTimestampCb_t, pfnAppendWriteGlobalTimestampCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListHostSynchronizeRegisterCallback, ze_result_t, zelTracerCommandListHostSynchronizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListHostSynchronizeCb_t, pfnHostSynchronizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListGetDeviceHandleRegisterCallback, ze_result_t, zelTracerCommandListGetDeviceHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListGetDeviceHandleCb_t, pfnGetDeviceHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListGetContextHandleRegisterCallback, ze_result_t, zelTracerCommandListGetContextHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListGetContextHandleCb_t, pfnGetContextHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListGetOrdinalRegisterCallback, ze_result_t, zelTracerCommandListGetOrdinalRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListGetOrdinalCb_t, pfnGetOrdinalCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListImmediateGetIndexRegisterCallback, ze_result_t, zelTracerCommandListImmediateGetIndexRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListImmediateGetIndexCb_t, pfnImmediateGetIndexCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListIsImmediateRegisterCallback, ze_result_t, zelTracerCommandListIsImmediateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListIsImmediateCb_t, pfnIsImmediateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendBarrierRegisterCallback, ze_result_t, zelTracerCommandListAppendBarrierRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendBarrierCb_t, pfnAppendBarrierCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryRangesBarrierRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryRangesBarrierRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryRangesBarrierCb_t, pfnAppendMemoryRangesBarrierCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextSystemBarrierRegisterCallback, ze_result_t, zelTracerContextSystemBarrierRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextSystemBarrierCb_t, pfnSystemBarrierCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryCopyRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryCopyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryCopyCb_t, pfnAppendMemoryCopyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryFillRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryFillRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryFillCb_t, pfnAppendMemoryFillCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryCopyRegionRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryCopyRegionRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryCopyRegionCb_t, pfnAppendMemoryCopyRegionCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryCopyFromContextRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryCopyFromContextRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryCopyFromContextCb_t, pfnAppendMemoryCopyFromContextCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyCb_t, pfnAppendImageCopyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyRegionRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyRegionRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyRegionCb_t, pfnAppendImageCopyRegionCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyToMemoryRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyToMemoryRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyToMemoryCb_t, pfnAppendImageCopyToMemoryCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyFromMemoryRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyFromMemoryRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyFromMemoryCb_t, pfnAppendImageCopyFromMemoryCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemoryPrefetchRegisterCallback, ze_result_t, zelTracerCommandListAppendMemoryPrefetchRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemoryPrefetchCb_t, pfnAppendMemoryPrefetchCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendMemAdviseRegisterCallback, ze_result_t, zelTracerCommandListAppendMemAdviseRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendMemAdviseCb_t, pfnAppendMemAdviseCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolCreateRegisterCallback, ze_result_t, zelTracerEventPoolCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolDestroyRegisterCallback, ze_result_t, zelTracerEventPoolDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventCreateRegisterCallback, ze_result_t, zelTracerEventCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventDestroyRegisterCallback, ze_result_t, zelTracerEventDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolGetIpcHandleRegisterCallback, ze_result_t, zelTracerEventPoolGetIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolGetIpcHandleCb_t, pfnGetIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolPutIpcHandleRegisterCallback, ze_result_t, zelTracerEventPoolPutIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolPutIpcHandleCb_t, pfnPutIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolOpenIpcHandleRegisterCallback, ze_result_t, zelTracerEventPoolOpenIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolOpenIpcHandleCb_t, pfnOpenIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolCloseIpcHandleRegisterCallback, ze_result_t, zelTracerEventPoolCloseIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolCloseIpcHandleCb_t, pfnCloseIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendSignalEventRegisterCallback, ze_result_t, zelTracerCommandListAppendSignalEventRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendSignalEventCb_t, pfnAppendSignalEventCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendWaitOnEventsRegisterCallback, ze_result_t, zelTracerCommandListAppendWaitOnEventsRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendWaitOnEventsCb_t, pfnAppendWaitOnEventsCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventHostSignalRegisterCallback, ze_result_t, zelTracerEventHostSignalRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventHostSignalCb_t, pfnHostSignalCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventHostSynchronizeRegisterCallback, ze_result_t, zelTracerEventHostSynchronizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventHostSynchronizeCb_t, pfnHostSynchronizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventQueryStatusRegisterCallback, ze_result_t, zelTracerEventQueryStatusRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventQueryStatusCb_t, pfnQueryStatusCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendEventResetRegisterCallback, ze_result_t, zelTracerCommandListAppendEventResetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendEventResetCb_t, pfnAppendEventResetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventHostResetRegisterCallback, ze_result_t, zelTracerEventHostResetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventHostResetCb_t, pfnHostResetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventQueryKernelTimestampRegisterCallback, ze_result_t, zelTracerEventQueryKernelTimestampRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventQueryKernelTimestampCb_t, pfnQueryKernelTimestampCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendQueryKernelTimestampsRegisterCallback, ze_result_t, zelTracerCommandListAppendQueryKernelTimestampsRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendQueryKernelTimestampsCb_t, pfnAppendQueryKernelTimestampsCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventGetEventPoolRegisterCallback, ze_result_t, zelTracerEventGetEventPoolRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventGetEventPoolCb_t, pfnGetEventPoolCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventGetSignalScopeRegisterCallback, ze_result_t, zelTracerEventGetSignalScopeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventGetSignalScopeCb_t, pfnGetSignalScopeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventGetWaitScopeRegisterCallback, ze_result_t, zelTracerEventGetWaitScopeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventGetWaitScopeCb_t, pfnGetWaitScopeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolGetContextHandleRegisterCallback, ze_result_t, zelTracerEventPoolGetContextHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolGetContextHandleCb_t, pfnGetContextHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventPoolGetFlagsRegisterCallback, ze_result_t, zelTracerEventPoolGetFlagsRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventPoolGetFlagsCb_t, pfnGetFlagsCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFenceCreateRegisterCallback, ze_result_t, zelTracerFenceCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFenceCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFenceDestroyRegisterCallback, ze_result_t, zelTracerFenceDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFenceDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFenceHostSynchronizeRegisterCallback, ze_result_t, zelTracerFenceHostSynchronizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFenceHostSynchronizeCb_t, pfnHostSynchronizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFenceQueryStatusRegisterCallback, ze_result_t, zelTracerFenceQueryStatusRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFenceQueryStatusCb_t, pfnQueryStatusCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFenceResetRegisterCallback, ze_result_t, zelTracerFenceResetRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFenceResetCb_t, pfnResetCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageGetPropertiesRegisterCallback, ze_result_t, zelTracerImageGetPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageGetPropertiesCb_t, pfnGetPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageCreateRegisterCallback, ze_result_t, zelTracerImageCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageDestroyRegisterCallback, ze_result_t, zelTracerImageDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemAllocSharedRegisterCallback, ze_result_t, zelTracerMemAllocSharedRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemAllocSharedCb_t, pfnAllocSharedCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemAllocDeviceRegisterCallback, ze_result_t, zelTracerMemAllocDeviceRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemAllocDeviceCb_t, pfnAllocDeviceCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemAllocHostRegisterCallback, ze_result_t, zelTracerMemAllocHostRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemAllocHostCb_t, pfnAllocHostCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemFreeRegisterCallback, ze_result_t, zelTracerMemFreeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemFreeCb_t, pfnFreeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetAllocPropertiesRegisterCallback, ze_result_t, zelTracerMemGetAllocPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetAllocPropertiesCb_t, pfnGetAllocPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetAddressRangeRegisterCallback, ze_result_t, zelTracerMemGetAddressRangeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetAddressRangeCb_t, pfnGetAddressRangeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetIpcHandleRegisterCallback, ze_result_t, zelTracerMemGetIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetIpcHandleCb_t, pfnGetIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetIpcHandleFromFileDescriptorExpRegisterCallback, ze_result_t, zelTracerMemGetIpcHandleFromFileDescriptorExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetIpcHandleFromFileDescriptorExpCb_t, pfnGetIpcHandleFromFileDescriptorExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetFileDescriptorFromIpcHandleExpRegisterCallback, ze_result_t, zelTracerMemGetFileDescriptorFromIpcHandleExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetFileDescriptorFromIpcHandleExpCb_t, pfnGetFileDescriptorFromIpcHandleExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemPutIpcHandleRegisterCallback, ze_result_t, zelTracerMemPutIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemPutIpcHandleCb_t, pfnPutIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemOpenIpcHandleRegisterCallback, ze_result_t, zelTracerMemOpenIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemOpenIpcHandleCb_t, pfnOpenIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemCloseIpcHandleRegisterCallback, ze_result_t, zelTracerMemCloseIpcHandleRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemCloseIpcHandleCb_t, pfnCloseIpcHandleCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemSetAtomicAccessAttributeExpRegisterCallback, ze_result_t, zelTracerMemSetAtomicAccessAttributeExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemSetAtomicAccessAttributeExpCb_t, pfnSetAtomicAccessAttributeExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetAtomicAccessAttributeExpRegisterCallback, ze_result_t, zelTracerMemGetAtomicAccessAttributeExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetAtomicAccessAttributeExpCb_t, pfnGetAtomicAccessAttributeExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleCreateRegisterCallback, ze_result_t, zelTracerModuleCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleDestroyRegisterCallback, ze_result_t, zelTracerModuleDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleDynamicLinkRegisterCallback, ze_result_t, zelTracerModuleDynamicLinkRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleDynamicLinkCb_t, pfnDynamicLinkCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleBuildLogDestroyRegisterCallback, ze_result_t, zelTracerModuleBuildLogDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleBuildLogDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleBuildLogGetStringRegisterCallback, ze_result_t, zelTracerModuleBuildLogGetStringRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleBuildLogGetStringCb_t, pfnGetStringCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleGetNativeBinaryRegisterCallback, ze_result_t, zelTracerModuleGetNativeBinaryRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleGetNativeBinaryCb_t, pfnGetNativeBinaryCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleGetGlobalPointerRegisterCallback, ze_result_t, zelTracerModuleGetGlobalPointerRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleGetGlobalPointerCb_t, pfnGetGlobalPointerCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleGetKernelNamesRegisterCallback, ze_result_t, zelTracerModuleGetKernelNamesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleGetKernelNamesCb_t, pfnGetKernelNamesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleGetPropertiesRegisterCallback, ze_result_t, zelTracerModuleGetPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleGetPropertiesCb_t, pfnGetPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelCreateRegisterCallback, ze_result_t, zelTracerKernelCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelDestroyRegisterCallback, ze_result_t, zelTracerKernelDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleGetFunctionPointerRegisterCallback, ze_result_t, zelTracerModuleGetFunctionPointerRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleGetFunctionPointerCb_t, pfnGetFunctionPointerCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSetGroupSizeRegisterCallback, ze_result_t, zelTracerKernelSetGroupSizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSetGroupSizeCb_t, pfnSetGroupSizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSuggestGroupSizeRegisterCallback, ze_result_t, zelTracerKernelSuggestGroupSizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSuggestGroupSizeCb_t, pfnSuggestGroupSizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSuggestMaxCooperativeGroupCountRegisterCallback, ze_result_t, zelTracerKernelSuggestMaxCooperativeGroupCountRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSuggestMaxCooperativeGroupCountCb_t, pfnSuggestMaxCooperativeGroupCountCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSetArgumentValueRegisterCallback, ze_result_t, zelTracerKernelSetArgumentValueRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSetArgumentValueCb_t, pfnSetArgumentValueCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSetIndirectAccessRegisterCallback, ze_result_t, zelTracerKernelSetIndirectAccessRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSetIndirectAccessCb_t, pfnSetIndirectAccessCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelGetIndirectAccessRegisterCallback, ze_result_t, zelTracerKernelGetIndirectAccessRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelGetIndirectAccessCb_t, pfnGetIndirectAccessCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelGetSourceAttributesRegisterCallback, ze_result_t, zelTracerKernelGetSourceAttributesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelGetSourceAttributesCb_t, pfnGetSourceAttributesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSetCacheConfigRegisterCallback, ze_result_t, zelTracerKernelSetCacheConfigRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSetCacheConfigCb_t, pfnSetCacheConfigCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelGetPropertiesRegisterCallback, ze_result_t, zelTracerKernelGetPropertiesRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelGetPropertiesCb_t, pfnGetPropertiesCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelGetNameRegisterCallback, ze_result_t, zelTracerKernelGetNameRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelGetNameCb_t, pfnGetNameCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendLaunchKernelRegisterCallback, ze_result_t, zelTracerCommandListAppendLaunchKernelRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendLaunchKernelCb_t, pfnAppendLaunchKernelCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendLaunchCooperativeKernelRegisterCallback, ze_result_t, zelTracerCommandListAppendLaunchCooperativeKernelRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendLaunchCooperativeKernelCb_t, pfnAppendLaunchCooperativeKernelCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendLaunchKernelIndirectRegisterCallback, ze_result_t, zelTracerCommandListAppendLaunchKernelIndirectRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendLaunchKernelIndirectCb_t, pfnAppendLaunchKernelIndirectCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendLaunchMultipleKernelsIndirectRegisterCallback, ze_result_t, zelTracerCommandListAppendLaunchMultipleKernelsIndirectRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendLaunchMultipleKernelsIndirectCb_t, pfnAppendLaunchMultipleKernelsIndirectCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextMakeMemoryResidentRegisterCallback, ze_result_t, zelTracerContextMakeMemoryResidentRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextMakeMemoryResidentCb_t, pfnMakeMemoryResidentCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextEvictMemoryRegisterCallback, ze_result_t, zelTracerContextEvictMemoryRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextEvictMemoryCb_t, pfnEvictMemoryCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextMakeImageResidentRegisterCallback, ze_result_t, zelTracerContextMakeImageResidentRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextMakeImageResidentCb_t, pfnMakeImageResidentCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerContextEvictImageRegisterCallback, ze_result_t, zelTracerContextEvictImageRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnContextEvictImageCb_t, pfnEvictImageCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerSamplerCreateRegisterCallback, ze_result_t, zelTracerSamplerCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnSamplerCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerSamplerDestroyRegisterCallback, ze_result_t, zelTracerSamplerDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnSamplerDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemReserveRegisterCallback, ze_result_t, zelTracerVirtualMemReserveRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemReserveCb_t, pfnReserveCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemFreeRegisterCallback, ze_result_t, zelTracerVirtualMemFreeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemFreeCb_t, pfnFreeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemQueryPageSizeRegisterCallback, ze_result_t, zelTracerVirtualMemQueryPageSizeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemQueryPageSizeCb_t, pfnQueryPageSizeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerPhysicalMemCreateRegisterCallback, ze_result_t, zelTracerPhysicalMemCreateRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnPhysicalMemCreateCb_t, pfnCreateCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerPhysicalMemDestroyRegisterCallback, ze_result_t, zelTracerPhysicalMemDestroyRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnPhysicalMemDestroyCb_t, pfnDestroyCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemMapRegisterCallback, ze_result_t, zelTracerVirtualMemMapRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemMapCb_t, pfnMapCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemUnmapRegisterCallback, ze_result_t, zelTracerVirtualMemUnmapRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemUnmapCb_t, pfnUnmapCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemSetAccessAttributeRegisterCallback, ze_result_t, zelTracerVirtualMemSetAccessAttributeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemSetAccessAttributeCb_t, pfnSetAccessAttributeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerVirtualMemGetAccessAttributeRegisterCallback, ze_result_t, zelTracerVirtualMemGetAccessAttributeRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnVirtualMemGetAccessAttributeCb_t, pfnGetAccessAttributeCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSetGlobalOffsetExpRegisterCallback, ze_result_t, zelTracerKernelSetGlobalOffsetExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSetGlobalOffsetExpCb_t, pfnSetGlobalOffsetExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelGetBinaryExpRegisterCallback, ze_result_t, zelTracerKernelGetBinaryExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelGetBinaryExpCb_t, pfnGetBinaryExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceImportExternalSemaphoreExtRegisterCallback, ze_result_t, zelTracerDeviceImportExternalSemaphoreExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceImportExternalSemaphoreExtCb_t, pfnImportExternalSemaphoreExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceReleaseExternalSemaphoreExtRegisterCallback, ze_result_t, zelTracerDeviceReleaseExternalSemaphoreExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceReleaseExternalSemaphoreExtCb_t, pfnReleaseExternalSemaphoreExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendSignalExternalSemaphoreExtRegisterCallback, ze_result_t, zelTracerCommandListAppendSignalExternalSemaphoreExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendSignalExternalSemaphoreExtCb_t, pfnAppendSignalExternalSemaphoreExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendWaitExternalSemaphoreExtRegisterCallback, ze_result_t, zelTracerCommandListAppendWaitExternalSemaphoreExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendWaitExternalSemaphoreExtCb_t, pfnAppendWaitExternalSemaphoreExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderCreateExtRegisterCallback, ze_result_t, zelTracerRTASBuilderCreateExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderCreateExtCb_t, pfnCreateExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderGetBuildPropertiesExtRegisterCallback, ze_result_t, zelTracerRTASBuilderGetBuildPropertiesExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderGetBuildPropertiesExtCb_t, pfnGetBuildPropertiesExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverRTASFormatCompatibilityCheckExtRegisterCallback, ze_result_t, zelTracerDriverRTASFormatCompatibilityCheckExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverRTASFormatCompatibilityCheckExtCb_t, pfnRTASFormatCompatibilityCheckExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderBuildExtRegisterCallback, ze_result_t, zelTracerRTASBuilderBuildExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderBuildExtCb_t, pfnBuildExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderCommandListAppendCopyExtRegisterCallback, ze_result_t, zelTracerRTASBuilderCommandListAppendCopyExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderCommandListAppendCopyExtCb_t, pfnCommandListAppendCopyExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderDestroyExtRegisterCallback, ze_result_t, zelTracerRTASBuilderDestroyExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderDestroyExtCb_t, pfnDestroyExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationCreateExtRegisterCallback, ze_result_t, zelTracerRTASParallelOperationCreateExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationCreateExtCb_t, pfnCreateExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationGetPropertiesExtRegisterCallback, ze_result_t, zelTracerRTASParallelOperationGetPropertiesExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationGetPropertiesExtCb_t, pfnGetPropertiesExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationJoinExtRegisterCallback, ze_result_t, zelTracerRTASParallelOperationJoinExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationJoinExtCb_t, pfnJoinExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationDestroyExtRegisterCallback, ze_result_t, zelTracerRTASParallelOperationDestroyExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationDestroyExtCb_t, pfnDestroyExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetVectorWidthPropertiesExtRegisterCallback, ze_result_t, zelTracerDeviceGetVectorWidthPropertiesExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetVectorWidthPropertiesExtCb_t, pfnGetVectorWidthPropertiesExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceReserveCacheExtRegisterCallback, ze_result_t, zelTracerDeviceReserveCacheExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceReserveCacheExtCb_t, pfnReserveCacheExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceSetCacheAdviceExtRegisterCallback, ze_result_t, zelTracerDeviceSetCacheAdviceExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceSetCacheAdviceExtCb_t, pfnSetCacheAdviceExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventQueryTimestampsExpRegisterCallback, ze_result_t, zelTracerEventQueryTimestampsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventQueryTimestampsExpCb_t, pfnQueryTimestampsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageGetMemoryPropertiesExpRegisterCallback, ze_result_t, zelTracerImageGetMemoryPropertiesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageGetMemoryPropertiesExpCb_t, pfnGetMemoryPropertiesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageViewCreateExtRegisterCallback, ze_result_t, zelTracerImageViewCreateExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageViewCreateExtCb_t, pfnViewCreateExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageViewCreateExpRegisterCallback, ze_result_t, zelTracerImageViewCreateExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageViewCreateExpCb_t, pfnViewCreateExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerKernelSchedulingHintExpRegisterCallback, ze_result_t, zelTracerKernelSchedulingHintExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnKernelSchedulingHintExpCb_t, pfnSchedulingHintExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDevicePciGetPropertiesExtRegisterCallback, ze_result_t, zelTracerDevicePciGetPropertiesExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDevicePciGetPropertiesExtCb_t, pfnPciGetPropertiesExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyToMemoryExtRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyToMemoryExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyToMemoryExtCb_t, pfnAppendImageCopyToMemoryExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListAppendImageCopyFromMemoryExtRegisterCallback, ze_result_t, zelTracerCommandListAppendImageCopyFromMemoryExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListAppendImageCopyFromMemoryExtCb_t, pfnAppendImageCopyFromMemoryExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageGetAllocPropertiesExtRegisterCallback, ze_result_t, zelTracerImageGetAllocPropertiesExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageGetAllocPropertiesExtCb_t, pfnGetAllocPropertiesExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerModuleInspectLinkageExtRegisterCallback, ze_result_t, zelTracerModuleInspectLinkageExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnModuleInspectLinkageExtCb_t, pfnInspectLinkageExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemFreeExtRegisterCallback, ze_result_t, zelTracerMemFreeExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemFreeExtCb_t, pfnFreeExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricVertexGetExpRegisterCallback, ze_result_t, zelTracerFabricVertexGetExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricVertexGetExpCb_t, pfnGetExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricVertexGetSubVerticesExpRegisterCallback, ze_result_t, zelTracerFabricVertexGetSubVerticesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricVertexGetSubVerticesExpCb_t, pfnGetSubVerticesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricVertexGetPropertiesExpRegisterCallback, ze_result_t, zelTracerFabricVertexGetPropertiesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricVertexGetPropertiesExpCb_t, pfnGetPropertiesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricVertexGetDeviceExpRegisterCallback, ze_result_t, zelTracerFabricVertexGetDeviceExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricVertexGetDeviceExpCb_t, pfnGetDeviceExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDeviceGetFabricVertexExpRegisterCallback, ze_result_t, zelTracerDeviceGetFabricVertexExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDeviceGetFabricVertexExpCb_t, pfnGetFabricVertexExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricEdgeGetExpRegisterCallback, ze_result_t, zelTracerFabricEdgeGetExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricEdgeGetExpCb_t, pfnGetExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricEdgeGetVerticesExpRegisterCallback, ze_result_t, zelTracerFabricEdgeGetVerticesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricEdgeGetVerticesExpCb_t, pfnGetVerticesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerFabricEdgeGetPropertiesExpRegisterCallback, ze_result_t, zelTracerFabricEdgeGetPropertiesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnFabricEdgeGetPropertiesExpCb_t, pfnGetPropertiesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerEventQueryKernelTimestampsExtRegisterCallback, ze_result_t, zelTracerEventQueryKernelTimestampsExtRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnEventQueryKernelTimestampsExtCb_t, pfnQueryKernelTimestampsExtCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderCreateExpRegisterCallback, ze_result_t, zelTracerRTASBuilderCreateExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderCreateExpCb_t, pfnCreateExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderGetBuildPropertiesExpRegisterCallback, ze_result_t, zelTracerRTASBuilderGetBuildPropertiesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderGetBuildPropertiesExpCb_t, pfnGetBuildPropertiesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerDriverRTASFormatCompatibilityCheckExpRegisterCallback, ze_result_t, zelTracerDriverRTASFormatCompatibilityCheckExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnDriverRTASFormatCompatibilityCheckExpCb_t, pfnRTASFormatCompatibilityCheckExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderBuildExpRegisterCallback, ze_result_t, zelTracerRTASBuilderBuildExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderBuildExpCb_t, pfnBuildExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASBuilderDestroyExpRegisterCallback, ze_result_t, zelTracerRTASBuilderDestroyExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASBuilderDestroyExpCb_t, pfnDestroyExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationCreateExpRegisterCallback, ze_result_t, zelTracerRTASParallelOperationCreateExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationCreateExpCb_t, pfnCreateExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationGetPropertiesExpRegisterCallback, ze_result_t, zelTracerRTASParallelOperationGetPropertiesExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationGetPropertiesExpCb_t, pfnGetPropertiesExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationJoinExpRegisterCallback, ze_result_t, zelTracerRTASParallelOperationJoinExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationJoinExpCb_t, pfnJoinExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerRTASParallelOperationDestroyExpRegisterCallback, ze_result_t, zelTracerRTASParallelOperationDestroyExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnRTASParallelOperationDestroyExpCb_t, pfnDestroyExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerMemGetPitchFor2dImageRegisterCallback, ze_result_t, zelTracerMemGetPitchFor2dImageRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnMemGetPitchFor2dImageCb_t, pfnGetPitchFor2dImageCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerImageGetDeviceOffsetExpRegisterCallback, ze_result_t, zelTracerImageGetDeviceOffsetExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnImageGetDeviceOffsetExpCb_t, pfnGetDeviceOffsetExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListCreateCloneExpRegisterCallback, ze_result_t, zelTracerCommandListCreateCloneExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListCreateCloneExpCb_t, pfnCreateCloneExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListImmediateAppendCommandListsExpRegisterCallback, ze_result_t, zelTracerCommandListImmediateAppendCommandListsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListImmediateAppendCommandListsExpCb_t, pfnImmediateAppendCommandListsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListGetNextCommandIdExpRegisterCallback, ze_result_t, zelTracerCommandListGetNextCommandIdExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListGetNextCommandIdExpCb_t, pfnGetNextCommandIdExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListGetNextCommandIdWithKernelsExpRegisterCallback, ze_result_t, zelTracerCommandListGetNextCommandIdWithKernelsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListGetNextCommandIdWithKernelsExpCb_t, pfnGetNextCommandIdWithKernelsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListUpdateMutableCommandsExpRegisterCallback, ze_result_t, zelTracerCommandListUpdateMutableCommandsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListUpdateMutableCommandsExpCb_t, pfnUpdateMutableCommandsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListUpdateMutableCommandSignalEventExpRegisterCallback, ze_result_t, zelTracerCommandListUpdateMutableCommandSignalEventExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListUpdateMutableCommandSignalEventExpCb_t, pfnUpdateMutableCommandSignalEventExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListUpdateMutableCommandWaitEventsExpRegisterCallback, ze_result_t, zelTracerCommandListUpdateMutableCommandWaitEventsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListUpdateMutableCommandWaitEventsExpCb_t, pfnUpdateMutableCommandWaitEventsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lTracerCommandListUpdateMutableCommandKernelsExpRegisterCallback, ze_result_t, zelTracerCommandListUpdateMutableCommandKernelsExpRegisterCallback, zel_tracer_handle_t, hTracer, zel_tracer_reg_t, callback_type, ze_pfnCommandListUpdateMutableCommandKernelsExpCb_t, pfnUpdateMutableCommandKernelsExpCb);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::lGetTracerApiProcAddrTable, ze_result_t, zelGetTracerApiProcAddrTable, ze_api_version_t, version, zel_tracer_dditable_t *, pDdiTable);

static const std::unordered_map<std::string, void *> intercept_symbol_map = {
    DLSYM_INTERCEPT_ENTRY(zeInit),
    DLSYM_INTERCEPT_ENTRY(zeDriverGet),
    DLSYM_INTERCEPT_ENTRY(zeInitDrivers),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetApiVersion),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetIpcProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetExtensionProperties),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetExtensionFunctionAddress),
    DLSYM_INTERCEPT_ENTRY(zeDriverGetLastErrorDescription),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGet),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetRootDevice),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetSubDevices),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetComputeProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetModuleProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetCommandQueueGroupProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetMemoryProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetMemoryAccessProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetCacheProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetImageProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetExternalMemoryProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetP2PProperties),
    DLSYM_INTERCEPT_ENTRY(zeDeviceCanAccessPeer),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetStatus),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetGlobalTimestamps),
    DLSYM_INTERCEPT_ENTRY(zeContextCreate),
    DLSYM_INTERCEPT_ENTRY(zeContextCreateEx),
    DLSYM_INTERCEPT_ENTRY(zeContextDestroy),
    DLSYM_INTERCEPT_ENTRY(zeContextGetStatus),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueCreate),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueDestroy),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueExecuteCommandLists),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueGetOrdinal),
    DLSYM_INTERCEPT_ENTRY(zeCommandQueueGetIndex),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreateImmediate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListDestroy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListClose),
    DLSYM_INTERCEPT_ENTRY(zeCommandListReset),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWriteGlobalTimestamp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetDeviceHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetContextHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetOrdinal),
    DLSYM_INTERCEPT_ENTRY(zeCommandListImmediateGetIndex),
    DLSYM_INTERCEPT_ENTRY(zeCommandListIsImmediate),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendBarrier),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryRangesBarrier),
    DLSYM_INTERCEPT_ENTRY(zeContextSystemBarrier),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryFill),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopyRegion),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryCopyFromContext),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopy),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyRegion),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyToMemory),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyFromMemory),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemoryPrefetch),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendMemAdvise),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolCreate),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolDestroy),
    DLSYM_INTERCEPT_ENTRY(zeEventCreate),
    DLSYM_INTERCEPT_ENTRY(zeEventDestroy),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolPutIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolOpenIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolCloseIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendSignalEvent),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWaitOnEvents),
    DLSYM_INTERCEPT_ENTRY(zeEventHostSignal),
    DLSYM_INTERCEPT_ENTRY(zeEventHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryStatus),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendEventReset),
    DLSYM_INTERCEPT_ENTRY(zeEventHostReset),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryKernelTimestamp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendQueryKernelTimestamps),
    DLSYM_INTERCEPT_ENTRY(zeEventGetEventPool),
    DLSYM_INTERCEPT_ENTRY(zeEventGetSignalScope),
    DLSYM_INTERCEPT_ENTRY(zeEventGetWaitScope),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetContextHandle),
    DLSYM_INTERCEPT_ENTRY(zeEventPoolGetFlags),
    DLSYM_INTERCEPT_ENTRY(zeFenceCreate),
    DLSYM_INTERCEPT_ENTRY(zeFenceDestroy),
    DLSYM_INTERCEPT_ENTRY(zeFenceHostSynchronize),
    DLSYM_INTERCEPT_ENTRY(zeFenceQueryStatus),
    DLSYM_INTERCEPT_ENTRY(zeFenceReset),
    DLSYM_INTERCEPT_ENTRY(zeImageGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeImageCreate),
    DLSYM_INTERCEPT_ENTRY(zeImageDestroy),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocShared),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocDevice),
    DLSYM_INTERCEPT_ENTRY(zeMemAllocHost),
    DLSYM_INTERCEPT_ENTRY(zeMemFree),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAllocProperties),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAddressRange),
    DLSYM_INTERCEPT_ENTRY(zeMemGetIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemGetIpcHandleFromFileDescriptorExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetFileDescriptorFromIpcHandleExp),
    DLSYM_INTERCEPT_ENTRY(zeMemPutIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemOpenIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemCloseIpcHandle),
    DLSYM_INTERCEPT_ENTRY(zeMemSetAtomicAccessAttributeExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetAtomicAccessAttributeExp),
    DLSYM_INTERCEPT_ENTRY(zeModuleCreate),
    DLSYM_INTERCEPT_ENTRY(zeModuleDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleDynamicLink),
    DLSYM_INTERCEPT_ENTRY(zeModuleBuildLogDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleBuildLogGetString),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetNativeBinary),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetGlobalPointer),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetKernelNames),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeKernelCreate),
    DLSYM_INTERCEPT_ENTRY(zeKernelDestroy),
    DLSYM_INTERCEPT_ENTRY(zeModuleGetFunctionPointer),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetGroupSize),
    DLSYM_INTERCEPT_ENTRY(zeKernelSuggestGroupSize),
    DLSYM_INTERCEPT_ENTRY(zeKernelSuggestMaxCooperativeGroupCount),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetArgumentValue),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetIndirectAccess),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetIndirectAccess),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetSourceAttributes),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetProperties),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetName),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchKernel),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchCooperativeKernel),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchKernelIndirect),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendLaunchMultipleKernelsIndirect),
    DLSYM_INTERCEPT_ENTRY(zeContextMakeMemoryResident),
    DLSYM_INTERCEPT_ENTRY(zeContextEvictMemory),
    DLSYM_INTERCEPT_ENTRY(zeContextMakeImageResident),
    DLSYM_INTERCEPT_ENTRY(zeContextEvictImage),
    DLSYM_INTERCEPT_ENTRY(zeSamplerCreate),
    DLSYM_INTERCEPT_ENTRY(zeSamplerDestroy),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemReserve),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemFree),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemQueryPageSize),
    DLSYM_INTERCEPT_ENTRY(zePhysicalMemCreate),
    DLSYM_INTERCEPT_ENTRY(zePhysicalMemDestroy),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemMap),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemUnmap),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemSetAccessAttribute),
    DLSYM_INTERCEPT_ENTRY(zeVirtualMemGetAccessAttribute),
    DLSYM_INTERCEPT_ENTRY(zeKernelSetGlobalOffsetExp),
    DLSYM_INTERCEPT_ENTRY(zeKernelGetBinaryExp),
    DLSYM_INTERCEPT_ENTRY(zeDeviceImportExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceReleaseExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendSignalExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendWaitExternalSemaphoreExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderCreateExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderGetBuildPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeDriverRTASFormatCompatibilityCheckExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderBuildExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderCommandListAppendCopyExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderDestroyExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationCreateExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationGetPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationJoinExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationDestroyExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetVectorWidthPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceReserveCacheExt),
    DLSYM_INTERCEPT_ENTRY(zeDeviceSetCacheAdviceExt),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryTimestampsExp),
    DLSYM_INTERCEPT_ENTRY(zeImageGetMemoryPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeImageViewCreateExt),
    DLSYM_INTERCEPT_ENTRY(zeImageViewCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeKernelSchedulingHintExp),
    DLSYM_INTERCEPT_ENTRY(zeDevicePciGetPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyToMemoryExt),
    DLSYM_INTERCEPT_ENTRY(zeCommandListAppendImageCopyFromMemoryExt),
    DLSYM_INTERCEPT_ENTRY(zeImageGetAllocPropertiesExt),
    DLSYM_INTERCEPT_ENTRY(zeModuleInspectLinkageExt),
    DLSYM_INTERCEPT_ENTRY(zeMemFreeExt),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetSubVerticesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricVertexGetDeviceExp),
    DLSYM_INTERCEPT_ENTRY(zeDeviceGetFabricVertexExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetVerticesExp),
    DLSYM_INTERCEPT_ENTRY(zeFabricEdgeGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeEventQueryKernelTimestampsExt),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderGetBuildPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeDriverRTASFormatCompatibilityCheckExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderBuildExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASBuilderDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationCreateExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationJoinExp),
    DLSYM_INTERCEPT_ENTRY(zeRTASParallelOperationDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zeMemGetPitchFor2dImage),
    DLSYM_INTERCEPT_ENTRY(zeImageGetDeviceOffsetExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListCreateCloneExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListImmediateAppendCommandListsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetNextCommandIdExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListGetNextCommandIdWithKernelsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandSignalEventExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandWaitEventsExp),
    DLSYM_INTERCEPT_ENTRY(zeCommandListUpdateMutableCommandKernelsExp),
    DLSYM_INTERCEPT_ENTRY(zesInit),
    DLSYM_INTERCEPT_ENTRY(zesDriverGet),
    DLSYM_INTERCEPT_ENTRY(zesDriverGetExtensionProperties),
    DLSYM_INTERCEPT_ENTRY(zesDriverGetExtensionFunctionAddress),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGet),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceReset),
    DLSYM_INTERCEPT_ENTRY(zesDeviceResetExt),
    DLSYM_INTERCEPT_ENTRY(zesDeviceProcessesGetState),
    DLSYM_INTERCEPT_ENTRY(zesDevicePciGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesDevicePciGetState),
    DLSYM_INTERCEPT_ENTRY(zesDevicePciGetBars),
    DLSYM_INTERCEPT_ENTRY(zesDevicePciGetStats),
    DLSYM_INTERCEPT_ENTRY(zesDeviceSetOverclockWaiver),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetOverclockDomains),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetOverclockControls),
    DLSYM_INTERCEPT_ENTRY(zesDeviceResetOverclockSettings),
    DLSYM_INTERCEPT_ENTRY(zesDeviceReadOverclockState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumOverclockDomains),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetDomainProperties),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetDomainVFProperties),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetDomainControlProperties),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetControlCurrentValue),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetControlPendingValue),
    DLSYM_INTERCEPT_ENTRY(zesOverclockSetControlUserValue),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetControlState),
    DLSYM_INTERCEPT_ENTRY(zesOverclockGetVFPointValues),
    DLSYM_INTERCEPT_ENTRY(zesOverclockSetVFPointValues),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumDiagnosticTestSuites),
    DLSYM_INTERCEPT_ENTRY(zesDiagnosticsGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesDiagnosticsGetTests),
    DLSYM_INTERCEPT_ENTRY(zesDiagnosticsRunTests),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEccAvailable),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEccConfigurable),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetEccState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceSetEccState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumEngineGroups),
    DLSYM_INTERCEPT_ENTRY(zesEngineGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesEngineGetActivity),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEventRegister),
    DLSYM_INTERCEPT_ENTRY(zesDriverEventListen),
    DLSYM_INTERCEPT_ENTRY(zesDriverEventListenEx),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumFabricPorts),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetLinkType),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetConfig),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortSetConfig),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetState),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetThroughput),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetFabricErrorCounters),
    DLSYM_INTERCEPT_ENTRY(zesFabricPortGetMultiPortThroughput),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumFans),
    DLSYM_INTERCEPT_ENTRY(zesFanGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesFanGetConfig),
    DLSYM_INTERCEPT_ENTRY(zesFanSetDefaultMode),
    DLSYM_INTERCEPT_ENTRY(zesFanSetFixedSpeedMode),
    DLSYM_INTERCEPT_ENTRY(zesFanSetSpeedTableMode),
    DLSYM_INTERCEPT_ENTRY(zesFanGetState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumFirmwares),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareFlash),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareGetFlashProgress),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareGetConsoleLogs),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumFrequencyDomains),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyGetAvailableClocks),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyGetRange),
    DLSYM_INTERCEPT_ENTRY(zesFrequencySetRange),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyGetState),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyGetThrottleTime),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetCapabilities),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetFrequencyTarget),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcSetFrequencyTarget),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetVoltageTarget),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcSetVoltageTarget),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcSetMode),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetMode),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetIccMax),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcSetIccMax),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcGetTjMax),
    DLSYM_INTERCEPT_ENTRY(zesFrequencyOcSetTjMax),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumLeds),
    DLSYM_INTERCEPT_ENTRY(zesLedGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesLedGetState),
    DLSYM_INTERCEPT_ENTRY(zesLedSetState),
    DLSYM_INTERCEPT_ENTRY(zesLedSetColor),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumMemoryModules),
    DLSYM_INTERCEPT_ENTRY(zesMemoryGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesMemoryGetState),
    DLSYM_INTERCEPT_ENTRY(zesMemoryGetBandwidth),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumPerformanceFactorDomains),
    DLSYM_INTERCEPT_ENTRY(zesPerformanceFactorGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesPerformanceFactorGetConfig),
    DLSYM_INTERCEPT_ENTRY(zesPerformanceFactorSetConfig),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumPowerDomains),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetCardPowerDomain),
    DLSYM_INTERCEPT_ENTRY(zesPowerGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesPowerGetEnergyCounter),
    DLSYM_INTERCEPT_ENTRY(zesPowerGetLimits),
    DLSYM_INTERCEPT_ENTRY(zesPowerSetLimits),
    DLSYM_INTERCEPT_ENTRY(zesPowerGetEnergyThreshold),
    DLSYM_INTERCEPT_ENTRY(zesPowerSetEnergyThreshold),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumPsus),
    DLSYM_INTERCEPT_ENTRY(zesPsuGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesPsuGetState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumRasErrorSets),
    DLSYM_INTERCEPT_ENTRY(zesRasGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesRasGetConfig),
    DLSYM_INTERCEPT_ENTRY(zesRasSetConfig),
    DLSYM_INTERCEPT_ENTRY(zesRasGetState),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumSchedulers),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerGetCurrentMode),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerGetTimeoutModeProperties),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerGetTimesliceModeProperties),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerSetTimeoutMode),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerSetTimesliceMode),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerSetExclusiveMode),
    DLSYM_INTERCEPT_ENTRY(zesSchedulerSetComputeUnitDebugMode),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumStandbyDomains),
    DLSYM_INTERCEPT_ENTRY(zesStandbyGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesStandbyGetMode),
    DLSYM_INTERCEPT_ENTRY(zesStandbySetMode),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumTemperatureSensors),
    DLSYM_INTERCEPT_ENTRY(zesTemperatureGetProperties),
    DLSYM_INTERCEPT_ENTRY(zesTemperatureGetConfig),
    DLSYM_INTERCEPT_ENTRY(zesTemperatureSetConfig),
    DLSYM_INTERCEPT_ENTRY(zesTemperatureGetState),
    DLSYM_INTERCEPT_ENTRY(zesPowerGetLimitsExt),
    DLSYM_INTERCEPT_ENTRY(zesPowerSetLimitsExt),
    DLSYM_INTERCEPT_ENTRY(zesEngineGetActivityExt),
    DLSYM_INTERCEPT_ENTRY(zesRasGetStateExp),
    DLSYM_INTERCEPT_ENTRY(zesRasClearStateExp),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareGetSecurityVersionExp),
    DLSYM_INTERCEPT_ENTRY(zesFirmwareSetSecurityVersionExp),
    DLSYM_INTERCEPT_ENTRY(zesDeviceGetSubDevicePropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zesDriverGetDeviceByUuidExp),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumActiveVFExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFMemoryUtilizationExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFEngineUtilizationExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementSetVFTelemetryModeExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementSetVFTelemetrySamplingIntervalExp),
    DLSYM_INTERCEPT_ENTRY(zesDeviceEnumEnabledVFExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFCapabilitiesExp),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFMemoryUtilizationExp2),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFEngineUtilizationExp2),
    DLSYM_INTERCEPT_ENTRY(zesVFManagementGetVFCapabilitiesExp2),
    DLSYM_INTERCEPT_ENTRY(zetModuleGetDebugInfo),
    DLSYM_INTERCEPT_ENTRY(zetDeviceGetDebugProperties),
    DLSYM_INTERCEPT_ENTRY(zetDebugAttach),
    DLSYM_INTERCEPT_ENTRY(zetDebugDetach),
    DLSYM_INTERCEPT_ENTRY(zetDebugReadEvent),
    DLSYM_INTERCEPT_ENTRY(zetDebugAcknowledgeEvent),
    DLSYM_INTERCEPT_ENTRY(zetDebugInterrupt),
    DLSYM_INTERCEPT_ENTRY(zetDebugResume),
    DLSYM_INTERCEPT_ENTRY(zetDebugReadMemory),
    DLSYM_INTERCEPT_ENTRY(zetDebugWriteMemory),
    DLSYM_INTERCEPT_ENTRY(zetDebugGetRegisterSetProperties),
    DLSYM_INTERCEPT_ENTRY(zetDebugGetThreadRegisterSetProperties),
    DLSYM_INTERCEPT_ENTRY(zetDebugReadRegisters),
    DLSYM_INTERCEPT_ENTRY(zetDebugWriteRegisters),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupGet),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupGetProperties),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupCalculateMetricValues),
    DLSYM_INTERCEPT_ENTRY(zetMetricGet),
    DLSYM_INTERCEPT_ENTRY(zetMetricGetProperties),
    DLSYM_INTERCEPT_ENTRY(zetContextActivateMetricGroups),
    DLSYM_INTERCEPT_ENTRY(zetMetricStreamerOpen),
    DLSYM_INTERCEPT_ENTRY(zetCommandListAppendMetricStreamerMarker),
    DLSYM_INTERCEPT_ENTRY(zetMetricStreamerClose),
    DLSYM_INTERCEPT_ENTRY(zetMetricStreamerReadData),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryPoolCreate),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryPoolDestroy),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryCreate),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryDestroy),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryReset),
    DLSYM_INTERCEPT_ENTRY(zetCommandListAppendMetricQueryBegin),
    DLSYM_INTERCEPT_ENTRY(zetCommandListAppendMetricQueryEnd),
    DLSYM_INTERCEPT_ENTRY(zetCommandListAppendMetricMemoryBarrier),
    DLSYM_INTERCEPT_ENTRY(zetMetricQueryGetData),
    DLSYM_INTERCEPT_ENTRY(zetKernelGetProfileInfo),
    DLSYM_INTERCEPT_ENTRY(zetTracerExpCreate),
    DLSYM_INTERCEPT_ENTRY(zetTracerExpDestroy),
    DLSYM_INTERCEPT_ENTRY(zetTracerExpSetPrologues),
    DLSYM_INTERCEPT_ENTRY(zetTracerExpSetEpilogues),
    DLSYM_INTERCEPT_ENTRY(zetTracerExpSetEnabled),
    DLSYM_INTERCEPT_ENTRY(zetDeviceGetConcurrentMetricGroupsExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerCreateExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerEnableExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerDisableExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerReadDataExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricDecoderCreateExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricDecoderDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricDecoderGetDecodableMetricsExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricTracerDecodeExp),
    DLSYM_INTERCEPT_ENTRY(zetCommandListAppendMarkerExp),
    DLSYM_INTERCEPT_ENTRY(zetDeviceEnableMetricsExp),
    DLSYM_INTERCEPT_ENTRY(zetDeviceDisableMetricsExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupCalculateMultipleMetricValuesExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupGetGlobalTimestampsExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupGetExportDataExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupCalculateMetricExportDataExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricProgrammableGetExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricProgrammableGetPropertiesExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricProgrammableGetParamInfoExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricProgrammableGetParamValueInfoExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricCreateFromProgrammableExp2),
    DLSYM_INTERCEPT_ENTRY(zetMetricCreateFromProgrammableExp),
    DLSYM_INTERCEPT_ENTRY(zetDeviceCreateMetricGroupsFromMetricsExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupCreateExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupAddMetricExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupRemoveMetricExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupCloseExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricGroupDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zetMetricDestroyExp),
    DLSYM_INTERCEPT_ENTRY(zelTracerCreate),
    DLSYM_INTERCEPT_ENTRY(zelTracerDestroy),
    DLSYM_INTERCEPT_ENTRY(zelTracerSetPrologues),
    DLSYM_INTERCEPT_ENTRY(zelTracerSetEpilogues),
    DLSYM_INTERCEPT_ENTRY(zelTracerSetEnabled),
    DLSYM_INTERCEPT_ENTRY(zesGetGlobalProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetDeviceProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetDeviceExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetDriverProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetDriverExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetOverclockProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetSchedulerProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetPerformanceFactorProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetPowerProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetFrequencyProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetEngineProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetStandbyProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetFirmwareProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetFirmwareExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetMemoryProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetFabricPortProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetTemperatureProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetPsuProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetFanProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetLedProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetRasProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetRasExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetDiagnosticsProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zesGetVFManagementExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricProgrammableExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricTracerExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricDecoderExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetDeviceProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetDeviceExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetContextProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetCommandListProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetCommandListExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetModuleProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetKernelProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricGroupProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricGroupExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricStreamerProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricQueryPoolProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetMetricQueryProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetTracerExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zetGetDebugProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetRTASBuilderProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetRTASBuilderExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetRTASParallelOperationProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetRTASParallelOperationExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetGlobalProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetDriverProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetDriverExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetDeviceProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetDeviceExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetContextProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetCommandQueueProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetCommandListProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetCommandListExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetImageProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetImageExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetMemProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetMemExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetFenceProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetEventPoolProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetEventProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetEventExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetModuleProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetModuleBuildLogProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetKernelProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetKernelExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetSamplerProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetPhysicalMemProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetVirtualMemProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetFabricVertexExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zeGetFabricEdgeExpProcAddrTable),
    DLSYM_INTERCEPT_ENTRY(zelLoaderGetVersions),
    DLSYM_INTERCEPT_ENTRY(zelLoaderTranslateHandle),
    DLSYM_INTERCEPT_ENTRY(zelSetDriverTeardown),
    DLSYM_INTERCEPT_ENTRY(zelSetDelayLoaderContextTeardown),
    DLSYM_INTERCEPT_ENTRY(zelLoaderContextTeardown),
    DLSYM_INTERCEPT_ENTRY(zelEnableTracingLayer),
    DLSYM_INTERCEPT_ENTRY(zelCheckIsLoaderInTearDown),
    DLSYM_INTERCEPT_ENTRY(zelRegisterTeardownCallback),
    DLSYM_INTERCEPT_ENTRY(zelDisableTracingLayer),
    DLSYM_INTERCEPT_ENTRY(zelTracerInitRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerInitDriversRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetApiVersionRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetIpcPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetExtensionPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetExtensionFunctionAddressRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverGetLastErrorDescriptionRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetRootDeviceRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetSubDevicesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetComputePropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetModulePropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetCommandQueueGroupPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetMemoryPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetMemoryAccessPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetCachePropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetImagePropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetExternalMemoryPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetP2PPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceCanAccessPeerRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetStatusRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetGlobalTimestampsRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextCreateExRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextGetStatusRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueExecuteCommandListsRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueSynchronizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueGetOrdinalRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandQueueGetIndexRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListCreateImmediateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListCloseRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListResetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendWriteGlobalTimestampRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListHostSynchronizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListGetDeviceHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListGetContextHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListGetOrdinalRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListImmediateGetIndexRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListIsImmediateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendBarrierRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryRangesBarrierRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextSystemBarrierRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryCopyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryFillRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryCopyRegionRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryCopyFromContextRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyRegionRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyToMemoryRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyFromMemoryRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemoryPrefetchRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendMemAdviseRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolGetIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolPutIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolOpenIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolCloseIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendSignalEventRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendWaitOnEventsRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventHostSignalRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventHostSynchronizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventQueryStatusRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendEventResetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventHostResetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventQueryKernelTimestampRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendQueryKernelTimestampsRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventGetEventPoolRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventGetSignalScopeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventGetWaitScopeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolGetContextHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventPoolGetFlagsRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFenceCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFenceDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFenceHostSynchronizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFenceQueryStatusRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFenceResetRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageGetPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemAllocSharedRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemAllocDeviceRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemAllocHostRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemFreeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetAllocPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetAddressRangeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetIpcHandleFromFileDescriptorExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetFileDescriptorFromIpcHandleExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemPutIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemOpenIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemCloseIpcHandleRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemSetAtomicAccessAttributeExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetAtomicAccessAttributeExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleDynamicLinkRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleBuildLogDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleBuildLogGetStringRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleGetNativeBinaryRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleGetGlobalPointerRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleGetKernelNamesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleGetPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleGetFunctionPointerRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSetGroupSizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSuggestGroupSizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSuggestMaxCooperativeGroupCountRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSetArgumentValueRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSetIndirectAccessRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelGetIndirectAccessRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelGetSourceAttributesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSetCacheConfigRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelGetPropertiesRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelGetNameRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendLaunchKernelRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendLaunchCooperativeKernelRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendLaunchKernelIndirectRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendLaunchMultipleKernelsIndirectRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextMakeMemoryResidentRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextEvictMemoryRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextMakeImageResidentRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerContextEvictImageRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerSamplerCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerSamplerDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemReserveRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemFreeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemQueryPageSizeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerPhysicalMemCreateRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerPhysicalMemDestroyRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemMapRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemUnmapRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemSetAccessAttributeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerVirtualMemGetAccessAttributeRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSetGlobalOffsetExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelGetBinaryExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceImportExternalSemaphoreExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceReleaseExternalSemaphoreExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendSignalExternalSemaphoreExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendWaitExternalSemaphoreExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderCreateExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderGetBuildPropertiesExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverRTASFormatCompatibilityCheckExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderBuildExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderCommandListAppendCopyExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderDestroyExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationCreateExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationGetPropertiesExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationJoinExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationDestroyExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetVectorWidthPropertiesExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceReserveCacheExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceSetCacheAdviceExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventQueryTimestampsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageGetMemoryPropertiesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageViewCreateExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageViewCreateExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerKernelSchedulingHintExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDevicePciGetPropertiesExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyToMemoryExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListAppendImageCopyFromMemoryExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageGetAllocPropertiesExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerModuleInspectLinkageExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemFreeExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricVertexGetExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricVertexGetSubVerticesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricVertexGetPropertiesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricVertexGetDeviceExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDeviceGetFabricVertexExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricEdgeGetExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricEdgeGetVerticesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerFabricEdgeGetPropertiesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerEventQueryKernelTimestampsExtRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderCreateExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderGetBuildPropertiesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerDriverRTASFormatCompatibilityCheckExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderBuildExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASBuilderDestroyExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationCreateExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationGetPropertiesExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationJoinExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerRTASParallelOperationDestroyExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerMemGetPitchFor2dImageRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerImageGetDeviceOffsetExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListCreateCloneExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListImmediateAppendCommandListsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListGetNextCommandIdExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListGetNextCommandIdWithKernelsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListUpdateMutableCommandsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListUpdateMutableCommandSignalEventExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListUpdateMutableCommandWaitEventsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelTracerCommandListUpdateMutableCommandKernelsExpRegisterCallback),
    DLSYM_INTERCEPT_ENTRY(zelGetTracerApiProcAddrTable),
};

DEFINE_DLSYM_INTERCEPT(intercept_symbol_map);
